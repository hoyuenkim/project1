{"ast":null,"code":"import { List, Avatar, Card, Button, Row, Col, Divider, Empty } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RestOutlined } from '@ant-design/icons';\nimport CartAmountToggle from '../../components/Generalui/CartAmoutToggle';\nimport NumberFormat from 'react-number-format';\nimport { REMOVE_ITEM_REQUEST, CLEAR_CART_REQUEST } from '../../reducers/cart'; // import { PAYMENT_SUCCESS, PAYMENT_FAILURE } from '../../reducers/payment';\n\nimport { useState, useEffect } from 'react';\nimport { useWindowSize } from '@react-hook/window-size';\nimport axios from 'axios';\nimport { useRouter } from 'next/router';\nimport { onClickPayment } from '../../components/Generalui/Payment';\nimport util from 'util';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nconst Cart = () => {\n  const dispatch = useDispatch();\n  const {\n    0: IMP,\n    1: setIMP\n  } = useState(null);\n  const {\n    cart,\n    ShopId,\n    TableId\n  } = useSelector(state => state.cart);\n  const {\n    isLoggedIn,\n    session\n  } = useSelector(state => state.user);\n  const [windowWidth, windowHeight] = useWindowSize();\n  const router = useRouter();\n  const product = cart[0];\n  const promisedPayment = util.promisify(onClickPayment);\n\n  const paymentStart = () => {\n    promisedPayment('cart', product, isLoggedIn, session, cart).then(() => dispatch({\n      type: CLEAR_CART_REQUEST\n    })).then(() => {\n      console.log('routing');\n      router.push(TableId == undefined ? `/menu/${ShopId}` : `/menu/${ShopId}/${TableId}`);\n    });\n  }; // const onWindowScroll = () => {\n  //   window.scrollTo({ top: 0 });\n  // };\n  // const product = cart[0];\n  // let amount = 0;\n  // cart.map(\n  //   (product) =>\n  //     (amount += product.Discount\n  //       ? product.price *\n  //         (100 - product.Discount.rate) *\n  //         0.01 *\n  //         product.quantity\n  //       : product.price * product.quantity)\n  // );\n  // useEffect(() => {\n  //   const { IMP } = window;\n  //   setIMP(IMP);\n  // }, []);\n  // const onClickPayment = () => {\n  //   onWindowScroll();\n  //   const name =\n  //     cart.length > 1\n  //       ? `${product.title} 외 ${cart.length - 1} 건`\n  //       : product.title;\n  //   if (isLoggedIn) {\n  //     if (IMP !== null) {\n  //       const purchaseDatas = cart.map((product) => {\n  //         return {\n  //           ProductId: product.id,\n  //           ShopId: product.Shop.id,\n  //           UserId: session.id,\n  //           UserName: session.name,\n  //           price: product.Discount\n  //             ? product.price * (100 - product.Discount.rate) * 0.01\n  //             : product.price,\n  //           quantity: product.quantity,\n  //           ShopName: product.Shop.name,\n  //           ProductTitle: product.title,\n  //         };\n  //       });\n  //       const cartJson = JSON.stringify(purchaseDatas);\n  //       IMP.init(process.env.IAMPORT_KEY);\n  //       const today = Date.now();\n  //       IMP.request_pay(\n  //         {\n  //           pay_method: 'card',\n  //           name,\n  //           Merchant_uid: 'uid' + today,\n  //           amount,\n  //           custom_data: cartJson,\n  //         },\n  //         callback\n  //       );\n  //     }\n  //   } else {\n  //     alert('결제실패');\n  //   }\n  // };\n  // const callback = async (response) => {\n  //   const { success, error_msg } = response;\n  //   if (success) {\n  //     axios\n  //       .post(`${process.env.BACKEND_IP}/payments/complete`, { data: response })\n  //       .then((response) => {\n  //         dispatch({ type: PAYMENT_SUCCESS }, { data: response });\n  //         router.push(\n  //           TableId === undefined\n  //             ? `/menu/${ShopId}`\n  //             : `/menu/${ShopId}/${TableId}`\n  //         );\n  //       })\n  //       .then(() => {\n  //         console.log('good');\n  //         // dispatch({ type: CLEAR_CART_REQUEST });\n  //       })\n  //       .catch((e) => {\n  //         console.error(e);\n  //         // dispatch({ type: PAYMENT_FAILURE }, { error: e });\n  //       });\n  //   } else {\n  //     alert(`결제 실패: ${error_msg}`);\n  //   }\n  // };\n\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [cart.length === 0 ? /*#__PURE__*/_jsx(Card, {\n      style: {\n        height: '100vh'\n      },\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        style: {\n          marginTop: windowHeight * 0.3,\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsx(Empty, {}), /*#__PURE__*/_jsx(\"h1\", {\n          children: \"\\uC7A5\\uBC14\\uAD6C\\uB2C8\\uAC00 \\uBE44\\uC5C8\\uC2B5\\uB2C8\\uB2E4\"\n        })]\n      })\n    }) : /*#__PURE__*/_jsx(List, {\n      itemLayout: \"horizontal\",\n      dataSource: cart,\n      renderItem: item => /*#__PURE__*/_jsx(List.Item, {\n        children: /*#__PURE__*/_jsxs(Card, {\n          title: /*#__PURE__*/_jsx(\"h1\", {\n            children: item.title\n          }),\n          style: {\n            width: '100%'\n          },\n          extra: /*#__PURE__*/_jsx(\"h2\", {\n            children: /*#__PURE__*/_jsx(RestOutlined, {\n              onClick: () => {\n                dispatch({\n                  type: REMOVE_ITEM_REQUEST,\n                  id: item.id\n                });\n              }\n            })\n          }),\n          children: [/*#__PURE__*/_jsx(Card.Meta, {\n            description: /*#__PURE__*/_jsx(List.Item.Meta, {\n              avatar: /*#__PURE__*/_jsx(Avatar, {\n                size: 100,\n                shape: \"square\",\n                src: `${process.env.BACKEND_IP}/uploads/${item.Images[0].url}`\n              }),\n              description: /*#__PURE__*/_jsxs(Row, {\n                Gutter: [8, 16],\n                children: [/*#__PURE__*/_jsx(Col, {\n                  span: 24,\n                  children: item.description\n                }), /*#__PURE__*/_jsxs(Col, {\n                  span: 16,\n                  children: [\"\\uAC00\\uACA9:\", ' ', /*#__PURE__*/_jsx(NumberFormat, {\n                    value: item.Discount ? item.price * (100 - item.Discount.rate) * 0.01 : item.price,\n                    displayType: 'text',\n                    thousandSeparator: true\n                  })]\n                }), /*#__PURE__*/_jsx(Col, {\n                  span: 8,\n                  children: /*#__PURE__*/_jsx(CartAmountToggle, {\n                    id: item.id,\n                    quantity: item.quantity\n                  })\n                })]\n              })\n            })\n          }), /*#__PURE__*/_jsx(Divider, {}), /*#__PURE__*/_jsx(Row, {\n            gutter: [8, 16],\n            children: /*#__PURE__*/_jsxs(Col, {\n              style: {\n                textAlign: 'right'\n              },\n              span: 24,\n              children: [\"\\uCD1D\\uC561:\", ' ', /*#__PURE__*/_jsx(NumberFormat, {\n                value: item.Discount ? item.price * (100 - item.Discount.rate) * 0.01 * item.quantity : item.price * item.quantity,\n                displayType: 'text',\n                thousandSeparator: true\n              })]\n            })\n          })]\n        })\n      })\n    }), cart.length > 0 && /*#__PURE__*/_jsx(Button, {\n      onClick: paymentStart,\n      type: 'primary',\n      style: {\n        width: '100%'\n      },\n      children: \"\\uACB0\\uC81C\\uD558\\uAE30\"\n    })]\n  });\n};\n\nexport default Cart;","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/dev/project1/frontend/pages/cart/index.js"],"names":["List","Avatar","Card","Button","Row","Col","Divider","Empty","useDispatch","useSelector","RestOutlined","CartAmountToggle","NumberFormat","REMOVE_ITEM_REQUEST","CLEAR_CART_REQUEST","useState","useEffect","useWindowSize","axios","useRouter","onClickPayment","util","Cart","dispatch","IMP","setIMP","cart","ShopId","TableId","state","isLoggedIn","session","user","windowWidth","windowHeight","router","product","promisedPayment","promisify","paymentStart","then","type","console","log","push","undefined","length","height","marginTop","textAlign","item","title","width","id","process","env","BACKEND_IP","Images","url","description","Discount","price","rate","quantity"],"mappings":"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","sourcesContent":["import { List, Avatar, Card, Button, Row, Col, Divider, Empty } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RestOutlined } from '@ant-design/icons';\r\nimport CartAmountToggle from '../../components/Generalui/CartAmoutToggle';\r\nimport NumberFormat from 'react-number-format';\r\nimport { REMOVE_ITEM_REQUEST, CLEAR_CART_REQUEST } from '../../reducers/cart';\r\n// import { PAYMENT_SUCCESS, PAYMENT_FAILURE } from '../../reducers/payment';\r\nimport { useState, useEffect } from 'react';\r\nimport { useWindowSize } from '@react-hook/window-size';\r\nimport axios from 'axios';\r\nimport { useRouter } from 'next/router';\r\nimport { onClickPayment } from '../../components/Generalui/Payment';\r\nimport util from 'util';\r\n\r\nconst Cart = () => {\r\n  const dispatch = useDispatch();\r\n  const [IMP, setIMP] = useState(null);\r\n  const { cart, ShopId, TableId } = useSelector((state) => state.cart);\r\n  const { isLoggedIn, session } = useSelector((state) => state.user);\r\n  const [windowWidth, windowHeight] = useWindowSize();\r\n  const router = useRouter();\r\n\r\n  const product = cart[0];\r\n\r\n  const promisedPayment = util.promisify(onClickPayment);\r\n\r\n  const paymentStart = () => {\r\n    promisedPayment('cart', product, isLoggedIn, session, cart)\r\n      .then(() => dispatch({ type: CLEAR_CART_REQUEST }))\r\n      .then(() => {\r\n        console.log('routing');\r\n        router.push(\r\n          TableId == undefined\r\n            ? `/menu/${ShopId}`\r\n            : `/menu/${ShopId}/${TableId}`\r\n        );\r\n      });\r\n  };\r\n\r\n  // const onWindowScroll = () => {\r\n  //   window.scrollTo({ top: 0 });\r\n  // };\r\n\r\n  // const product = cart[0];\r\n\r\n  // let amount = 0;\r\n  // cart.map(\r\n  //   (product) =>\r\n  //     (amount += product.Discount\r\n  //       ? product.price *\r\n  //         (100 - product.Discount.rate) *\r\n  //         0.01 *\r\n  //         product.quantity\r\n  //       : product.price * product.quantity)\r\n  // );\r\n\r\n  // useEffect(() => {\r\n  //   const { IMP } = window;\r\n  //   setIMP(IMP);\r\n  // }, []);\r\n\r\n  // const onClickPayment = () => {\r\n  //   onWindowScroll();\r\n  //   const name =\r\n  //     cart.length > 1\r\n  //       ? `${product.title} 외 ${cart.length - 1} 건`\r\n  //       : product.title;\r\n\r\n  //   if (isLoggedIn) {\r\n  //     if (IMP !== null) {\r\n  //       const purchaseDatas = cart.map((product) => {\r\n  //         return {\r\n  //           ProductId: product.id,\r\n  //           ShopId: product.Shop.id,\r\n  //           UserId: session.id,\r\n  //           UserName: session.name,\r\n  //           price: product.Discount\r\n  //             ? product.price * (100 - product.Discount.rate) * 0.01\r\n  //             : product.price,\r\n  //           quantity: product.quantity,\r\n  //           ShopName: product.Shop.name,\r\n  //           ProductTitle: product.title,\r\n  //         };\r\n  //       });\r\n  //       const cartJson = JSON.stringify(purchaseDatas);\r\n  //       IMP.init(process.env.IAMPORT_KEY);\r\n  //       const today = Date.now();\r\n  //       IMP.request_pay(\r\n  //         {\r\n  //           pay_method: 'card',\r\n  //           name,\r\n  //           Merchant_uid: 'uid' + today,\r\n  //           amount,\r\n  //           custom_data: cartJson,\r\n  //         },\r\n  //         callback\r\n  //       );\r\n  //     }\r\n  //   } else {\r\n  //     alert('결제실패');\r\n  //   }\r\n  // };\r\n\r\n  // const callback = async (response) => {\r\n  //   const { success, error_msg } = response;\r\n  //   if (success) {\r\n  //     axios\r\n  //       .post(`${process.env.BACKEND_IP}/payments/complete`, { data: response })\r\n  //       .then((response) => {\r\n  //         dispatch({ type: PAYMENT_SUCCESS }, { data: response });\r\n  //         router.push(\r\n  //           TableId === undefined\r\n  //             ? `/menu/${ShopId}`\r\n  //             : `/menu/${ShopId}/${TableId}`\r\n  //         );\r\n  //       })\r\n  //       .then(() => {\r\n  //         console.log('good');\r\n  //         // dispatch({ type: CLEAR_CART_REQUEST });\r\n  //       })\r\n  //       .catch((e) => {\r\n  //         console.error(e);\r\n  //         // dispatch({ type: PAYMENT_FAILURE }, { error: e });\r\n  //       });\r\n  //   } else {\r\n  //     alert(`결제 실패: ${error_msg}`);\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      {cart.length === 0 ? (\r\n        <Card style={{ height: '100vh' }}>\r\n          <div style={{ marginTop: windowHeight * 0.3, textAlign: 'center' }}>\r\n            <Empty />\r\n            <h1>장바구니가 비었습니다</h1>\r\n          </div>\r\n        </Card>\r\n      ) : (\r\n        <List\r\n          itemLayout=\"horizontal\"\r\n          dataSource={cart}\r\n          renderItem={(item) => (\r\n            <List.Item>\r\n              <Card\r\n                title={<h1>{item.title}</h1>}\r\n                style={{ width: '100%' }}\r\n                extra={\r\n                  <h2>\r\n                    <RestOutlined\r\n                      onClick={() => {\r\n                        dispatch({ type: REMOVE_ITEM_REQUEST, id: item.id });\r\n                      }}\r\n                    />\r\n                  </h2>\r\n                }\r\n              >\r\n                <Card.Meta\r\n                  description={\r\n                    <List.Item.Meta\r\n                      avatar={\r\n                        <Avatar\r\n                          size={100}\r\n                          shape=\"square\"\r\n                          src={`${process.env.BACKEND_IP}/uploads/${item.Images[0].url}`}\r\n                        />\r\n                      }\r\n                      description={\r\n                        <Row Gutter={[8, 16]}>\r\n                          <Col span={24}>{item.description}</Col>\r\n                          <Col span={16}>\r\n                            가격:{' '}\r\n                            <NumberFormat\r\n                              value={\r\n                                item.Discount\r\n                                  ? item.price *\r\n                                    (100 - item.Discount.rate) *\r\n                                    0.01\r\n                                  : item.price\r\n                              }\r\n                              displayType={'text'}\r\n                              thousandSeparator={true}\r\n                            />\r\n                          </Col>\r\n                          <Col span={8}>\r\n                            <CartAmountToggle\r\n                              id={item.id}\r\n                              quantity={item.quantity}\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                      }\r\n                    />\r\n                  }\r\n                />\r\n                <Divider />\r\n                <Row gutter={[8, 16]}>\r\n                  <Col style={{ textAlign: 'right' }} span={24}>\r\n                    총액:{' '}\r\n                    <NumberFormat\r\n                      value={\r\n                        item.Discount\r\n                          ? item.price *\r\n                            (100 - item.Discount.rate) *\r\n                            0.01 *\r\n                            item.quantity\r\n                          : item.price * item.quantity\r\n                      }\r\n                      displayType={'text'}\r\n                      thousandSeparator={true}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </Card>\r\n            </List.Item>\r\n          )}\r\n        />\r\n      )}\r\n      {cart.length > 0 && (\r\n        <Button\r\n          onClick={paymentStart}\r\n          type={'primary'}\r\n          style={{ width: '100%' }}\r\n        >\r\n          결제하기\r\n        </Button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n"]},"metadata":{},"sourceType":"module"}