{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(addProduct),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchAddProduct),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(productsSaga);\n\nimport axios from \"axios\";\nimport { all, put, fork, call, takeLatest } from \"redux-saga/effects\";\nimport { ADD_PRODUCT_REQUEST, ADD_PRODUCT_SUCCESS, ADD_PRODUCT_FAILURE } from \"../reducers/shop\";\n\nfunction addProductApi(data) {\n  console.log(data);\n  return axios.post(\"/products/add\", data, {\n    withCredentials: true\n  });\n}\n\nfunction addProduct(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function addProduct$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          console.log(action.formData);\n          _context.next = 4;\n          return call(addProductApi, action.formData);\n\n        case 4:\n          result = _context.sent;\n          _context.next = 7;\n          return put({\n            type: ADD_PRODUCT_SUCCESS,\n            data: result.data\n          });\n\n        case 7:\n          _context.next = 14;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n          _context.next = 14;\n          return put({\n            type: ADD_PRODUCT_FAILURE,\n            error: _context.t0\n          });\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 9]]);\n}\n\nfunction watchAddProduct() {\n  return _regeneratorRuntime.wrap(function watchAddProduct$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(ADD_PRODUCT_REQUEST, addProduct);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nexport default function productsSaga() {\n  return _regeneratorRuntime.wrap(function productsSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return all([fork(watchLoadProducts), fork(watchAddProduct)]);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/sagas/shop.js"],"names":["addProduct","watchAddProduct","productsSaga","axios","all","put","fork","call","takeLatest","ADD_PRODUCT_REQUEST","ADD_PRODUCT_SUCCESS","ADD_PRODUCT_FAILURE","addProductApi","data","console","log","post","withCredentials","action","formData","result","type","error","watchLoadProducts"],"mappings":";;oDAWUA,U;qDAWAC,e;qDAIeC,Y;;AA1BzB,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,UAA/B,QAAiD,oBAAjD;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,EAAmDC,mBAAnD,QAA8E,kBAA9E;;AAEA,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,SAAOV,KAAK,CAACa,IAAN,CAAW,eAAX,EAA4BH,IAA5B,EAAkC;AACvCI,IAAAA,eAAe,EAAE;AADsB,GAAlC,CAAP;AAGD;;AAED,SAAUjB,UAAV,CAAqBkB,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEIJ,UAAAA,OAAO,CAACC,GAAR,CAAYG,MAAM,CAACC,QAAnB;AAFJ;AAGmB,iBAAMZ,IAAI,CAACK,aAAD,EAAgBM,MAAM,CAACC,QAAvB,CAAV;;AAHnB;AAGUC,UAAAA,MAHV;AAAA;AAII,iBAAMf,GAAG,CAAC;AAAEgB,YAAAA,IAAI,EAAEX,mBAAR;AAA6BG,YAAAA,IAAI,EAAEO,MAAM,CAACP;AAA1C,WAAD,CAAT;;AAJJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAMIC,UAAAA,OAAO,CAACC,GAAR;AANJ;AAOI,iBAAMV,GAAG,CAAC;AAAEgB,YAAAA,IAAI,EAAEV,mBAAR;AAA6BW,YAAAA,KAAK;AAAlC,WAAD,CAAT;;AAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWA,SAAUrB,eAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMO,UAAU,CAACC,mBAAD,EAAsBT,UAAtB,CAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAe,SAAUE,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAME,GAAG,CAAC,CAACE,IAAI,CAACiB,iBAAD,CAAL,EAA0BjB,IAAI,CAACL,eAAD,CAA9B,CAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import axios from \"axios\";\r\nimport { all, put, fork, call, takeLatest } from \"redux-saga/effects\";\r\nimport { ADD_PRODUCT_REQUEST, ADD_PRODUCT_SUCCESS, ADD_PRODUCT_FAILURE } from \"../reducers/shop\";\r\n\r\nfunction addProductApi(data) {\r\n  console.log(data);\r\n  return axios.post(\"/products/add\", data, {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* addProduct(action) {\r\n  try {\r\n    console.log(action.formData);\r\n    const result = yield call(addProductApi, action.formData);\r\n    yield put({ type: ADD_PRODUCT_SUCCESS, data: result.data });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({ type: ADD_PRODUCT_FAILURE, error: e });\r\n  }\r\n}\r\n\r\nfunction* watchAddProduct() {\r\n  yield takeLatest(ADD_PRODUCT_REQUEST, addProduct);\r\n}\r\n\r\nexport default function* productsSaga() {\r\n  yield all([fork(watchLoadProducts), fork(watchAddProduct)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}