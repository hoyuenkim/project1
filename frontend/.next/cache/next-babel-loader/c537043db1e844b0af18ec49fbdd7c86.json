{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst initialState = {\n  products: [],\n  originProducts: [],\n  naviSize: null,\n  TableId: null,\n  product: null\n};\nexport const LOAD_PRODUCTS_REQUEST = 'LOAD_PRODUCTS_REQUEST';\nexport const LOAD_PRODUCTS_SUCCESS = 'LOAD_PRODUCTS_SUCCESS';\nexport const LOAD_PRODUCTS_FAILURE = 'LOAD_PRODUCTS_FAILURE';\nexport const ADD_QUANTITY_REQUEST = 'ADD_QUANTITY_REQUEST';\nexport const ADD_QUANTITY_SUCCESS = 'ADD_QUANTITY_SUCCESS';\nexport const ADD_QUANTITY_FAILURE = 'ADD_QUANTITY_FAILURE';\nexport const SUBSTRACT_QUANTITY_REQUEST = 'SUBSTRACT_QUANTITY_REQUEST';\nexport const SUBSTRACT_QUANTITY_SUCCESS = 'SUBSTRACT_QUANTITY_SUCCESS';\nexport const SUBSTRACT_QUANTITY_FAILURE = 'SUBSTRACT_QUANTITY_FAILURE';\nexport const ADD_PRODUCT_REQUEST = 'ADD_PRODUCT_REQUEST';\nexport const ADD_PRODUCT_SUCCESS = 'ADD_PRODUCT_SUCCESS';\nexport const ADD_PRODUCT_FAILURE = 'ADD_PRODUCT_FAILURE';\nexport const LOAD_CART_REQUEST = 'LOAD_CART_REQUEST';\nexport const LOAD_CART_SUCCESS = 'LOAD_CART_SUCCESS';\nexport const LOAD_CART_FAILURE = 'LOAD_CART_FAILURE';\nexport const INITIATE_QUANTITY_REQUEST = 'INITIATE_QUANTITY_REQUEST';\nexport const GET_NAVIBAR_SIZE = 'GET_NAVIBAR_SIZE';\nexport const SEARCH_PRODUCT_SUCCESS = 'SEARCH_PRODUCT_SUCCESS';\nexport const SELECT_CATEGORY_SUCCESS = 'SELECT_CATEGORY_SUCCESS';\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_NAVIBAR_SIZE:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          naviSize: action.data\n        });\n      }\n\n    case ADD_QUANTITY_SUCCESS:\n      {\n        const index = state.products.findIndex(product => product.id === action.data.id);\n        const product = state.products[index];\n        let quantity = product.quantity;\n        quantity < 100 ? quantity += 1 : 99;\n        const products = [...state.products];\n        products[index] = _objectSpread(_objectSpread({}, product), {}, {\n          quantity\n        });\n        return _objectSpread(_objectSpread({}, state), {}, {\n          products\n        });\n      }\n\n    case SUBSTRACT_QUANTITY_SUCCESS:\n      {\n        const index = state.products.findIndex(product => product.id === action.data.id);\n        const product = state.products[index];\n        let quantity = product.quantity;\n        quantity > 1 ? quantity -= 1 : 1;\n        const products = [...state.products];\n        products[index] = _objectSpread(_objectSpread({}, product), {}, {\n          quantity\n        });\n        return _objectSpread(_objectSpread({}, state), {}, {\n          products\n        });\n      }\n\n    case LOAD_PRODUCTS_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_PRODUCTS_SUCCESS:\n      {\n        if (action.data.TableId) {\n          return _objectSpread(_objectSpread({}, state), {}, {\n            products: [...action.data.menus],\n            originProducts: [...action.data.menus],\n            TableId: action.data.TableId\n          });\n        }\n\n        return _objectSpread(_objectSpread({}, state), {}, {\n          originProducts: [...action.data],\n          products: [...action.data]\n        });\n      }\n\n    case LOAD_PRODUCTS_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case ADD_PRODUCT_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case ADD_PRODUCT_SUCCESS:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          products: [action.data, ...state.products]\n        });\n      }\n\n    case ADD_PRODUCT_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_CART_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_CART_SUCCESS:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          cart: [...state.cart, action.data]\n        });\n      }\n\n    case LOAD_CART_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case INITIATE_QUANTITY_REQUEST:\n      {\n        const product = action.data;\n\n        const initiated = _objectSpread(_objectSpread({}, product), {}, {\n          quantity: 1\n        });\n\n        const productList = state.products.filter(v => v.id !== product.id);\n        const finalProductList = [...productList, initiated].sort((a, b) => {\n          return a.id - b.id;\n        });\n        return _objectSpread(_objectSpread({}, state), {}, {\n          products: finalProductList\n        });\n      }\n\n    case SEARCH_PRODUCT_SUCCESS:\n      {\n        const filteredProducts = state.originProducts.filter(product => !product.title.indexOf(action.data.text));\n        return _objectSpread(_objectSpread({}, state), {}, {\n          products: filteredProducts\n        });\n      }\n\n    case SELECT_CATEGORY_SUCCESS:\n      {\n        const filteredProducts = state.originProducts.filter(product => !product.CategoryId.indexOf(action.data));\n        return _objectSpread(_objectSpread({}, state), {}, {\n          products: filteredProducts\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/reducers/menu.js"],"names":["initialState","products","originProducts","naviSize","TableId","product","LOAD_PRODUCTS_REQUEST","LOAD_PRODUCTS_SUCCESS","LOAD_PRODUCTS_FAILURE","ADD_QUANTITY_REQUEST","ADD_QUANTITY_SUCCESS","ADD_QUANTITY_FAILURE","SUBSTRACT_QUANTITY_REQUEST","SUBSTRACT_QUANTITY_SUCCESS","SUBSTRACT_QUANTITY_FAILURE","ADD_PRODUCT_REQUEST","ADD_PRODUCT_SUCCESS","ADD_PRODUCT_FAILURE","LOAD_CART_REQUEST","LOAD_CART_SUCCESS","LOAD_CART_FAILURE","INITIATE_QUANTITY_REQUEST","GET_NAVIBAR_SIZE","SEARCH_PRODUCT_SUCCESS","SELECT_CATEGORY_SUCCESS","reducer","state","action","type","data","index","findIndex","id","quantity","menus","cart","initiated","productList","filter","v","finalProductList","sort","a","b","filteredProducts","title","indexOf","text","CategoryId"],"mappings":"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","sourcesContent":["const initialState = {\r\n  products: [],\r\n  originProducts: [],\r\n  naviSize: null,\r\n  TableId: null,\r\n  product: null\r\n};\r\n\r\nexport const LOAD_PRODUCTS_REQUEST = 'LOAD_PRODUCTS_REQUEST';\r\nexport const LOAD_PRODUCTS_SUCCESS = 'LOAD_PRODUCTS_SUCCESS';\r\nexport const LOAD_PRODUCTS_FAILURE = 'LOAD_PRODUCTS_FAILURE';\r\n\r\nexport const ADD_QUANTITY_REQUEST = 'ADD_QUANTITY_REQUEST';\r\nexport const ADD_QUANTITY_SUCCESS = 'ADD_QUANTITY_SUCCESS';\r\nexport const ADD_QUANTITY_FAILURE = 'ADD_QUANTITY_FAILURE';\r\n\r\nexport const SUBSTRACT_QUANTITY_REQUEST = 'SUBSTRACT_QUANTITY_REQUEST';\r\nexport const SUBSTRACT_QUANTITY_SUCCESS = 'SUBSTRACT_QUANTITY_SUCCESS';\r\nexport const SUBSTRACT_QUANTITY_FAILURE = 'SUBSTRACT_QUANTITY_FAILURE';\r\n\r\nexport const ADD_PRODUCT_REQUEST = 'ADD_PRODUCT_REQUEST';\r\nexport const ADD_PRODUCT_SUCCESS = 'ADD_PRODUCT_SUCCESS';\r\nexport const ADD_PRODUCT_FAILURE = 'ADD_PRODUCT_FAILURE';\r\n\r\nexport const LOAD_CART_REQUEST = 'LOAD_CART_REQUEST';\r\nexport const LOAD_CART_SUCCESS = 'LOAD_CART_SUCCESS';\r\nexport const LOAD_CART_FAILURE = 'LOAD_CART_FAILURE';\r\n\r\nexport const INITIATE_QUANTITY_REQUEST = 'INITIATE_QUANTITY_REQUEST';\r\n\r\nexport const GET_NAVIBAR_SIZE = 'GET_NAVIBAR_SIZE';\r\n\r\nexport const SEARCH_PRODUCT_SUCCESS = 'SEARCH_PRODUCT_SUCCESS';\r\n\r\nexport const SELECT_CATEGORY_SUCCESS = 'SELECT_CATEGORY_SUCCESS';\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_NAVIBAR_SIZE: {\r\n      return {\r\n        ...state,\r\n        naviSize: action.data,\r\n      };\r\n    }\r\n\r\n    case ADD_QUANTITY_SUCCESS: {\r\n      const index = state.products.findIndex((product) => product.id === action.data.id);\r\n      const product = state.products[index];\r\n      let quantity = product.quantity;\r\n      quantity < 100 ? (quantity += 1) : 99;\r\n      const products = [...state.products];\r\n      products[index] = { ...product, quantity };\r\n\r\n      return {\r\n        ...state,\r\n        products,\r\n      };\r\n    }\r\n\r\n    case SUBSTRACT_QUANTITY_SUCCESS: {\r\n      const index = state.products.findIndex((product) => product.id === action.data.id);\r\n      const product = state.products[index];\r\n      let quantity = product.quantity;\r\n      quantity > 1 ? (quantity -= 1) : 1;\r\n      const products = [...state.products];\r\n      products[index] = { ...product, quantity };\r\n      return {\r\n        ...state,\r\n        products,\r\n      };\r\n    }\r\n\r\n    case LOAD_PRODUCTS_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n\r\n    case LOAD_PRODUCTS_SUCCESS: {\r\n      if (action.data.TableId) {\r\n        return {\r\n          ...state,\r\n          products: [...action.data.menus],\r\n          originProducts: [...action.data.menus],\r\n          TableId: action.data.TableId,\r\n        };\r\n      }\r\n      return {\r\n        ...state,\r\n        originProducts: [...action.data],\r\n        products: [...action.data],\r\n      };\r\n    }\r\n\r\n    case LOAD_PRODUCTS_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n\r\n    case ADD_PRODUCT_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n\r\n    case ADD_PRODUCT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        products: [action.data, ...state.products],\r\n      };\r\n    }\r\n\r\n    case ADD_PRODUCT_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n\r\n    case LOAD_CART_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n\r\n    case LOAD_CART_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        cart: [...state.cart, action.data],\r\n      };\r\n    }\r\n\r\n    case LOAD_CART_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n\r\n    case INITIATE_QUANTITY_REQUEST: {\r\n      const product = action.data;\r\n      const initiated = { ...product, quantity: 1 };\r\n      const productList = state.products.filter((v) => v.id !== product.id);\r\n      const finalProductList = [...productList, initiated].sort((a, b) => {\r\n        return a.id - b.id;\r\n      });\r\n      return {\r\n        ...state,\r\n        products: finalProductList,\r\n      };\r\n    }\r\n\r\n    case SEARCH_PRODUCT_SUCCESS: {\r\n      const filteredProducts = state.originProducts.filter(\r\n        (product) => !product.title.indexOf(action.data.text),\r\n      );\r\n      return { ...state, products: filteredProducts };\r\n    }\r\n\r\n    case SELECT_CATEGORY_SUCCESS: {\r\n      const filteredProducts = state.originProducts.filter(\r\n        (product) => !product.CategoryId.indexOf(action.data),\r\n      );\r\n      return { ...state, products: filteredProducts };\r\n    }\r\n\r\n    default: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}