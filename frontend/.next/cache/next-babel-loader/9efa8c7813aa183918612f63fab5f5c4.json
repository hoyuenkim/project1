{"ast":null,"code":"import axios from 'axios';\nimport { all, put, fork, call, takeLatest } from 'redux-saga/effects';\nimport { LOAD_PRODUCTS_SUCCESS, LOAD_PRODUCTS_FAILURE, LOAD_PRODUCTS_REQUEST } from '../reducers/menu';\n\nfunction loadProductApi(data) {\n  return axios.post(`/menu`, {\n    data\n  });\n}\n\nfunction* loadProducts({\n  data\n}) {\n  try {\n    const result = yield call(loadProductApi, data);\n    yield put({\n      type: LOAD_PRODUCTS_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.log(e);\n    yield put({\n      type: LOAD_PRODUCTS_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchLoadProducts() {\n  yield takeLatest(LOAD_PRODUCTS_REQUEST, loadProducts);\n}\n\nexport default function* productsSaga() {\n  yield all([fork(watchLoadProducts)]);\n}","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/sagas/menu.js"],"names":["axios","all","put","fork","call","takeLatest","LOAD_PRODUCTS_SUCCESS","LOAD_PRODUCTS_FAILURE","LOAD_PRODUCTS_REQUEST","loadProductApi","data","post","loadProducts","result","type","e","console","log","error","watchLoadProducts","productsSaga"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,UAA/B,QAAiD,oBAAjD;AACA,SACEC,qBADF,EAEEC,qBAFF,EAGEC,qBAHF,QAIO,kBAJP;;AAMA,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;AAC5B,SAAOV,KAAK,CAACW,IAAN,CAAY,OAAZ,EAAoB;AAAED,IAAAA;AAAF,GAApB,CAAP;AACD;;AAED,UAAUE,YAAV,CAAuB;AAAEF,EAAAA;AAAF,CAAvB,EAAiC;AAC/B,MAAI;AACF,UAAMG,MAAM,GAAG,MAAMT,IAAI,CAACK,cAAD,EAAiBC,IAAjB,CAAzB;AACA,UAAMR,GAAG,CAAC;AACRY,MAAAA,IAAI,EAAER,qBADE;AAERI,MAAAA,IAAI,EAAEG,MAAM,CAACH;AAFL,KAAD,CAAT;AAID,GAND,CAME,OAAOK,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,UAAMb,GAAG,CAAC;AACRY,MAAAA,IAAI,EAAEP,qBADE;AAERW,MAAAA,KAAK,EAAEH;AAFC,KAAD,CAAT;AAID;AACF;;AAED,UAAUI,iBAAV,GAA8B;AAC5B,QAAMd,UAAU,CAACG,qBAAD,EAAwBI,YAAxB,CAAhB;AACD;;AAED,eAAe,UAAUQ,YAAV,GAAyB;AACtC,QAAMnB,GAAG,CAAC,CAACE,IAAI,CAACgB,iBAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import axios from 'axios';\r\nimport { all, put, fork, call, takeLatest } from 'redux-saga/effects';\r\nimport {\r\n  LOAD_PRODUCTS_SUCCESS,\r\n  LOAD_PRODUCTS_FAILURE,\r\n  LOAD_PRODUCTS_REQUEST,\r\n} from '../reducers/menu';\r\n\r\nfunction loadProductApi(data) {\r\n  return axios.post(`/menu`, { data });\r\n}\r\n\r\nfunction* loadProducts({ data }) {\r\n  try {\r\n    const result = yield call(loadProductApi, data);\r\n    yield put({\r\n      type: LOAD_PRODUCTS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({\r\n      type: LOAD_PRODUCTS_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLoadProducts() {\r\n  yield takeLatest(LOAD_PRODUCTS_REQUEST, loadProducts);\r\n}\r\n\r\nexport default function* productsSaga() {\r\n  yield all([fork(watchLoadProducts)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}