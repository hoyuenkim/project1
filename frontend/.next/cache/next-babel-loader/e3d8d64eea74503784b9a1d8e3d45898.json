{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(paymentHistory),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchPaymentHistory),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(rating),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchRating),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(searchHistory),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchSearchHistory),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(cancelPayment),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(watchCancelPayment),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(userSaga);\n\nimport { fork, takeEvery, all, put, call, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { LOAD_PAYMENT_HISTORY_FAILURE, LOAD_PAYMENT_HISTORY_REQUEST, LOAD_PAYMENT_HISTORY_SUCCESS, RATING_FAILURE, RATING_SUCCESS, RATING_REQUEST, SEARCH_HISTORY_SUCCESS, SEARCH_HISTORY_FAILURE, SEARCH_HISTORY_REQUEST, PAYMENT_HISTORY_REMOVE_REQUEST, PAYMENT_HISTORY_REMOVE_FAILURE, PAYMENT_HISTORY_REMOVE_SUCCESS } from \"../reducers/payment\";\n\nfunction paymentHistoryAPI(data) {\n  return axios.post(\"/payments/load\", {\n    id: data.id,\n    ShopId: data.ShopId,\n    division: data.division\n  });\n}\n\npa;\n\nfunction paymentHistory(data) {\n  var result;\n  return _regeneratorRuntime.wrap(function paymentHistory$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(paymentHistoryAPI, data);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            type: LOAD_PAYMENT_HISTORY_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context.next = 12;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 12;\n          return put({\n            type: LOAD_PAYMENT_HISTORY_FAILURE,\n            error: _context.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction watchPaymentHistory() {\n  return _regeneratorRuntime.wrap(function watchPaymentHistory$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(LOAD_PAYMENT_HISTORY_REQUEST, paymentHistory);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction ratingAPI(_ref) {\n  var data = _ref.data;\n  return axios.post(\"/payments/rating\", {\n    PaymentsId: data.PaymentsId,\n    UserId: data.UserId,\n    ProductId: data.ProductId,\n    rate: data.rate\n  });\n}\n\nfunction rating(data) {\n  var result;\n  return _regeneratorRuntime.wrap(function rating$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(ratingAPI, data);\n\n        case 3:\n          result = _context3.sent;\n          _context3.next = 6;\n          return put({\n            type: RATING_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context3.next = 13;\n          break;\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(_context3.t0);\n          _context3.next = 13;\n          return put({\n            type: RATING_FAILURE,\n            error: _context3.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 8]]);\n}\n\nfunction watchRating() {\n  return _regeneratorRuntime.wrap(function watchRating$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(RATING_REQUEST, rating);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction searchHistoryAPI(_ref2) {\n  var data = _ref2.data;\n  console.log(data);\n\n  if (data.division == true) {\n    return axios.post(\"/payments/search/shop\", {\n      data: data\n    });\n  } else {\n    return axios.post(\"/payments/search/user\", {\n      data: data\n    });\n  }\n}\n\nfunction searchHistory(data) {\n  var result;\n  return _regeneratorRuntime.wrap(function searchHistory$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(searchHistoryAPI, data);\n\n        case 3:\n          result = _context5.sent;\n          _context5.next = 6;\n          return put({\n            type: SEARCH_HISTORY_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context5.next = 13;\n          break;\n\n        case 8:\n          _context5.prev = 8;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.log(_context5.t0);\n          _context5.next = 13;\n          return put({\n            type: SEARCH_HISTORY_FAILURE\n          });\n\n        case 13:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 8]]);\n}\n\nfunction watchSearchHistory() {\n  return _regeneratorRuntime.wrap(function watchSearchHistory$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(SEARCH_HISTORY_REQUEST, searchHistory);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nfunction cancelPaymentAPI(_ref3) {\n  var id = _ref3.id,\n      UserId = _ref3.UserId,\n      division = _ref3.division,\n      imp_uid = _ref3.imp_uid,\n      amount = _ref3.amount;\n  return axios.post(\"/payments/cancel\", {\n    id: id,\n    UserId: UserId,\n    division: division,\n    imp_uid: imp_uid,\n    amount: amount\n  });\n}\n\nfunction cancelPayment(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function cancelPayment$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _context7.next = 3;\n          return call(cancelPaymentAPI, action.data);\n\n        case 3:\n          result = _context7.sent;\n          console.log(result.data);\n          _context7.next = 7;\n          return put({\n            type: PAYMENT_HISTORY_REMOVE_SUCCESS,\n            data: result.data\n          });\n\n        case 7:\n          _context7.next = 14;\n          break;\n\n        case 9:\n          _context7.prev = 9;\n          _context7.t0 = _context7[\"catch\"](0);\n          console.log(_context7.t0);\n          _context7.next = 14;\n          return put({\n            type: PAYMENT_HISTORY_REMOVE_FAILURE,\n            error: _context7.t0\n          });\n\n        case 14:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 9]]);\n}\n\nfunction watchCancelPayment() {\n  return _regeneratorRuntime.wrap(function watchCancelPayment$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeLatest(PAYMENT_HISTORY_REMOVE_REQUEST, cancelPayment);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return all([fork(watchPaymentHistory), fork(watchRating), fork(watchSearchHistory), fork(watchCancelPayment)]);\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9);\n}","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/dev/project1/frontend/sagas/payment.js"],"names":["paymentHistory","watchPaymentHistory","rating","watchRating","searchHistory","watchSearchHistory","cancelPayment","watchCancelPayment","userSaga","fork","takeEvery","all","put","call","takeLatest","axios","LOAD_PAYMENT_HISTORY_FAILURE","LOAD_PAYMENT_HISTORY_REQUEST","LOAD_PAYMENT_HISTORY_SUCCESS","RATING_FAILURE","RATING_SUCCESS","RATING_REQUEST","SEARCH_HISTORY_SUCCESS","SEARCH_HISTORY_FAILURE","SEARCH_HISTORY_REQUEST","PAYMENT_HISTORY_REMOVE_REQUEST","PAYMENT_HISTORY_REMOVE_FAILURE","PAYMENT_HISTORY_REMOVE_SUCCESS","paymentHistoryAPI","data","post","id","ShopId","division","pa","result","type","error","ratingAPI","PaymentsId","UserId","ProductId","rate","console","log","searchHistoryAPI","cancelPaymentAPI","imp_uid","amount","action"],"mappings":";;oDA0BUA,c;qDAYAC,mB;qDAaAC,M;qDAUAC,W;qDAaAC,a;qDAUAC,kB;qDAQAC,a;qDAWAC,kB;qDAIeC,Q;;AA3GzB,SAASC,IAAT,EAAeC,SAAf,EAA0BC,GAA1B,EAA+BC,GAA/B,EAAoCC,IAApC,EAA0CC,UAA1C,QAA4D,oBAA5D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SACEC,4BADF,EAEEC,4BAFF,EAGEC,4BAHF,EAIEC,cAJF,EAKEC,cALF,EAMEC,cANF,EAOEC,sBAPF,EAQEC,sBARF,EASEC,sBATF,EAUEC,8BAVF,EAWEC,8BAXF,EAYEC,8BAZF,QAaO,qBAbP;;AAeA,SAASC,iBAAT,CAA2BC,IAA3B,EAAiC;AAC/B,SAAOd,KAAK,CAACe,IAAN,CAAW,gBAAX,EAA6B;AAClCC,IAAAA,EAAE,EAAEF,IAAI,CAACE,EADyB;AAElCC,IAAAA,MAAM,EAAEH,IAAI,CAACG,MAFqB;AAGlCC,IAAAA,QAAQ,EAAEJ,IAAI,CAACI;AAHmB,GAA7B,CAAP;AAKD;;AACDC,EAAE;;AACF,SAAUlC,cAAV,CAAyB6B,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEmB,iBAAMhB,IAAI,CAACe,iBAAD,EAAoBC,IAApB,CAAV;;AAFnB;AAEUM,UAAAA,MAFV;AAAA;AAGI,iBAAMvB,GAAG,CAAC;AACRwB,YAAAA,IAAI,EAAElB,4BADE;AAERW,YAAAA,IAAI,EAAEM,MAAM,CAACN;AAFL,WAAD,CAAT;;AAHJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAQI,iBAAMjB,GAAG,CAAC;AAAEwB,YAAAA,IAAI,EAAEpB,4BAAR;AAAsCqB,YAAAA,KAAK;AAA3C,WAAD,CAAT;;AARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAYA,SAAUpC,mBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMa,UAAU,CAACG,4BAAD,EAA+BjB,cAA/B,CAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAASsC,SAAT,OAA6B;AAAA,MAART,IAAQ,QAARA,IAAQ;AAC3B,SAAOd,KAAK,CAACe,IAAN,CAAW,kBAAX,EAA+B;AACpCS,IAAAA,UAAU,EAAEV,IAAI,CAACU,UADmB;AAEpCC,IAAAA,MAAM,EAAEX,IAAI,CAACW,MAFuB;AAGpCC,IAAAA,SAAS,EAAEZ,IAAI,CAACY,SAHoB;AAIpCC,IAAAA,IAAI,EAAEb,IAAI,CAACa;AAJyB,GAA/B,CAAP;AAMD;;AAED,SAAUxC,MAAV,CAAiB2B,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEmB,iBAAMhB,IAAI,CAACyB,SAAD,EAAYT,IAAZ,CAAV;;AAFnB;AAEUM,UAAAA,MAFV;AAAA;AAGI,iBAAMvB,GAAG,CAAC;AAAEwB,YAAAA,IAAI,EAAEhB,cAAR;AAAwBS,YAAAA,IAAI,EAAEM,MAAM,CAACN;AAArC,WAAD,CAAT;;AAHJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAKIc,UAAAA,OAAO,CAACC,GAAR;AALJ;AAMI,iBAAMhC,GAAG,CAAC;AAAEwB,YAAAA,IAAI,EAAEjB,cAAR;AAAwBkB,YAAAA,KAAK;AAA7B,WAAD,CAAT;;AANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUA,SAAUlC,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMW,UAAU,CAACO,cAAD,EAAiBnB,MAAjB,CAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAS2C,gBAAT,QAAoC;AAAA,MAARhB,IAAQ,SAARA,IAAQ;AAClCc,EAAAA,OAAO,CAACC,GAAR,CAAYf,IAAZ;;AACA,MAAIA,IAAI,CAACI,QAAL,IAAiB,IAArB,EAA2B;AACzB,WAAOlB,KAAK,CAACe,IAAN,CAAW,uBAAX,EAAoC;AAAED,MAAAA,IAAI,EAAJA;AAAF,KAApC,CAAP;AACD,GAFD,MAEO;AACL,WAAOd,KAAK,CAACe,IAAN,CAAW,uBAAX,EAAoC;AAAED,MAAAA,IAAI,EAAJA;AAAF,KAApC,CAAP;AACD;AACF;;AAED,SAAUzB,aAAV,CAAwByB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEmB,iBAAMhB,IAAI,CAACgC,gBAAD,EAAmBhB,IAAnB,CAAV;;AAFnB;AAEUM,UAAAA,MAFV;AAAA;AAGI,iBAAMvB,GAAG,CAAC;AAAEwB,YAAAA,IAAI,EAAEd,sBAAR;AAAgCO,YAAAA,IAAI,EAAEM,MAAM,CAACN;AAA7C,WAAD,CAAT;;AAHJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAKIc,UAAAA,OAAO,CAACC,GAAR;AALJ;AAMI,iBAAMhC,GAAG,CAAC;AAAEwB,YAAAA,IAAI,EAAEb;AAAR,WAAD,CAAT;;AANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUA,SAAUlB,kBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMS,UAAU,CAACU,sBAAD,EAAyBpB,aAAzB,CAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAS0C,gBAAT,QAAqE;AAAA,MAAzCf,EAAyC,SAAzCA,EAAyC;AAAA,MAArCS,MAAqC,SAArCA,MAAqC;AAAA,MAA7BP,QAA6B,SAA7BA,QAA6B;AAAA,MAAnBc,OAAmB,SAAnBA,OAAmB;AAAA,MAAVC,MAAU,SAAVA,MAAU;AACnE,SAAOjC,KAAK,CAACe,IAAN,CAAW,kBAAX,EAA+B;AAAEC,IAAAA,EAAE,EAAFA,EAAF;AAAMS,IAAAA,MAAM,EAANA,MAAN;AAAcP,IAAAA,QAAQ,EAARA,QAAd;AAAwBc,IAAAA,OAAO,EAAPA,OAAxB;AAAiCC,IAAAA,MAAM,EAANA;AAAjC,GAA/B,CAAP;AACD;;AAED,SAAU1C,aAAV,CAAwB2C,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEmB,iBAAMpC,IAAI,CAACiC,gBAAD,EAAmBG,MAAM,CAACpB,IAA1B,CAAV;;AAFnB;AAEUM,UAAAA,MAFV;AAGIQ,UAAAA,OAAO,CAACC,GAAR,CAAYT,MAAM,CAACN,IAAnB;AAHJ;AAII,iBAAMjB,GAAG,CAAC;AAAEwB,YAAAA,IAAI,EAAET,8BAAR;AAAwCE,YAAAA,IAAI,EAAEM,MAAM,CAACN;AAArD,WAAD,CAAT;;AAJJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAMIc,UAAAA,OAAO,CAACC,GAAR;AANJ;AAOI,iBAAMhC,GAAG,CAAC;AAAEwB,YAAAA,IAAI,EAAEV,8BAAR;AAAwCW,YAAAA,KAAK;AAA7C,WAAD,CAAT;;AAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWA,SAAU9B,kBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMO,UAAU,CAACW,8BAAD,EAAiCnB,aAAjC,CAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAe,SAAUE,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAMG,GAAG,CAAC,CACRF,IAAI,CAACR,mBAAD,CADI,EAERQ,IAAI,CAACN,WAAD,CAFI,EAGRM,IAAI,CAACJ,kBAAD,CAHI,EAIRI,IAAI,CAACF,kBAAD,CAJI,CAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { fork, takeEvery, all, put, call, takeLatest } from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\n\r\nimport {\r\n  LOAD_PAYMENT_HISTORY_FAILURE,\r\n  LOAD_PAYMENT_HISTORY_REQUEST,\r\n  LOAD_PAYMENT_HISTORY_SUCCESS,\r\n  RATING_FAILURE,\r\n  RATING_SUCCESS,\r\n  RATING_REQUEST,\r\n  SEARCH_HISTORY_SUCCESS,\r\n  SEARCH_HISTORY_FAILURE,\r\n  SEARCH_HISTORY_REQUEST,\r\n  PAYMENT_HISTORY_REMOVE_REQUEST,\r\n  PAYMENT_HISTORY_REMOVE_FAILURE,\r\n  PAYMENT_HISTORY_REMOVE_SUCCESS,\r\n} from \"../reducers/payment\";\r\n\r\nfunction paymentHistoryAPI(data) {\r\n  return axios.post(\"/payments/load\", {\r\n    id: data.id,\r\n    ShopId: data.ShopId,\r\n    division: data.division,\r\n  });\r\n}\r\npa;\r\nfunction* paymentHistory(data) {\r\n  try {\r\n    const result = yield call(paymentHistoryAPI, data);\r\n    yield put({\r\n      type: LOAD_PAYMENT_HISTORY_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    yield put({ type: LOAD_PAYMENT_HISTORY_FAILURE, error: e });\r\n  }\r\n}\r\n\r\nfunction* watchPaymentHistory() {\r\n  yield takeLatest(LOAD_PAYMENT_HISTORY_REQUEST, paymentHistory);\r\n}\r\n\r\nfunction ratingAPI({ data }) {\r\n  return axios.post(\"/payments/rating\", {\r\n    PaymentsId: data.PaymentsId,\r\n    UserId: data.UserId,\r\n    ProductId: data.ProductId,\r\n    rate: data.rate,\r\n  });\r\n}\r\n\r\nfunction* rating(data) {\r\n  try {\r\n    const result = yield call(ratingAPI, data);\r\n    yield put({ type: RATING_SUCCESS, data: result.data });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({ type: RATING_FAILURE, error: e });\r\n  }\r\n}\r\n\r\nfunction* watchRating() {\r\n  yield takeLatest(RATING_REQUEST, rating);\r\n}\r\n\r\nfunction searchHistoryAPI({ data }) {\r\n  console.log(data);\r\n  if (data.division == true) {\r\n    return axios.post(\"/payments/search/shop\", { data });\r\n  } else {\r\n    return axios.post(\"/payments/search/user\", { data });\r\n  }\r\n}\r\n\r\nfunction* searchHistory(data) {\r\n  try {\r\n    const result = yield call(searchHistoryAPI, data);\r\n    yield put({ type: SEARCH_HISTORY_SUCCESS, data: result.data });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({ type: SEARCH_HISTORY_FAILURE });\r\n  }\r\n}\r\n\r\nfunction* watchSearchHistory() {\r\n  yield takeLatest(SEARCH_HISTORY_REQUEST, searchHistory);\r\n}\r\n\r\nfunction cancelPaymentAPI({ id, UserId, division, imp_uid, amount }) {\r\n  return axios.post(\"/payments/cancel\", { id, UserId, division, imp_uid, amount });\r\n}\r\n\r\nfunction* cancelPayment(action) {\r\n  try {\r\n    const result = yield call(cancelPaymentAPI, action.data);\r\n    console.log(result.data);\r\n    yield put({ type: PAYMENT_HISTORY_REMOVE_SUCCESS, data: result.data });\r\n  } catch (err) {\r\n    console.log(err);\r\n    yield put({ type: PAYMENT_HISTORY_REMOVE_FAILURE, error: err });\r\n  }\r\n}\r\n\r\nfunction* watchCancelPayment() {\r\n  yield takeLatest(PAYMENT_HISTORY_REMOVE_REQUEST, cancelPayment);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([\r\n    fork(watchPaymentHistory),\r\n    fork(watchRating),\r\n    fork(watchSearchHistory),\r\n    fork(watchCancelPayment),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}