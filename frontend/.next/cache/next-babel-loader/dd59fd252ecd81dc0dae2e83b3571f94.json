{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Button, Form, Input, Descriptions, Checkbox, Card, Space, Collapse, Switch, Divider } from \"antd\";\nimport { useState, useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useInput } from \"../../components/Generalui/CustomHooks\";\nimport { SIGN_UP_REQUEST } from \"../../reducers/user\";\nimport Router, { withRouter } from \"next/router\";\n\nvar Signup = function Signup() {\n  _s();\n\n  var _useInput = useInput(),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      email = _useInput2[0],\n      onChangeEmail = _useInput2[1];\n\n  var _useInput3 = useInput(),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      password = _useInput4[0],\n      onChangePassword = _useInput4[1];\n\n  var _useState = useState(),\n      passwordCheck = _useState[0],\n      setPasswordCheck = _useState[1];\n\n  var _useState2 = useState(false),\n      passwordError = _useState2[0],\n      setPasswordError = _useState2[1];\n\n  var _useInput5 = useInput(),\n      _useInput6 = _slicedToArray(_useInput5, 2),\n      name = _useInput6[0],\n      onChangeName = _useInput6[1];\n\n  var _useState3 = useState(false),\n      termToggle = _useState3[0],\n      setTermToggle = _useState3[1];\n\n  var _useState4 = useState(false),\n      divisionToggle = _useState4[0],\n      setDivisionToggle = _useState4[1];\n\n  var dispatch = useDispatch();\n\n  var onChangePasswordCheck = function onChangePasswordCheck(e) {\n    setPasswordCheck(e.target.value);\n    setPasswordError(password != e.target.value);\n  };\n\n  var onClickTermToggle = function onClickTermToggle() {\n    return setTermToggle(!termToggle);\n  };\n\n  var onSubmitForm = useCallback(function (e) {\n    if (passwordError) {\n      return setPasswordError(true);\n    } else {\n      dispatch({\n        type: SIGN_UP_REQUEST,\n        data: {\n          username: email,\n          password: password\n        }\n      });\n    }\n  }, [email, password, passwordCheck]);\n\n  var onChangeDivisionToggle = function onChangeDivisionToggle() {\n    return setDivisionToggle(!divisionToggle);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Card, null, __jsx(Form, {\n    onFinish: onSubmitForm\n  }, __jsx(Space, {\n    direction: \"vertical\",\n    size: \"large\",\n    style: {\n      width: \"100%\",\n      height: \"100vh\"\n    }\n  }, __jsx(Switch, {\n    onClick: onChangeDivisionToggle,\n    checkedChildren: \"\\uAC00\\uB9F9\\uC810\",\n    unCheckedChildren: \"\\uC0AC\\uC6A9\\uC790\"\n  }), __jsx(Checkbox, {\n    onChange: onClickTermToggle\n  }, \"\\uC804\\uCCB4\\uB3D9\\uC758\"), !termToggle && __jsx(Descriptions, {\n    bordered: true,\n    column: 24,\n    layout: \"vertical\",\n    size: \"large\"\n  }, __jsx(Descriptions.Item, {\n    label: \"\\uD544\\uC218\"\n  }, \"\\uAC1C\\uC778(\\uC2E0\\uC6A9)\\uC815\\uBCF4\\uC218\\uC9D1/\\uC774\\uC6A9\"), __jsx(Descriptions.Item, {\n    label: \"\\uD544\\uC218\"\n  }, \"\\uACE0\\uC720\\uC2DD\\uBCC4\\uC815\\uBCF4\\uC758 \\uCC98\\uB9AC\"), __jsx(Descriptions.Item, {\n    label: \"\\uD544\\uC218\"\n  }, \"\\uD1B5\\uC2E0\\uC0AC \\uC774\\uC6A9\\uC57D\\uAD00\"), __jsx(Descriptions.Item, {\n    label: \"\\uD544\\uC218\"\n  }, \"\\uC11C\\uBE44\\uC2A4 \\uC774\\uC6A9\\uC57D\\uAD00\")), __jsx(\"div\", null, __jsx(Form.Item, {\n    name: \"email\",\n    rules: [{\n      type: \"email\",\n      message: \"올바른 이메일 형식을 입력해주세요!\"\n    }, {\n      required: true,\n      message: \"이메일를 입력해 주세요!\"\n    }]\n  }, __jsx(Input, {\n    size: \"large\",\n    prefix: \"* Email\",\n    value: email,\n    onChange: onChangeEmail,\n    placeholder: \"Email\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n  })), __jsx(Form.Item, {\n    name: \"password\",\n    rules: [{\n      required: true,\n      message: \"비밀번호를 확인해주세요\"\n    }]\n  }, __jsx(Input.Password, {\n    prefix: \"* \\uBE44\\uBC00\\uBC88\\uD638\",\n    size: \"large\",\n    value: password,\n    onChange: onChangePassword,\n    placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n  })), __jsx(Form.Item, {\n    name: \"passwordCheck\",\n    rules: [{\n      required: true,\n      message: \"비밀번호를 확인해 주세요\"\n    }]\n  }, __jsx(Input.Password, {\n    prefix: \"* \\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n    size: \"large\",\n    value: passwordCheck,\n    onChange: onChangePasswordCheck,\n    placeholder: \"\\uB2E4\\uC2DC \\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n  })), passwordError && __jsx(\"div\", null, \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4\"), __jsx(Form.Item, {\n    name: \"name\",\n    rules: [{\n      required: true,\n      message: \"이름을 입력해주세요\"\n    }]\n  }, __jsx(Input, {\n    prefix: divisionToggle ? \"* 가게명\" : \"* 이름\",\n    size: \"large\",\n    onChange: onChangeName,\n    value: name\n  })), __jsx(Form.Item, {\n    name: \"bizcode\",\n    rules: [{\n      required: true,\n      message: \"이름을 입력해주세요\"\n    }]\n  }, __jsx(Input, {\n    prefix: \"사업자등록번호\",\n    size: \"large\",\n    onChange: onChangeBizcode,\n    value: bizcode\n  }))), __jsx(Button, {\n    htmlType: \"submit\",\n    type: \"primary\",\n    style: {\n      width: \"100%\"\n    }\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\")))));\n};\n\n_s(Signup, \"3cEhSNQxxk86whl6tSUttzvO+Vw=\", false, function () {\n  return [useInput, useInput, useInput, useDispatch];\n});\n\n_c = Signup;\nexport default _c2 = withRouter(Signup);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Signup\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/pages/user/signup.js"],"names":["Button","Form","Input","Descriptions","Checkbox","Card","Space","Collapse","Switch","Divider","useState","useCallback","useDispatch","useInput","SIGN_UP_REQUEST","Router","withRouter","Signup","email","onChangeEmail","password","onChangePassword","passwordCheck","setPasswordCheck","passwordError","setPasswordError","name","onChangeName","termToggle","setTermToggle","divisionToggle","setDivisionToggle","dispatch","onChangePasswordCheck","e","target","value","onClickTermToggle","onSubmitForm","type","data","username","onChangeDivisionToggle","width","height","message","required","onChangeBizcode","bizcode"],"mappings":"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","sourcesContent":["import {\r\n  Button,\r\n  Form,\r\n  Input,\r\n  Descriptions,\r\n  Checkbox,\r\n  Card,\r\n  Space,\r\n  Collapse,\r\n  Switch,\r\n  Divider,\r\n} from \"antd\";\r\nimport { useState, useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useInput } from \"../../components/Generalui/CustomHooks\";\r\nimport { SIGN_UP_REQUEST } from \"../../reducers/user\";\r\nimport Router, { withRouter } from \"next/router\";\r\n\r\nconst Signup = () => {\r\n  const [email, onChangeEmail] = useInput();\r\n  const [password, onChangePassword] = useInput();\r\n  const [passwordCheck, setPasswordCheck] = useState();\r\n  const [passwordError, setPasswordError] = useState(false);\r\n  const [name, onChangeName] = useInput();\r\n  const [termToggle, setTermToggle] = useState(false);\r\n  const [divisionToggle, setDivisionToggle] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const onChangePasswordCheck = (e) => {\r\n    setPasswordCheck(e.target.value);\r\n    setPasswordError(password != e.target.value);\r\n  };\r\n\r\n  const onClickTermToggle = () => {\r\n    return setTermToggle(!termToggle);\r\n  };\r\n\r\n  const onSubmitForm = useCallback(\r\n    (e) => {\r\n      if (passwordError) {\r\n        return setPasswordError(true);\r\n      } else {\r\n        dispatch({\r\n          type: SIGN_UP_REQUEST,\r\n          data: {\r\n            username: email,\r\n            password: password,\r\n          },\r\n        });\r\n      }\r\n    },\r\n    [email, password, passwordCheck]\r\n  );\r\n\r\n  const onChangeDivisionToggle = () => {\r\n    return setDivisionToggle(!divisionToggle);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Form onFinish={onSubmitForm}>\r\n          <Space direction=\"vertical\" size={\"large\"} style={{ width: \"100%\", height: `100vh` }}>\r\n            <Switch\r\n              onClick={onChangeDivisionToggle}\r\n              checkedChildren={`가맹점`}\r\n              unCheckedChildren={`사용자`}\r\n            />\r\n\r\n            <Checkbox onChange={onClickTermToggle}>전체동의</Checkbox>\r\n\r\n            {!termToggle && (\r\n              <Descriptions bordered column={24} layout={`vertical`} size={`large`}>\r\n                <Descriptions.Item label=\"필수\">개인(신용)정보수집/이용</Descriptions.Item>\r\n                <Descriptions.Item label=\"필수\">고유식별정보의 처리</Descriptions.Item>\r\n                <Descriptions.Item label=\"필수\">통신사 이용약관</Descriptions.Item>\r\n                <Descriptions.Item label=\"필수\">서비스 이용약관</Descriptions.Item>\r\n              </Descriptions>\r\n            )}\r\n            <div>\r\n              <Form.Item\r\n                name=\"email\"\r\n                rules={[\r\n                  {\r\n                    type: \"email\",\r\n                    message: \"올바른 이메일 형식을 입력해주세요!\",\r\n                  },\r\n                  {\r\n                    required: true,\r\n                    message: \"이메일를 입력해 주세요!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  size={`large`}\r\n                  prefix={`* Email`}\r\n                  value={email}\r\n                  onChange={onChangeEmail}\r\n                  placeholder=\"Email을 입력해주세요\"\r\n                />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"password\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"비밀번호를 확인해주세요\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input.Password\r\n                  prefix={`* 비밀번호`}\r\n                  size={`large`}\r\n                  value={password}\r\n                  onChange={onChangePassword}\r\n                  placeholder=\"비밀번호를 입력해주세요\"\r\n                />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"passwordCheck\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"비밀번호를 확인해 주세요\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input.Password\r\n                  prefix={`* 비밀번호 확인`}\r\n                  size={`large`}\r\n                  value={passwordCheck}\r\n                  onChange={onChangePasswordCheck}\r\n                  placeholder=\"다시 비밀번호를 입력해주세요\"\r\n                />\r\n              </Form.Item>\r\n              {passwordError && <div>비밀번호가 일치하지 않습니다</div>}\r\n              <Form.Item name=\"name\" rules={[{ required: true, message: \"이름을 입력해주세요\" }]}>\r\n                <Input\r\n                  prefix={divisionToggle ? \"* 가게명\" : \"* 이름\"}\r\n                  size={`large`}\r\n                  onChange={onChangeName}\r\n                  value={name}\r\n                />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"bizcode\"\r\n                rules={[{ required: true, message: \"이름을 입력해주세요\" }]}\r\n              >\r\n                <Input\r\n                  prefix={\"사업자등록번호\"}\r\n                  size={`large`}\r\n                  onChange={onChangeBizcode}\r\n                  value={bizcode}\r\n                />\r\n              </Form.Item>\r\n            </div>\r\n            <Button htmlType={\"submit\"} type={\"primary\"} style={{ width: \"100%\" }}>\r\n              회원가입\r\n            </Button>\r\n          </Space>\r\n        </Form>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(Signup);\r\n"]},"metadata":{},"sourceType":"module"}