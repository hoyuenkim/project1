{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hoyuen\\\\Documents\\\\project\\\\project1\\\\frontend\\\\pages\\\\shop\\\\admin\\\\product\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { List, Button, Avatar, Card } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { ADMIN_PRODUCTS_REQUEST, DELETE_PRODUCT_REQUEST } from '../../../../reducers/shop';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\n\nconst Console = () => {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const {\n    session\n  } = useSelector(state => state.user);\n\n  if (!session || session.division === false) {\n    return router.back();\n  } else {\n    useEffect(() => {\n      dispatch({\n        type: ADMIN_PRODUCTS_REQUEST,\n        ShopId: session.Shops[0].id\n      });\n    }, []);\n  }\n\n  const onClickDelete = id => {\n    const flag = confirm(`이 제품을 정말로 삭제하시겠습니까?`);\n\n    if (!flag) {\n      return false;\n    } else {\n      dispatch({\n        type: DELETE_PRODUCT_REQUEST,\n        id\n      });\n    }\n  };\n\n  const {\n    products\n  } = useSelector(state => state.shop);\n  return __jsx(React.Fragment, null, __jsx(List, {\n    itemLayout: 'horizontal',\n    dataSource: products,\n    renderItem: item => {\n      return __jsx(List.Item, {\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }\n      }, __jsx(Card, {\n        style: {\n          width: '100%'\n        },\n        actions: [__jsx(Link, {\n          href: `/shop/product/edit/${item.id}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 19\n          }\n        }, __jsx(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }\n        }, \"\\uC218\\uC815\")), __jsx(\"div\", {\n          onClick: onClickDelete,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 19\n          }\n        }, \"\\uC0AD\\uC81C\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }\n      }, __jsx(List.Item.Meta, {\n        avatar: __jsx(Avatar, {\n          src: `http://127.0.0.1:3065/uploads/${item.Images[0].url}`,\n          shape: \"square\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }\n        }),\n        title: item.title,\n        description: __jsx(React.Fragment, null, __jsx(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 23\n          }\n        }, item.price, \",\", item.description)),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }\n      })));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }));\n};\n\nConsole.protoType = {\n  productList: PropTypes.object.isRequired\n};\nexport default Console;","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/pages/shop/admin/product/index.js"],"names":["List","Button","Avatar","Card","useDispatch","useSelector","useEffect","useRouter","ADMIN_PRODUCTS_REQUEST","DELETE_PRODUCT_REQUEST","PropTypes","Link","Console","dispatch","router","session","state","user","division","back","type","ShopId","Shops","id","onClickDelete","flag","confirm","products","shop","item","width","Images","url","title","price","description","protoType","productList","object","isRequired"],"mappings":"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","sourcesContent":["import { List, Button, Avatar, Card } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport { ADMIN_PRODUCTS_REQUEST, DELETE_PRODUCT_REQUEST } from '../../../../reducers/shop';\r\nimport PropTypes from 'prop-types';\r\nimport Link from 'next/link';\r\n\r\nconst Console = () => {\r\n  const dispatch = useDispatch();\r\n  const router = useRouter();\r\n  const { session } = useSelector((state) => state.user);\r\n  if (!session || session.division === false) {\r\n    return router.back();\r\n  } else {\r\n    useEffect(() => {\r\n      dispatch({ type: ADMIN_PRODUCTS_REQUEST, ShopId: session.Shops[0].id });\r\n    }, []);\r\n  }\r\n\r\n  const onClickDelete = (id) => {\r\n    const flag = confirm(`이 제품을 정말로 삭제하시겠습니까?`);\r\n    if (!flag) {\r\n      return false;\r\n    } else {\r\n      dispatch({ type: DELETE_PRODUCT_REQUEST, id });\r\n    }\r\n  };\r\n\r\n  const { products } = useSelector((state) => state.shop);\r\n\r\n  return (\r\n    <>\r\n      <List\r\n        itemLayout={'horizontal'}\r\n        dataSource={products}\r\n        renderItem={(item) => {\r\n          return (\r\n            <List.Item key={item.id}>\r\n              <Card\r\n                style={{ width: '100%' }}\r\n                actions={[\r\n                  <Link href={`/shop/product/edit/${item.id}`}>\r\n                    <div>수정</div>\r\n                  </Link>,\r\n                  <div onClick={onClickDelete}>삭제</div>,\r\n                ]}\r\n              >\r\n                <List.Item.Meta\r\n                  avatar={\r\n                    <Avatar\r\n                      src={`http://127.0.0.1:3065/uploads/${item.Images[0].url}`}\r\n                      shape=\"square\"\r\n                      \r\n                    />\r\n                  }\r\n                  title={item.title}\r\n                  description={\r\n                    <>\r\n                      <p>\r\n                        {item.price},{item.description}\r\n                      </p>\r\n                    </>\r\n                  }\r\n                />\r\n              </Card>\r\n            </List.Item>\r\n          );\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nConsole.protoType = {\r\n  productList: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Console;\r\n"]},"metadata":{},"sourceType":"module"}