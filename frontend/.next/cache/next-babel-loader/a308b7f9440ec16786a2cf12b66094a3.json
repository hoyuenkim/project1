{"ast":null,"code":"import axios from \"axios\";\nimport { all, put, fork, call, takeLatest } from \"redux-saga/effects\";\nimport { LOAD_PRODUCTS_SUCCESS, LOAD_PRODUCTS_FAILURE, LOAD_PRODUCTS_REQUEST } from \"../reducers/menu\";\n\nfunction loadProductApi() {\n  return axios.get(`/shop/${data.shopId}/${data.tableId}`); // return axios.get(\"/menu\");\n}\n\nfunction* loadProducts() {\n  try {\n    const result = yield call(loadProductApi);\n    yield put({\n      type: LOAD_PRODUCTS_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.log(e);\n    yield put({\n      type: LOAD_PRODUCTS_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchLoadProducts() {\n  yield takeLatest(LOAD_PRODUCTS_REQUEST, loadProducts);\n}\n\nexport default function* productsSaga() {\n  yield all([fork(watchLoadProducts)]);\n}","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/sagas/menu.js"],"names":["axios","all","put","fork","call","takeLatest","LOAD_PRODUCTS_SUCCESS","LOAD_PRODUCTS_FAILURE","LOAD_PRODUCTS_REQUEST","loadProductApi","get","data","shopId","tableId","loadProducts","result","type","e","console","log","error","watchLoadProducts","productsSaga"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,UAA/B,QAAiD,oBAAjD;AACA,SACEC,qBADF,EAEEC,qBAFF,EAGEC,qBAHF,QAIO,kBAJP;;AAMA,SAASC,cAAT,GAA0B;AACxB,SAAOT,KAAK,CAACU,GAAN,CAAW,SAAQC,IAAI,CAACC,MAAO,IAAGD,IAAI,CAACE,OAAQ,EAA/C,CAAP,CADwB,CAExB;AACD;;AAED,UAAUC,YAAV,GAAyB;AACvB,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMX,IAAI,CAACK,cAAD,CAAzB;AACA,UAAMP,GAAG,CAAC;AACRc,MAAAA,IAAI,EAAEV,qBADE;AAERK,MAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFL,KAAD,CAAT;AAID,GAND,CAME,OAAOM,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,UAAMf,GAAG,CAAC;AACRc,MAAAA,IAAI,EAAET,qBADE;AAERa,MAAAA,KAAK,EAAEH;AAFC,KAAD,CAAT;AAID;AACF;;AAED,UAAUI,iBAAV,GAA8B;AAC5B,QAAMhB,UAAU,CAACG,qBAAD,EAAwBM,YAAxB,CAAhB;AACD;;AAED,eAAe,UAAUQ,YAAV,GAAyB;AACtC,QAAMrB,GAAG,CAAC,CAACE,IAAI,CAACkB,iBAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import axios from \"axios\";\r\nimport { all, put, fork, call, takeLatest } from \"redux-saga/effects\";\r\nimport {\r\n  LOAD_PRODUCTS_SUCCESS,\r\n  LOAD_PRODUCTS_FAILURE,\r\n  LOAD_PRODUCTS_REQUEST,\r\n} from \"../reducers/menu\";\r\n\r\nfunction loadProductApi() {\r\n  return axios.get(`/shop/${data.shopId}/${data.tableId}`);\r\n  // return axios.get(\"/menu\");\r\n}\r\n\r\nfunction* loadProducts() {\r\n  try {\r\n    const result = yield call(loadProductApi);\r\n    yield put({\r\n      type: LOAD_PRODUCTS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({\r\n      type: LOAD_PRODUCTS_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLoadProducts() {\r\n  yield takeLatest(LOAD_PRODUCTS_REQUEST, loadProducts);\r\n}\r\n\r\nexport default function* productsSaga() {\r\n  yield all([fork(watchLoadProducts)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}