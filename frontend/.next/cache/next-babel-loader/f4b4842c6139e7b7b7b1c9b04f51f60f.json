{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hoyuen\\\\Documents\\\\project\\\\project1\\\\frontend\\\\pages\\\\menu\\\\[shopId]\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { LOAD_USER_REQUEST } from \"../../../reducers/user\";\nimport { LOAD_PRODUCTS_REQUEST } from \"../../../reducers/menu\";\nimport wrapper from \"../../../store/configureStore\";\nimport MenuBoard from \"../../../components/Generalui/MenuBoard\";\nimport axios from \"axios\";\nimport { END } from \"redux-saga\";\n\nconst Index = () => {\n  const [IMP, setIMP] = useState(null);\n  useEffect(() => {\n    const {\n      IMP\n    } = window;\n    setIMP(IMP);\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(MenuBoard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : \"\";\n  axios.defaults.headers.Cookie = \"\";\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_USER_REQUEST\n  });\n  const {\n    shopId\n  } = context.query;\n  context.store.dispatch({\n    type: LOAD_PRODUCTS_REQUEST,\n    data: {\n      shopId\n    }\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Index;","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/pages/menu/[shopId]/index.js"],"names":["LOAD_USER_REQUEST","LOAD_PRODUCTS_REQUEST","wrapper","MenuBoard","axios","END","Index","IMP","setIMP","useState","useEffect","window","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","dispatch","type","shopId","query","data","sagaTask","toPromise"],"mappings":";;;AAAA,SAASA,iBAAT,QAAkC,wBAAlC;AACA,SAASC,qBAAT,QAAsC,wBAAtC;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,SAAP,MAAsB,yCAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,YAApB;;AAGA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBC,QAAQ,CAAC,IAAD,CAA9B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM;AAAEH,MAAAA;AAAF,QAAUI,MAAhB;AACAH,IAAAA,MAAM,CAACD,GAAD,CAAN;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,SACE,4BACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAbD;;AAeA,OAAO,MAAMK,kBAAkB,GAAGV,OAAO,CAACU,kBAAR,CAA2B,MAAOC,OAAP,IAAmB;AAC9E,QAAMC,MAAM,GAAGD,OAAO,CAACE,GAAR,GAAcF,OAAO,CAACE,GAAR,CAAYC,OAAZ,CAAoBF,MAAlC,GAA2C,EAA1D;AACAV,EAAAA,KAAK,CAACa,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgC,EAAhC;;AACA,MAAIL,OAAO,CAACE,GAAR,IAAeD,MAAnB,EAA2B;AACzBV,IAAAA,KAAK,CAACa,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgCJ,MAAhC;AACD;;AACDD,EAAAA,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuB;AAAEC,IAAAA,IAAI,EAAErB;AAAR,GAAvB;AACA,QAAM;AAAEsB,IAAAA;AAAF,MAAaT,OAAO,CAACU,KAA3B;AACAV,EAAAA,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuB;AAAEC,IAAAA,IAAI,EAAEpB,qBAAR;AAA+BuB,IAAAA,IAAI,EAAE;AAAEF,MAAAA;AAAF;AAArC,GAAvB;AACAT,EAAAA,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuBf,GAAvB;AACA,QAAMQ,OAAO,CAACM,KAAR,CAAcM,QAAd,CAAuBC,SAAvB,EAAN;AACD,CAXiC,CAA3B;AAaP,eAAepB,KAAf","sourcesContent":["import { LOAD_USER_REQUEST } from \"../../../reducers/user\";\r\nimport { LOAD_PRODUCTS_REQUEST } from \"../../../reducers/menu\";\r\nimport wrapper from \"../../../store/configureStore\";\r\nimport MenuBoard from \"../../../components/Generalui/MenuBoard\";\r\nimport axios from \"axios\";\r\nimport { END } from \"redux-saga\";\r\n\r\n\r\nconst Index = () => {\r\n  const [IMP, setIMP] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const { IMP } = window;\r\n    setIMP(IMP);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <MenuBoard />\r\n    </>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  const cookie = context.req ? context.req.headers.cookie : \"\";\r\n  axios.defaults.headers.Cookie = \"\";\r\n  if (context.req && cookie) {\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n  context.store.dispatch({ type: LOAD_USER_REQUEST });\r\n  const { shopId } = context.query;\r\n  context.store.dispatch({ type: LOAD_PRODUCTS_REQUEST, data: { shopId } });\r\n  context.store.dispatch(END);\r\n  await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}