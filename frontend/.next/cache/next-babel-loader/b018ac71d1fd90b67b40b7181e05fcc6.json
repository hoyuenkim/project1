{"ast":null,"code":"import axios from \"axios\";\nimport { CLEAR_CART_REQUEST } from \"../../reducers/cart\";\nexport const onClickPayment = ({\n  type,\n  id,\n  product,\n  isLoggedIn,\n  session,\n  onChangeToggleModal,\n  discount,\n  dispatch,\n  quantity,\n  cart,\n  ShopName,\n  router,\n  ShopId,\n  TableId\n}) => {\n  const onWindowScroll = () => {\n    window.scrollTo({\n      top: 0\n    });\n  };\n\n  let originData;\n  let amount = 0;\n  let name;\n\n  if (isLoggedIn) {\n    if (type == \"single\") {\n      originData = {\n        id,\n        UserId: session.id,\n        UserName: session.name,\n        ProductId: product.id,\n        ShopId,\n        price: product.price * (1 - discount) * quantity,\n        quantity,\n        ShopName,\n        ProductTitle: product.title\n      };\n    } else {\n      cart.map(product => amount += product.Discount ? product.price * (100 - product.Discount.rate) * 0.01 * product.quantity : product.price * product.quantity);\n      name = cart.length > 1 ? `${product.title} 외 ${cart.length - 1} 건` : product.title;\n      originData = cart.map(product => {\n        return {\n          id,\n          ProductId: product.id,\n          ShopId,\n          UserId: session.id,\n          UserName: session.name,\n          price: product.Discount ? product.price * (100 - product.Discount.rate) * 0.01 : product.price,\n          quantity,\n          ShopName: product.Shop.name,\n          ProductTitle: product.title\n        };\n      });\n    }\n\n    const custom_data = JSON.stringify(type == \"single\" ? [originData] : originData);\n\n    if (IMP !== null) {\n      onWindowScroll();\n      IMP.init(process.env.IAMPORT_KEY);\n      const today = Date.now();\n      IMP.request_pay({\n        pay_method: \"card\",\n        name: type !== \"cart\" ? product.title : name,\n        Merchant_uid: \"uid\" + today,\n        amount: type !== \"cart\" ? product.Discount ? Math.ceil(product.price * (100 - product.Discount.rate) * 0.01) * product.quantity : discount ? Math.ceil(product.price * (1 - discount)) * quantity : product.price * product.quantity : amount,\n        custom_data\n      }, async response => {\n        const {\n          success,\n          merchant_uid,\n          error_msg\n        } = response;\n\n        try {\n          if (success) {\n            await axios.post(`${process.env.BACKEND_IP}/payments/complete`, {\n              data: response\n            });\n            const array = await JSON.parse(custom_data);\n            array.map(async product => {\n              await axios.post(`${process.env.BACKEND_IP}/stock/sold`, {\n                id: product.id,\n                ShopId: product.ShopId,\n                quantity: product.quantity\n              });\n            });\n            dispatch({\n              type: CLEAR_CART_REQUEST\n            });\n\n            if (type == \"cart\") {\n              router.push(TableId === undefined ? `/menu/${ShopId}` : `/menu/${ShopId}/${TableId}`);\n            }\n          } else {\n            alert(`결제 실패: ${error_msg}`);\n          }\n        } catch (err) {\n          return console.error(err.response);\n        }\n      });\n    }\n  } else {\n    onChangeToggleModal();\n  }\n};","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/Dev/project1/frontend/components/Generalui/Payment.js"],"names":["axios","CLEAR_CART_REQUEST","onClickPayment","type","id","product","isLoggedIn","session","onChangeToggleModal","discount","dispatch","quantity","cart","ShopName","router","ShopId","TableId","onWindowScroll","window","scrollTo","top","originData","amount","name","UserId","UserName","ProductId","price","ProductTitle","title","map","Discount","rate","length","Shop","custom_data","JSON","stringify","IMP","init","process","env","IAMPORT_KEY","today","Date","now","request_pay","pay_method","Merchant_uid","Math","ceil","response","success","merchant_uid","error_msg","post","BACKEND_IP","data","array","parse","push","undefined","alert","err","console","error"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { CLEAR_CART_REQUEST } from \"../../reducers/cart\";\n\nexport const onClickPayment = ({\n  type,\n  id,\n  product,\n  isLoggedIn,\n  session,\n  onChangeToggleModal,\n  discount,\n  dispatch,\n  quantity,\n  cart,\n  ShopName,\n  router,\n  ShopId,\n  TableId,\n}) => {\n  const onWindowScroll = () => {\n    window.scrollTo({ top: 0 });\n  };\n\n  let originData;\n  let amount = 0;\n  let name;\n  if (isLoggedIn) {\n    if (type == \"single\") {\n      originData = {\n        id,\n        UserId: session.id,\n        UserName: session.name,\n        ProductId: product.id,\n        ShopId,\n        price: product.price * (1 - discount) * quantity,\n        quantity,\n        ShopName,\n        ProductTitle: product.title,\n      };\n    } else {\n      cart.map(\n        (product) =>\n          (amount += product.Discount\n            ? product.price * (100 - product.Discount.rate) * 0.01 * product.quantity\n            : product.price * product.quantity),\n      );\n      name = cart.length > 1 ? `${product.title} 외 ${cart.length - 1} 건` : product.title;\n      originData = cart.map((product) => {\n        return {\n          id,\n          ProductId: product.id,\n          ShopId,\n          UserId: session.id,\n          UserName: session.name,\n          price: product.Discount\n            ? product.price * (100 - product.Discount.rate) * 0.01\n            : product.price,\n          quantity,\n          ShopName: product.Shop.name,\n          ProductTitle: product.title,\n        };\n      });\n    }\n\n    const custom_data = JSON.stringify(type == \"single\" ? [originData] : originData);\n\n    if (IMP !== null) {\n      onWindowScroll();\n      IMP.init(process.env.IAMPORT_KEY);\n      const today = Date.now();\n      IMP.request_pay(\n        {\n          pay_method: \"card\",\n          name: type !== \"cart\" ? product.title : name,\n          Merchant_uid: \"uid\" + today,\n          amount:\n            type !== \"cart\"\n              ? product.Discount\n                ? Math.ceil(product.price * (100 - product.Discount.rate) * 0.01) * product.quantity\n                : discount\n                ? Math.ceil(product.price * (1 - discount)) * quantity\n                : product.price * product.quantity\n              : amount,\n          custom_data,\n        },\n        async (response) => {\n          const { success, merchant_uid, error_msg } = response;\n          try {\n            if (success) {\n              await axios.post(`${process.env.BACKEND_IP}/payments/complete`, {\n                data: response,\n              });\n              const array = await JSON.parse(custom_data);\n              array.map(async (product) => {\n                await axios.post(`${process.env.BACKEND_IP}/stock/sold`, {\n                  id: product.id,\n                  ShopId: product.ShopId,\n                  quantity: product.quantity,\n                });\n              });\n              dispatch({ type: CLEAR_CART_REQUEST });\n              if (type == \"cart\") {\n                router.push(\n                  TableId === undefined ? `/menu/${ShopId}` : `/menu/${ShopId}/${TableId}`,\n                );\n              }\n            } else {\n              alert(`결제 실패: ${error_msg}`);\n            }\n          } catch (err) {\n            return console.error(err.response);\n          }\n        },\n      );\n    }\n  } else {\n    onChangeToggleModal();\n  }\n};\n"]},"metadata":{},"sourceType":"module"}