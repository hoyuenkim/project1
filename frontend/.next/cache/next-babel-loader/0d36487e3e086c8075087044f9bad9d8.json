{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(paymentHistory),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchPaymentHistory),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(rating),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchRating),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(searchHistory),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchSearchHistory),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(cancelPayment),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(watchCancelPayment),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(userSaga);\n\nimport { fork, takeEvery, all, put, call, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOAD_PAYMENT_HISTORY_FAILURE, LOAD_PAYMENT_HISTORY_REQUEST, LOAD_PAYMENT_HISTORY_SUCCESS, RATING_FAILURE, RATING_SUCCESS, RATING_REQUEST, SEARCH_HISTORY_SUCCESS, SEARCH_HISTORY_FAILURE, SEARCH_HISTORY_REQUEST, PAYMENT_HISTORY_REMOVE_REQUEST, PAYMENT_HISTORY_REMOVE_FAILURE, PAYMENT_HISTORY_REMOVE_SUCCESS } from '../reducers/payment';\n\nfunction paymentHistoryAPI(data) {\n  return axios.post('/payments/load', {\n    id: data.id,\n    ShopId: data.ShopId,\n    division: data.division\n  });\n}\n\nfunction paymentHistory(data) {\n  var result;\n  return _regeneratorRuntime.wrap(function paymentHistory$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(paymentHistoryAPI, data);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            type: LOAD_PAYMENT_HISTORY_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context.next = 12;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 12;\n          return put({\n            type: LOAD_PAYMENT_HISTORY_FAILURE,\n            error: _context.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction watchPaymentHistory() {\n  return _regeneratorRuntime.wrap(function watchPaymentHistory$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(LOAD_PAYMENT_HISTORY_REQUEST, paymentHistory);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction ratingAPI(_ref) {\n  var data = _ref.data;\n  return axios.post('/payments/rating', {\n    PaymentsId: data.PaymentsId,\n    UserId: data.UserId,\n    ProductId: data.ProductId,\n    rate: data.rate\n  });\n}\n\nfunction rating(data) {\n  var result;\n  return _regeneratorRuntime.wrap(function rating$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(ratingAPI, data);\n\n        case 3:\n          result = _context3.sent;\n          _context3.next = 6;\n          return put({\n            type: RATING_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context3.next = 13;\n          break;\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(_context3.t0);\n          _context3.next = 13;\n          return put({\n            type: RATING_FAILURE,\n            error: _context3.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 8]]);\n}\n\nfunction watchRating() {\n  return _regeneratorRuntime.wrap(function watchRating$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(RATING_REQUEST, rating);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction searchHistoryAPI(_ref2) {\n  var data = _ref2.data;\n  console.log(data);\n\n  if (data.divison === true) {\n    return axios.post('/payments/search/shop', {\n      data: data\n    });\n  } else {\n    return axios.post('/payments/search/user', {\n      data: data\n    });\n  }\n}\n\nfunction searchHistory(data) {\n  var result;\n  return _regeneratorRuntime.wrap(function searchHistory$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(searchHistoryAPI, data);\n\n        case 3:\n          result = _context5.sent;\n          _context5.next = 6;\n          return put({\n            type: SEARCH_HISTORY_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context5.next = 13;\n          break;\n\n        case 8:\n          _context5.prev = 8;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.log(_context5.t0);\n          _context5.next = 13;\n          return put({\n            type: SEARCH_HISTORY_FAILURE\n          });\n\n        case 13:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 8]]);\n}\n\nfunction watchSearchHistory() {\n  return _regeneratorRuntime.wrap(function watchSearchHistory$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(SEARCH_HISTORY_REQUEST, searchHistory);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nfunction cancelPaymentAPI(_ref3) {\n  var id = _ref3.id,\n      UserId = _ref3.UserId,\n      division = _ref3.division,\n      merchant_uid = _ref3.merchant_uid;\n  return axios.post('/payments/cancel', {\n    id: id,\n    UserId: UserId,\n    division: division,\n    merchant_uid: merchant_uid\n  });\n}\n\nfunction cancelPayment(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function cancelPayment$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _context7.next = 3;\n          return call(cancelPaymentAPI, action.data);\n\n        case 3:\n          result = _context7.sent;\n          console.log(result.data);\n          _context7.next = 7;\n          return put({\n            type: PAYMENT_HISTORY_REMOVE_SUCCESS,\n            data: result.data\n          });\n\n        case 7:\n          _context7.next = 14;\n          break;\n\n        case 9:\n          _context7.prev = 9;\n          _context7.t0 = _context7[\"catch\"](0);\n          console.log(_context7.t0);\n          _context7.next = 14;\n          return put({\n            type: PAYMENT_HISTORY_REMOVE_FAILURE,\n            error: _context7.t0\n          });\n\n        case 14:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 9]]);\n}\n\nfunction watchCancelPayment() {\n  return _regeneratorRuntime.wrap(function watchCancelPayment$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeLatest(PAYMENT_HISTORY_REMOVE_REQUEST, cancelPayment);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return all([fork(watchPaymentHistory), fork(watchRating), fork(watchSearchHistory), fork(watchCancelPayment)]);\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9);\n}","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/sagas/payment.js"],"names":["paymentHistory","watchPaymentHistory","rating","watchRating","searchHistory","watchSearchHistory","cancelPayment","watchCancelPayment","userSaga","fork","takeEvery","all","put","call","takeLatest","axios","LOAD_PAYMENT_HISTORY_FAILURE","LOAD_PAYMENT_HISTORY_REQUEST","LOAD_PAYMENT_HISTORY_SUCCESS","RATING_FAILURE","RATING_SUCCESS","RATING_REQUEST","SEARCH_HISTORY_SUCCESS","SEARCH_HISTORY_FAILURE","SEARCH_HISTORY_REQUEST","PAYMENT_HISTORY_REMOVE_REQUEST","PAYMENT_HISTORY_REMOVE_FAILURE","PAYMENT_HISTORY_REMOVE_SUCCESS","paymentHistoryAPI","data","post","id","ShopId","division","result","type","error","ratingAPI","PaymentsId","UserId","ProductId","rate","console","log","searchHistoryAPI","divison","cancelPaymentAPI","merchant_uid","action"],"mappings":"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","sourcesContent":["import { fork, takeEvery, all, put, call, takeLatest } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\n\r\nimport {\r\n  LOAD_PAYMENT_HISTORY_FAILURE,\r\n  LOAD_PAYMENT_HISTORY_REQUEST,\r\n  LOAD_PAYMENT_HISTORY_SUCCESS,\r\n  RATING_FAILURE,\r\n  RATING_SUCCESS,\r\n  RATING_REQUEST,\r\n  SEARCH_HISTORY_SUCCESS,\r\n  SEARCH_HISTORY_FAILURE,\r\n  SEARCH_HISTORY_REQUEST,\r\n  PAYMENT_HISTORY_REMOVE_REQUEST,\r\n  PAYMENT_HISTORY_REMOVE_FAILURE,\r\n  PAYMENT_HISTORY_REMOVE_SUCCESS,\r\n} from '../reducers/payment';\r\n\r\nfunction paymentHistoryAPI(data) {\r\n  return axios.post('/payments/load', {\r\n    id: data.id,\r\n    ShopId: data.ShopId,\r\n    division: data.division,\r\n  });\r\n}\r\n\r\nfunction* paymentHistory(data) {\r\n  try {\r\n    const result = yield call(paymentHistoryAPI, data);\r\n    yield put({\r\n      type: LOAD_PAYMENT_HISTORY_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    yield put({ type: LOAD_PAYMENT_HISTORY_FAILURE, error: e });\r\n  }\r\n}\r\n\r\nfunction* watchPaymentHistory() {\r\n  yield takeLatest(LOAD_PAYMENT_HISTORY_REQUEST, paymentHistory);\r\n}\r\n\r\nfunction ratingAPI({ data }) {\r\n  return axios.post('/payments/rating', {\r\n    PaymentsId: data.PaymentsId,\r\n    UserId: data.UserId,\r\n    ProductId: data.ProductId,\r\n    rate: data.rate,\r\n  });\r\n}\r\n\r\nfunction* rating(data) {\r\n  try {\r\n    const result = yield call(ratingAPI, data);\r\n    yield put({ type: RATING_SUCCESS, data: result.data });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({ type: RATING_FAILURE, error: e });\r\n  }\r\n}\r\n\r\nfunction* watchRating() {\r\n  yield takeLatest(RATING_REQUEST, rating);\r\n}\r\n\r\nfunction searchHistoryAPI({ data }) {\r\n  console.log(data);\r\n  if (data.divison === true) {\r\n    return axios.post('/payments/search/shop', { data });\r\n  } else {\r\n    return axios.post('/payments/search/user', { data });\r\n  }\r\n}\r\n\r\nfunction* searchHistory(data) {\r\n  try {\r\n    const result = yield call(searchHistoryAPI, data);\r\n    yield put({ type: SEARCH_HISTORY_SUCCESS, data: result.data });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({ type: SEARCH_HISTORY_FAILURE });\r\n  }\r\n}\r\n\r\nfunction* watchSearchHistory() {\r\n  yield takeLatest(SEARCH_HISTORY_REQUEST, searchHistory);\r\n}\r\n\r\nfunction cancelPaymentAPI({ id, UserId, division, merchant_uid }) {\r\n  return axios.post('/payments/cancel', { id, UserId, division, merchant_uid });\r\n}\r\n\r\nfunction* cancelPayment(action) {\r\n  try {\r\n    const result = yield call(cancelPaymentAPI, action.data);\r\n    console.log(result.data);\r\n    yield put({ type: PAYMENT_HISTORY_REMOVE_SUCCESS, data: result.data });\r\n  } catch (err) {\r\n    console.log(err);\r\n    yield put({ type: PAYMENT_HISTORY_REMOVE_FAILURE, error: err });\r\n  }\r\n}\r\n\r\nfunction* watchCancelPayment() {\r\n  yield takeLatest(PAYMENT_HISTORY_REMOVE_REQUEST, cancelPayment);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([\r\n    fork(watchPaymentHistory),\r\n    fork(watchRating),\r\n    fork(watchSearchHistory),\r\n    fork(watchCancelPayment),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}