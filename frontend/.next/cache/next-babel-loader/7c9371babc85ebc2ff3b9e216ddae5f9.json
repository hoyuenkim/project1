{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hoyuen\\\\Documents\\\\project\\\\project1\\\\frontend\\\\pages\\\\shop\\\\admin\\\\product\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { List, Button, Modal, Avatar, Card } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { ADMIN_PRODUCTS_REQUEST, DELETE_PRODUCT_REQUEST } from '../../../../reducers/shop';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\nimport { useChecked } from '../../../../components/Generalui/CustomHooks';\nimport EditProduct from '../../../../components/Generalui/EditProduct';\n\nconst Console = () => {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const {\n    session\n  } = useSelector(state => state.user);\n\n  if (!session || session.division === false) {\n    return router.back();\n  } else {\n    useEffect(() => {\n      dispatch({\n        type: ADMIN_PRODUCTS_REQUEST,\n        ShopId: session.Shops[0].id\n      });\n    }, []);\n  }\n\n  const [edit, onToggleEdit, setEdit] = useChecked(false);\n  const {\n    products\n  } = useSelector(state => state.shop);\n  return __jsx(React.Fragment, null, __jsx(Modal, {\n    title: '수정하기',\n    visible: edit,\n    onCancel: onToggleEdit,\n    footer: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }\n  }, __jsx(EditProduct, {\n    item: item,\n    setEdit: setEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  })), __jsx(Card, {\n    style: {\n      width: '100%'\n    },\n    actions: [__jsx(\"div\", {\n      onClick: onToggleEdit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    }, \"\\uC218\\uC815\"), __jsx(\"div\", {\n      onClick: () => {\n        const flag = confirm(`이 제품을 정말로 삭제하시겠습니까?`);\n\n        if (!flag) {\n          return false;\n        } else {\n          dispatch({\n            type: DELETE_PRODUCT_REQUEST,\n            id: item.id\n          });\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    }, \"\\uC0AD\\uC81C\")],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 16\n    }\n  }, __jsx(List.Item.Meta, {\n    avatar: __jsx(Avatar, {\n      src: `http://127.0.0.1:3065/uploads/${item.Images[0].url}`,\n      shape: 'square',\n      size: 'large',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 23\n      }\n    }),\n    title: item.title,\n    description: __jsx(React.Fragment, null, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    }, item.price, \",\", item.description)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }\n  })));\n};\n\nConsole.protoType = {\n  productList: PropTypes.object.isRequired\n};\nexport default Console;","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/pages/shop/admin/product/index.js"],"names":["List","Button","Modal","Avatar","Card","useDispatch","useSelector","useEffect","useState","useRouter","ADMIN_PRODUCTS_REQUEST","DELETE_PRODUCT_REQUEST","PropTypes","Link","useChecked","EditProduct","Console","dispatch","router","session","state","user","division","back","type","ShopId","Shops","id","edit","onToggleEdit","setEdit","products","shop","item","width","flag","confirm","Images","url","title","price","description","protoType","productList","object","isRequired"],"mappings":"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","sourcesContent":["import { List, Button, Modal, Avatar, Card } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect, useState } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport { ADMIN_PRODUCTS_REQUEST, DELETE_PRODUCT_REQUEST } from '../../../../reducers/shop';\r\nimport PropTypes from 'prop-types';\r\nimport Link from 'next/link';\r\nimport { useChecked } from '../../../../components/Generalui/CustomHooks';\r\nimport EditProduct from '../../../../components/Generalui/EditProduct';\r\n\r\nconst Console = () => {\r\n  const dispatch = useDispatch();\r\n  const router = useRouter();\r\n  const { session } = useSelector((state) => state.user);\r\n  if (!session || session.division === false) {\r\n    return router.back();\r\n  } else {\r\n    useEffect(() => {\r\n      dispatch({ type: ADMIN_PRODUCTS_REQUEST, ShopId: session.Shops[0].id });\r\n    }, []);\r\n  }\r\n\r\n  const [edit, onToggleEdit, setEdit] = useChecked(false);\r\n\r\n  const { products } = useSelector((state) => state.shop);\r\n\r\n  return (\r\n    \r\n            <>\r\n              <Modal title={'수정하기'} visible={edit} onCancel={onToggleEdit} footer={null}>\r\n                <EditProduct item={item} setEdit={setEdit} />\r\n              </Modal>\r\n               <Card\r\n                  style={{ width: '100%' }}\r\n                  actions={[\r\n                    <div onClick={onToggleEdit}>수정</div>,\r\n                    <div\r\n                      onClick={() => {\r\n                        const flag = confirm(`이 제품을 정말로 삭제하시겠습니까?`);\r\n                        if (!flag) {\r\n                          return false;\r\n                        } else {\r\n                          dispatch({ type: DELETE_PRODUCT_REQUEST, id: item.id });\r\n                        }\r\n                      }}\r\n                    >\r\n                      삭제\r\n                    </div>,\r\n                  ]}\r\n                >\r\n                  <List.Item.Meta\r\n                    avatar={\r\n                      <Avatar\r\n                        src={`http://127.0.0.1:3065/uploads/${item.Images[0].url}`}\r\n                        shape={'square'}\r\n                        size={'large'}\r\n                      />\r\n                    }\r\n                    title={item.title}\r\n                    description={\r\n                      <>\r\n                        <p>\r\n                          {item.price},{item.description}\r\n                        </p>\r\n                      </>\r\n                    }\r\n                  />\r\n                </Card>\r\n          \r\n    </>\r\n  );\r\n};\r\n\r\nConsole.protoType = {\r\n  productList: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Console;\r\n"]},"metadata":{},"sourceType":"module"}