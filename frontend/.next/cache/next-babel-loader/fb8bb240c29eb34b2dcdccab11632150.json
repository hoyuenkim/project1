{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport product from \"immer\";\nconst initialState = {\n  cart: []\n};\nexport const LOAD_CART_REQUEST = \"LOAD_CART_REQUEST\";\nexport const LOAD_CART_SUCCESS = \"LOAD_CART_SUCCESS\";\nexport const LOAD_CART_FAILURE = \"LOAD_CART_FAILURE\";\nexport const REMOVE_ITEM_REQUEST = \"REMOVE_ITEM_REQUEST\";\nexport const REMOVE_ITEM_SUCCESS = \"REMOVE_ITEM_SUCCESS\";\nexport const REMOVE_ITEM_FAILURE = \"REMOVE_ITEM_FAILURE\";\nexport const ADD_ITEM_QUANTITY_REQUEST = \"ADD_ITEM_QUANTITY_REQUEST\";\nexport const SUBSTRACT_ITEM_QUANTITY_REQUEST = \"SUBSTRACT_ITEM_QUANTITY_REQUEST\";\nexport const ADD_CART_ITEM_REQUEST = \"ADD_CART_ITEM_REQUEST\";\nexport const REMOVE_CART_ITEM_REQUEST = \"REMOVE_CART_ITEM_REQUEST\";\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_CART_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_CART_SUCCESS:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          cart: [...state.cart, action.data]\n        });\n      }\n\n    case LOAD_CART_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case REMOVE_ITEM_REQUEST:\n      {\n        const items = state.cart.filter(v => v.id !== action.id);\n        return _objectSpread(_objectSpread({}, state), {}, {\n          cart: [...items]\n        });\n      }\n\n    case ADD_ITEM_REQUEST:\n      {\n        const newItem = state.cart.filter(v => v.id === action.id);\n        return _objectSpread(_objectSpread({}, state), {}, {\n          cart: [...state.cart]\n        });\n      }\n\n    case ADD_CART_ITEM_REQUEST:\n      {\n        const listIndex = state.cart.findIndex(v => v.id === action.id);\n        const itemIndex = state.products.findIndex(v => v.id === action.id);\n\n        if (listIndex !== -1) {\n          const cart = [...state.cart];\n          const products = [...state.products];\n          const item = products[itemIndex];\n          const cartItem = cart[listIndex];\n          cart[listIndex].quantity = cartItem.quantity + item.quantity;\n          const productsList = [...state.products.filter(v => v.id !== action.id), _objectSpread(_objectSpread({}, item), {}, {\n            quantity: 1\n          })].sort((a, b) => {\n            return a.id < b.id ? -1 : a.id > b.id ? 1 : 0;\n          });\n          return _objectSpread(_objectSpread({}, state), {}, {\n            products: productsList,\n            cart: cart\n          });\n        } else {\n          const products = [...state.products];\n          const item = products[itemIndex];\n          const productsList = [...state.products.filter(v => v.id !== action.id), _objectSpread(_objectSpread({}, item), {}, {\n            quantity: 1\n          })].sort((a, b) => {\n            return a.id < b.id ? -1 : a.id > b.id ? 1 : 0;\n          });\n          return _objectSpread(_objectSpread({}, state), {}, {\n            products: productsList,\n            cart: [...state.cart, item]\n          });\n        }\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/reducers/cart.js"],"names":["product","initialState","cart","LOAD_CART_REQUEST","LOAD_CART_SUCCESS","LOAD_CART_FAILURE","REMOVE_ITEM_REQUEST","REMOVE_ITEM_SUCCESS","REMOVE_ITEM_FAILURE","ADD_ITEM_QUANTITY_REQUEST","SUBSTRACT_ITEM_QUANTITY_REQUEST","ADD_CART_ITEM_REQUEST","REMOVE_CART_ITEM_REQUEST","state","action","type","data","items","filter","v","id","ADD_ITEM_REQUEST","newItem","listIndex","findIndex","itemIndex","products","item","cartItem","quantity","productsList","sort","a","b"],"mappings":"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","sourcesContent":["import product from \"immer\";\r\n\r\nconst initialState = {\r\n  cart: [],\r\n};\r\n\r\nexport const LOAD_CART_REQUEST = \"LOAD_CART_REQUEST\";\r\nexport const LOAD_CART_SUCCESS = \"LOAD_CART_SUCCESS\";\r\nexport const LOAD_CART_FAILURE = \"LOAD_CART_FAILURE\";\r\n\r\nexport const REMOVE_ITEM_REQUEST = \"REMOVE_ITEM_REQUEST\";\r\nexport const REMOVE_ITEM_SUCCESS = \"REMOVE_ITEM_SUCCESS\";\r\nexport const REMOVE_ITEM_FAILURE = \"REMOVE_ITEM_FAILURE\";\r\n\r\nexport const ADD_ITEM_QUANTITY_REQUEST = \"ADD_ITEM_QUANTITY_REQUEST\";\r\nexport const SUBSTRACT_ITEM_QUANTITY_REQUEST = \"SUBSTRACT_ITEM_QUANTITY_REQUEST\";\r\n\r\nexport const ADD_CART_ITEM_REQUEST = \"ADD_CART_ITEM_REQUEST\";\r\nexport const REMOVE_CART_ITEM_REQUEST = \"REMOVE_CART_ITEM_REQUEST\";\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOAD_CART_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n\r\n    case LOAD_CART_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        cart: [...state.cart, action.data],\r\n      };\r\n    }\r\n\r\n    case LOAD_CART_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n\r\n    case REMOVE_ITEM_REQUEST: {\r\n      const items = state.cart.filter((v) => v.id !== action.id);\r\n      return {\r\n        ...state,\r\n        cart: [...items],\r\n      };\r\n    }\r\n\r\n    case ADD_ITEM_REQUEST: {\r\n      const newItem = state.cart.filter((v) => v.id === action.id);\r\n      return {\r\n        ...state,\r\n        cart: [...state.cart],\r\n      };\r\n    }\r\n\r\n    case ADD_CART_ITEM_REQUEST: {\r\n      const listIndex = state.cart.findIndex((v) => v.id === action.id);\r\n      const itemIndex = state.products.findIndex((v) => v.id === action.id);\r\n      if (listIndex !== -1) {\r\n        const cart = [...state.cart];\r\n        const products = [...state.products];\r\n        const item = products[itemIndex];\r\n        const cartItem = cart[listIndex];\r\n        cart[listIndex].quantity = cartItem.quantity + item.quantity;\r\n        const productsList = [\r\n          ...state.products.filter((v) => v.id !== action.id),\r\n          { ...item, quantity: 1 },\r\n        ].sort((a, b) => {\r\n          return a.id < b.id ? -1 : a.id > b.id ? 1 : 0;\r\n        });\r\n        return {\r\n          ...state,\r\n          products: productsList,\r\n          cart: cart,\r\n        };\r\n      } else {\r\n        const products = [...state.products];\r\n        const item = products[itemIndex];\r\n        const productsList = [\r\n          ...state.products.filter((v) => v.id !== action.id),\r\n          { ...item, quantity: 1 },\r\n        ].sort((a, b) => {\r\n          return a.id < b.id ? -1 : a.id > b.id ? 1 : 0;\r\n        });\r\n        return {\r\n          ...state,\r\n          products: productsList,\r\n          cart: [...state.cart, item],\r\n        };\r\n      }\r\n    }\r\n\r\n    default: {\r\n      return { ...state };\r\n    }\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}