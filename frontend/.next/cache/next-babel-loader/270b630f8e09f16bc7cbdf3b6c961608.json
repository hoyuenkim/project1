{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst initialState = {\n  products: [{\n    id: 1,\n    title: `불닭 볶음면`,\n    price: 3000,\n    quantity: 1,\n    cover: `https://www.samyangfoods.com/upload/product/20200309/20200309161335950019.jpg`,\n    description: `맛있는 불닭 볶음면`\n  }, {\n    id: 2,\n    title: `닭닭`,\n    price: 3000,\n    quantity: 1,\n    cover: `https://img1.daumcdn.net/thumb/R720x0/?fname=https%3A%2F%2Ft1.daumcdn.net%2Fliveboard%2Frealfood%2F8f543966d8b7478e905ec2e65433a596.JPG`,\n    description: `맛있는 불닭 볶음면`\n  }],\n  test: false\n};\nexport const LOAD_PRODUCTS_REQUEST = \"LOAD_PRODUCTS_REQUEST\";\nexport const LOAD_PRODUCTS_SUCCESS = \"LOAD_PRODUCTS_SUCCESS\";\nexport const LOAD_PRODUCTS_FAILURE = \"LOAD_PRODUCTS_FAILURE\";\nexport const ADD_QUANTITY_REQUEST = \"ADD_QUANTITY_REQUEST\";\nexport const ADD_QUANTITY_SUCCESS = \"ADD_QUANTITY_SUCCESS\";\nexport const ADD_QUANTITY_FAILURE = \"ADD_QUANTITY_FAILURE\";\nexport const SUBSTRACT_QUANTITY_REQUEST = \"SUBSTRACT_QUANTITY_REQUEST\";\nexport const SUBSTRACT_QUANTITY_SUCCESS = \"SUBSTRACT_QUANTITY_SUCCESS\";\nexport const SUBSTRACT_QUANTITY_FAILURE = \"SUBSTRACT_QUANTITY_FAILURE\";\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_QUANTITY_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case ADD_QUANTITY_SUCCESS:\n      {\n        const index = state.products.findIndex(product => product.id === action.data.id);\n        const product = state.products[index];\n        const quantity = product.quantity + 1;\n        const products = [...state.products];\n        products[index] = _objectSpread({}, product, {\n          quantity\n        });\n        return _objectSpread({}, state, {\n          products\n        });\n      }\n\n    case ADD_QUANTITY_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case SUBSTRACT_QUANTITY_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case SUBSTRACT_QUANTITY_SUCCESS:\n      {\n        const index = state.products.findIndex(product => product.id === action.data.id);\n        const product = state.products[index];\n        let quantity = product.quantity;\n        quantity > 1 ? quantity -= 1 : 1;\n        const products = [...state.products];\n        products[index] = _objectSpread({}, product, {\n          quantity\n        });\n        return _objectSpread({}, state, {\n          products\n        });\n      }\n\n    case SUBSTRACT_QUANTITY_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_PRODUCTS_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_PRODUCTS_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          products: action.data\n        });\n      }\n\n    case LOAD_PRODUCTS_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/reducers/products.js"],"names":["initialState","products","id","title","price","quantity","cover","description","test","LOAD_PRODUCTS_REQUEST","LOAD_PRODUCTS_SUCCESS","LOAD_PRODUCTS_FAILURE","ADD_QUANTITY_REQUEST","ADD_QUANTITY_SUCCESS","ADD_QUANTITY_FAILURE","SUBSTRACT_QUANTITY_REQUEST","SUBSTRACT_QUANTITY_SUCCESS","SUBSTRACT_QUANTITY_FAILURE","reducer","state","action","type","index","findIndex","product","data"],"mappings":"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","sourcesContent":["const initialState = {\r\n  products: [\r\n    {\r\n      id: 1,\r\n      title: `불닭 볶음면`,\r\n      price: 3000,\r\n      quantity: 1,\r\n      cover: `https://www.samyangfoods.com/upload/product/20200309/20200309161335950019.jpg`,\r\n      description: `맛있는 불닭 볶음면`,\r\n    },\r\n    {\r\n      id: 2,\r\n      title: `닭닭`,\r\n      price: 3000,\r\n      quantity: 1,\r\n      cover: `https://img1.daumcdn.net/thumb/R720x0/?fname=https%3A%2F%2Ft1.daumcdn.net%2Fliveboard%2Frealfood%2F8f543966d8b7478e905ec2e65433a596.JPG`,\r\n      description: `맛있는 불닭 볶음면`,\r\n    },\r\n  ],\r\n  test: false,\r\n};\r\n\r\nexport const LOAD_PRODUCTS_REQUEST = \"LOAD_PRODUCTS_REQUEST\";\r\nexport const LOAD_PRODUCTS_SUCCESS = \"LOAD_PRODUCTS_SUCCESS\";\r\nexport const LOAD_PRODUCTS_FAILURE = \"LOAD_PRODUCTS_FAILURE\";\r\n\r\nexport const ADD_QUANTITY_REQUEST = \"ADD_QUANTITY_REQUEST\";\r\nexport const ADD_QUANTITY_SUCCESS = \"ADD_QUANTITY_SUCCESS\";\r\nexport const ADD_QUANTITY_FAILURE = \"ADD_QUANTITY_FAILURE\";\r\n\r\nexport const SUBSTRACT_QUANTITY_REQUEST = \"SUBSTRACT_QUANTITY_REQUEST\";\r\nexport const SUBSTRACT_QUANTITY_SUCCESS = \"SUBSTRACT_QUANTITY_SUCCESS\";\r\nexport const SUBSTRACT_QUANTITY_FAILURE = \"SUBSTRACT_QUANTITY_FAILURE\";\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_QUANTITY_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case ADD_QUANTITY_SUCCESS: {\r\n      const index = state.products.findIndex((product) => product.id === action.data.id);\r\n      const product = state.products[index];\r\n      const quantity = product.quantity + 1;\r\n      const products = [...state.products];\r\n      products[index] = { ...product, quantity };\r\n\r\n      return {\r\n        ...state,\r\n        products,\r\n      };\r\n    }\r\n    case ADD_QUANTITY_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case SUBSTRACT_QUANTITY_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case SUBSTRACT_QUANTITY_SUCCESS: {\r\n      const index = state.products.findIndex((product) => product.id === action.data.id);\r\n      const product = state.products[index];\r\n      let quantity = product.quantity;\r\n      quantity > 1 ? (quantity -= 1) : 1;\r\n      const products = [...state.products];\r\n      products[index] = { ...product, quantity };\r\n      return {\r\n        ...state,\r\n        products,\r\n      };\r\n    }\r\n    case SUBSTRACT_QUANTITY_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n\r\n    case LOAD_PRODUCTS_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n\r\n    case LOAD_PRODUCTS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        products: action.data,\r\n      };\r\n    }\r\n\r\n    case LOAD_PRODUCTS_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n\r\n    default: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}