{"ast":null,"code":"import { List, Avatar, Card, Button, Row, Col, Divider, Empty } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RestOutlined } from '@ant-design/icons';\nimport CartAmountToggle from '../../components/Generalui/CartAmoutToggle';\nimport NumberFormat from 'react-number-format';\nimport { REMOVE_ITEM_REQUEST, CLEAR_CART_REQUEST } from '../../reducers/cart';\nimport { useState, useEffect } from 'react';\nimport { useWindowSize } from '@react-hook/window-size';\nimport axios from 'axios';\nimport { useRouter } from 'next/router';\nimport { onClickPayment } from '../../components/Generalui/Payment';\nimport ModalInterface from '../../components/Generalui/Modal';\nimport { PAGE_CHANGE_SUCCESS } from '../../reducers/admin';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nconst Cart = () => {\n  const dispatch = useDispatch();\n  const {\n    0: IMP,\n    1: setIMP\n  } = useState(null);\n  const {\n    0: toggleModal,\n    1: setToggleModal\n  } = useState(false);\n  const {\n    cart,\n    ShopId,\n    TableId\n  } = useSelector(state => state.cart);\n  const {\n    isLoggedIn,\n    session\n  } = useSelector(state => state.user);\n  const [windowWidth, windowHeight] = useWindowSize();\n  const router = useRouter();\n  useEffect(() => {\n    dispatch({\n      type: PAGE_CHANGE_SUCCESS,\n      data: 'cart'\n    });\n  });\n\n  const onChangeToggleModal = () => setToggleModal(prev => !prev);\n\n  const product = cart[0];\n\n  const paymentStart = async () => {\n    onClickPayment('cart', product, isLoggedIn, session, onChangeToggleModal, dispatch, cart, router, ShopId, TableId);\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(ModalInterface, {\n      content: '로그인을 하셔야 합니다.',\n      toggleModal: toggleModal,\n      onChangeToggleModal: onChangeToggleModal,\n      title: '경고'\n    }), cart.length === 0 ? /*#__PURE__*/_jsx(Card, {\n      style: {\n        height: '100vh'\n      },\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        style: {\n          marginTop: windowHeight * 0.3,\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsx(Empty, {}), /*#__PURE__*/_jsx(\"h1\", {\n          children: \"\\uC7A5\\uBC14\\uAD6C\\uB2C8\\uAC00 \\uBE44\\uC5C8\\uC2B5\\uB2C8\\uB2E4\"\n        })]\n      })\n    }) : /*#__PURE__*/_jsx(List, {\n      itemLayout: \"horizontal\",\n      dataSource: cart,\n      renderItem: item => /*#__PURE__*/_jsx(List.Item, {\n        children: /*#__PURE__*/_jsxs(Card, {\n          title: /*#__PURE__*/_jsx(\"h1\", {\n            children: item.title\n          }),\n          style: {\n            width: '100%'\n          },\n          extra: /*#__PURE__*/_jsx(\"h2\", {\n            children: /*#__PURE__*/_jsx(RestOutlined, {\n              onClick: () => {\n                dispatch({\n                  type: REMOVE_ITEM_REQUEST,\n                  id: item.id\n                });\n              }\n            })\n          }),\n          children: [/*#__PURE__*/_jsx(Card.Meta, {\n            description: /*#__PURE__*/_jsx(List.Item.Meta, {\n              avatar: /*#__PURE__*/_jsx(Avatar, {\n                size: 100,\n                shape: \"square\",\n                src: `${process.env.BACKEND_IP}/uploads/${item.Images[0].url}`\n              }),\n              description: /*#__PURE__*/_jsxs(Row, {\n                gutter: [8, 16],\n                children: [/*#__PURE__*/_jsx(Col, {\n                  span: 24,\n                  children: item.description\n                }), /*#__PURE__*/_jsxs(Col, {\n                  span: 16,\n                  children: [\"\\uAC00\\uACA9:\", ' ', /*#__PURE__*/_jsx(NumberFormat, {\n                    value: item.Discount ? item.price * (100 - item.Discount.rate) * 0.01 : item.price,\n                    displayType: 'text',\n                    thousandSeparator: true\n                  })]\n                }), /*#__PURE__*/_jsx(Col, {\n                  span: 8,\n                  children: /*#__PURE__*/_jsx(CartAmountToggle, {\n                    id: item.id,\n                    quantity: item.quantity\n                  })\n                })]\n              })\n            })\n          }), /*#__PURE__*/_jsx(Divider, {}), /*#__PURE__*/_jsx(Row, {\n            gutter: [8, 16],\n            children: /*#__PURE__*/_jsxs(Col, {\n              style: {\n                textAlign: 'right'\n              },\n              span: 24,\n              children: [\"\\uCD1D\\uC561:\", ' ', /*#__PURE__*/_jsx(NumberFormat, {\n                value: item.Discount ? item.price * (100 - item.Discount.rate) * 0.01 * item.quantity : item.price * item.quantity,\n                displayType: 'text',\n                thousandSeparator: true\n              })]\n            })\n          })]\n        })\n      })\n    }), cart.length > 0 && /*#__PURE__*/_jsx(Button, {\n      onClick: paymentStart,\n      type: 'primary',\n      style: {\n        width: '100%'\n      },\n      children: \"\\uACB0\\uC81C\\uD558\\uAE30\"\n    })]\n  });\n};\n\nexport default Cart;","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/dev/project1/frontend/pages/cart/index.js"],"names":["List","Avatar","Card","Button","Row","Col","Divider","Empty","useDispatch","useSelector","RestOutlined","CartAmountToggle","NumberFormat","REMOVE_ITEM_REQUEST","CLEAR_CART_REQUEST","useState","useEffect","useWindowSize","axios","useRouter","onClickPayment","ModalInterface","PAGE_CHANGE_SUCCESS","Cart","dispatch","IMP","setIMP","toggleModal","setToggleModal","cart","ShopId","TableId","state","isLoggedIn","session","user","windowWidth","windowHeight","router","type","data","onChangeToggleModal","prev","product","paymentStart","length","height","marginTop","textAlign","item","title","width","id","process","env","BACKEND_IP","Images","url","description","Discount","price","rate","quantity"],"mappings":"AAAA,SAASA,IAAT,EAAeC,MAAf,EAAuBC,IAAvB,EAA6BC,MAA7B,EAAqCC,GAArC,EAA0CC,GAA1C,EAA+CC,OAA/C,EAAwDC,KAAxD,QAAqE,MAArE;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,OAAOC,gBAAP,MAA6B,4CAA7B;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,SAASC,mBAAT,EAA8BC,kBAA9B,QAAwD,qBAAxD;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,cAAT,QAA+B,oCAA/B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,SAASC,mBAAT,QAAoC,sBAApC;;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,QAAQ,GAAGhB,WAAW,EAA5B;AACA,QAAM;AAAA,OAACiB,GAAD;AAAA,OAAMC;AAAN,MAAgBX,QAAQ,CAAC,IAAD,CAA9B;AACA,QAAM;AAAA,OAACY,WAAD;AAAA,OAAcC;AAAd,MAAgCb,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM;AAAEc,IAAAA,IAAF;AAAQC,IAAAA,MAAR;AAAgBC,IAAAA;AAAhB,MAA4BtB,WAAW,CAAEuB,KAAD,IAAWA,KAAK,CAACH,IAAlB,CAA7C;AACA,QAAM;AAAEI,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA0BzB,WAAW,CAAEuB,KAAD,IAAWA,KAAK,CAACG,IAAlB,CAA3C;AACA,QAAM,CAACC,WAAD,EAAcC,YAAd,IAA8BpB,aAAa,EAAjD;AACA,QAAMqB,MAAM,GAAGnB,SAAS,EAAxB;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,QAAQ,CAAC;AAAEe,MAAAA,IAAI,EAAEjB,mBAAR;AAA6BkB,MAAAA,IAAI,EAAE;AAAnC,KAAD,CAAR;AACD,GAFQ,CAAT;;AAIA,QAAMC,mBAAmB,GAAG,MAAMb,cAAc,CAAEc,IAAD,IAAU,CAACA,IAAZ,CAAhD;;AAEA,QAAMC,OAAO,GAAGd,IAAI,CAAC,CAAD,CAApB;;AAEA,QAAMe,YAAY,GAAG,YAAY;AAC/BxB,IAAAA,cAAc,CACZ,MADY,EAEZuB,OAFY,EAGZV,UAHY,EAIZC,OAJY,EAKZO,mBALY,EAMZjB,QANY,EAOZK,IAPY,EAQZS,MARY,EASZR,MATY,EAUZC,OAVY,CAAd;AAYD,GAbD;;AAeA,sBACE;AAAA,4BACE,KAAC,cAAD;AACE,MAAA,OAAO,EAAE,eADX;AAEE,MAAA,WAAW,EAAEJ,WAFf;AAGE,MAAA,mBAAmB,EAAEc,mBAHvB;AAIE,MAAA,KAAK,EAAE;AAJT,MADF,EAOGZ,IAAI,CAACgB,MAAL,KAAgB,CAAhB,gBACC,KAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAb;AAAA,6BACE;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAEV,YAAY,GAAG,GAA5B;AAAiCW,UAAAA,SAAS,EAAE;AAA5C,SAAZ;AAAA,gCACE,KAAC,KAAD,KADF,eAEE;AAAA;AAAA,UAFF;AAAA;AADF,MADD,gBAQC,KAAC,IAAD;AACE,MAAA,UAAU,EAAC,YADb;AAEE,MAAA,UAAU,EAAEnB,IAFd;AAGE,MAAA,UAAU,EAAGoB,IAAD,iBACV,KAAC,IAAD,CAAM,IAAN;AAAA,+BACE,MAAC,IAAD;AACE,UAAA,KAAK,eAAE;AAAA,sBAAKA,IAAI,CAACC;AAAV,YADT;AAEE,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAFT;AAGE,UAAA,KAAK,eACH;AAAA,mCACE,KAAC,YAAD;AACE,cAAA,OAAO,EAAE,MAAM;AACb3B,gBAAAA,QAAQ,CAAC;AAAEe,kBAAAA,IAAI,EAAE1B,mBAAR;AAA6BuC,kBAAAA,EAAE,EAAEH,IAAI,CAACG;AAAtC,iBAAD,CAAR;AACD;AAHH;AADF,YAJJ;AAAA,kCAaE,KAAC,IAAD,CAAM,IAAN;AACE,YAAA,WAAW,eACT,KAAC,IAAD,CAAM,IAAN,CAAW,IAAX;AACE,cAAA,MAAM,eACJ,KAAC,MAAD;AACE,gBAAA,IAAI,EAAE,GADR;AAEE,gBAAA,KAAK,EAAC,QAFR;AAGE,gBAAA,GAAG,EAAG,GAAEC,OAAO,CAACC,GAAR,CAAYC,UAAW,YAAWN,IAAI,CAACO,MAAL,CAAY,CAAZ,EAAeC,GAAI;AAH/D,gBAFJ;AAQE,cAAA,WAAW,eACT,MAAC,GAAD;AAAK,gBAAA,MAAM,EAAE,CAAC,CAAD,EAAI,EAAJ,CAAb;AAAA,wCACE,KAAC,GAAD;AAAK,kBAAA,IAAI,EAAE,EAAX;AAAA,4BAAgBR,IAAI,CAACS;AAArB,kBADF,eAEE,MAAC,GAAD;AAAK,kBAAA,IAAI,EAAE,EAAX;AAAA,8CACM,GADN,eAEE,KAAC,YAAD;AACE,oBAAA,KAAK,EACHT,IAAI,CAACU,QAAL,GACIV,IAAI,CAACW,KAAL,IACC,MAAMX,IAAI,CAACU,QAAL,CAAcE,IADrB,IAEA,IAHJ,GAIIZ,IAAI,CAACW,KANb;AAQE,oBAAA,WAAW,EAAE,MARf;AASE,oBAAA,iBAAiB,EAAE;AATrB,oBAFF;AAAA,kBAFF,eAgBE,KAAC,GAAD;AAAK,kBAAA,IAAI,EAAE,CAAX;AAAA,yCACE,KAAC,gBAAD;AACE,oBAAA,EAAE,EAAEX,IAAI,CAACG,EADX;AAEE,oBAAA,QAAQ,EAAEH,IAAI,CAACa;AAFjB;AADF,kBAhBF;AAAA;AATJ;AAFJ,YAbF,eAmDE,KAAC,OAAD,KAnDF,eAoDE,KAAC,GAAD;AAAK,YAAA,MAAM,EAAE,CAAC,CAAD,EAAI,EAAJ,CAAb;AAAA,mCACE,MAAC,GAAD;AAAK,cAAA,KAAK,EAAE;AAAEd,gBAAAA,SAAS,EAAE;AAAb,eAAZ;AAAoC,cAAA,IAAI,EAAE,EAA1C;AAAA,0CACM,GADN,eAEE,KAAC,YAAD;AACE,gBAAA,KAAK,EACHC,IAAI,CAACU,QAAL,GACIV,IAAI,CAACW,KAAL,IACC,MAAMX,IAAI,CAACU,QAAL,CAAcE,IADrB,IAEA,IAFA,GAGAZ,IAAI,CAACa,QAJT,GAKIb,IAAI,CAACW,KAAL,GAAaX,IAAI,CAACa,QAP1B;AASE,gBAAA,WAAW,EAAE,MATf;AAUE,gBAAA,iBAAiB,EAAE;AAVrB,gBAFF;AAAA;AADF,YApDF;AAAA;AADF;AAJJ,MAfJ,EA8FGjC,IAAI,CAACgB,MAAL,GAAc,CAAd,iBACC,KAAC,MAAD;AACE,MAAA,OAAO,EAAED,YADX;AAEE,MAAA,IAAI,EAAE,SAFR;AAGE,MAAA,KAAK,EAAE;AAAEO,QAAAA,KAAK,EAAE;AAAT,OAHT;AAAA;AAAA,MA/FJ;AAAA,IADF;AA0GD,CA1ID;;AA4IA,eAAe5B,IAAf","sourcesContent":["import { List, Avatar, Card, Button, Row, Col, Divider, Empty } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RestOutlined } from '@ant-design/icons';\nimport CartAmountToggle from '../../components/Generalui/CartAmoutToggle';\nimport NumberFormat from 'react-number-format';\nimport { REMOVE_ITEM_REQUEST, CLEAR_CART_REQUEST } from '../../reducers/cart';\nimport { useState, useEffect } from 'react';\nimport { useWindowSize } from '@react-hook/window-size';\nimport axios from 'axios';\nimport { useRouter } from 'next/router';\nimport { onClickPayment } from '../../components/Generalui/Payment';\nimport ModalInterface from '../../components/Generalui/Modal';\nimport { PAGE_CHANGE_SUCCESS } from '../../reducers/admin';\n\nconst Cart = () => {\n  const dispatch = useDispatch();\n  const [IMP, setIMP] = useState(null);\n  const [toggleModal, setToggleModal] = useState(false);\n  const { cart, ShopId, TableId } = useSelector((state) => state.cart);\n  const { isLoggedIn, session } = useSelector((state) => state.user);\n  const [windowWidth, windowHeight] = useWindowSize();\n  const router = useRouter();\n\n  useEffect(() => {\n    dispatch({ type: PAGE_CHANGE_SUCCESS, data: 'cart' });\n  });\n\n  const onChangeToggleModal = () => setToggleModal((prev) => !prev);\n\n  const product = cart[0];\n\n  const paymentStart = async () => {\n    onClickPayment(\n      'cart',\n      product,\n      isLoggedIn,\n      session,\n      onChangeToggleModal,\n      dispatch,\n      cart,\n      router,\n      ShopId,\n      TableId\n    );\n  };\n\n  return (\n    <>\n      <ModalInterface\n        content={'로그인을 하셔야 합니다.'}\n        toggleModal={toggleModal}\n        onChangeToggleModal={onChangeToggleModal}\n        title={'경고'}\n      />\n      {cart.length === 0 ? (\n        <Card style={{ height: '100vh' }}>\n          <div style={{ marginTop: windowHeight * 0.3, textAlign: 'center' }}>\n            <Empty />\n            <h1>장바구니가 비었습니다</h1>\n          </div>\n        </Card>\n      ) : (\n        <List\n          itemLayout=\"horizontal\"\n          dataSource={cart}\n          renderItem={(item) => (\n            <List.Item>\n              <Card\n                title={<h1>{item.title}</h1>}\n                style={{ width: '100%' }}\n                extra={\n                  <h2>\n                    <RestOutlined\n                      onClick={() => {\n                        dispatch({ type: REMOVE_ITEM_REQUEST, id: item.id });\n                      }}\n                    />\n                  </h2>\n                }\n              >\n                <Card.Meta\n                  description={\n                    <List.Item.Meta\n                      avatar={\n                        <Avatar\n                          size={100}\n                          shape=\"square\"\n                          src={`${process.env.BACKEND_IP}/uploads/${item.Images[0].url}`}\n                        />\n                      }\n                      description={\n                        <Row gutter={[8, 16]}>\n                          <Col span={24}>{item.description}</Col>\n                          <Col span={16}>\n                            가격:{' '}\n                            <NumberFormat\n                              value={\n                                item.Discount\n                                  ? item.price *\n                                    (100 - item.Discount.rate) *\n                                    0.01\n                                  : item.price\n                              }\n                              displayType={'text'}\n                              thousandSeparator={true}\n                            />\n                          </Col>\n                          <Col span={8}>\n                            <CartAmountToggle\n                              id={item.id}\n                              quantity={item.quantity}\n                            />\n                          </Col>\n                        </Row>\n                      }\n                    />\n                  }\n                />\n                <Divider />\n                <Row gutter={[8, 16]}>\n                  <Col style={{ textAlign: 'right' }} span={24}>\n                    총액:{' '}\n                    <NumberFormat\n                      value={\n                        item.Discount\n                          ? item.price *\n                            (100 - item.Discount.rate) *\n                            0.01 *\n                            item.quantity\n                          : item.price * item.quantity\n                      }\n                      displayType={'text'}\n                      thousandSeparator={true}\n                    />\n                  </Col>\n                </Row>\n              </Card>\n            </List.Item>\n          )}\n        />\n      )}\n      {cart.length > 0 && (\n        <Button\n          onClick={paymentStart}\n          type={'primary'}\n          style={{ width: '100%' }}\n        >\n          결제하기\n        </Button>\n      )}\n    </>\n  );\n};\n\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}