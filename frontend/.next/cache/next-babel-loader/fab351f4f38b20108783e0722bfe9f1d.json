{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hoyuen\\\\Documents\\\\project\\\\project1\\\\frontend\\\\pages\\\\user\\\\login.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Input, Card, Button, Space, Form, PageHeader } from \"antd\";\nimport { useInput } from \"../../components/Generalui/CustomHooks\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useCallback } from \"react\";\nimport Link from \"next/link\";\nimport Router from \"next/router\";\nimport { MailOutlined, LockOutlined } from \"@ant-design/icons\";\nimport wrapper from \"../../store/configureStore\";\nimport axios from \"axios\";\nimport { END } from \"redux-saga\";\nimport { LOAD_USER_REQUEST, LOG_IN_REQUEST } from \"../../reducers/user\";\n\nconst Login = props => {\n  console.log(props);\n  const [username, onChangeUsername] = useInput();\n  const [password, onChangePassword] = useInput();\n  const dispatch = useDispatch();\n  const onFinish = useCallback(() => {\n    dispatch({\n      type: LOG_IN_REQUEST,\n      data: {\n        username,\n        password\n      }\n    }); // if (isLoggedIn) {\n    //   Router.push(\"/\");\n    // }\n  }, [username, password]);\n  return __jsx(React.Fragment, null, __jsx(Card, {\n    style: {\n      height: \"100vh\",\n      verticalAlign: \"middle\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, __jsx(Form, {\n    onFinish: onFinish,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, __jsx(Space, {\n    direction: \"vertical\",\n    size: \"large\",\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"Login\"), __jsx(Form.Item, {\n    name: \"email\",\n    rules: [{\n      required: true,\n      message: \"이메일을 입력해주세요\"\n    }, {\n      type: \"email\",\n      message: \"형식에 맞지 않는 아이디입니다\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, __jsx(Input, {\n    prefix: __jsx(MailOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    }),\n    size: \"large\",\n    name: \"email\",\n    value: username,\n    onChange: onChangeUsername,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  })), __jsx(Form.Item, {\n    name: \"password\",\n    rules: [{\n      required: true,\n      message: \"비밀번호를 입력해주세요\"\n    }, {\n      pattern: /^[0-9a-zA-Z]{6,12}$/,\n      message: \"형식에 맞지 않는 비밀번호입니다\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, __jsx(Input.Password, {\n    name: \"password\",\n    value: password,\n    prefix: __jsx(LockOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }\n    }),\n    size: \"large\",\n    onChange: onChangePassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  })), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"Login\"), __jsx(Link, {\n    href: \"/user/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, __jsx(Button, {\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\")))))));\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : \"\";\n  axios.defaults.headers.Cookie = cookie;\n  const result = await context.store.dispatch({\n    type: LOAD_USER_REQUEST\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n  const state = await context.store.getState();\n  console.log(state.user);\n  const {\n    session,\n    isLoggedIn\n  } = state.user;\n\n  if (session) {\n    context.res.setHeader(\"location\", \"/\");\n    context.res.statusCode = 302;\n    context.res.end();\n  }\n\n  return {\n    props: {\n      isLoggedIn\n    }\n  };\n});\nexport default Login;","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/pages/user/login.js"],"names":["Input","Card","Button","Space","Form","PageHeader","useInput","useDispatch","useSelector","useCallback","Link","Router","MailOutlined","LockOutlined","wrapper","axios","END","LOAD_USER_REQUEST","LOG_IN_REQUEST","Login","props","console","log","username","onChangeUsername","password","onChangePassword","dispatch","onFinish","type","data","height","verticalAlign","width","required","message","pattern","getServerSideProps","context","cookie","req","headers","defaults","Cookie","result","store","sagaTask","toPromise","state","getState","user","session","isLoggedIn","res","setHeader","statusCode","end"],"mappings":"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","sourcesContent":["import { Input, Card, Button, Space, Form, PageHeader } from \"antd\";\r\nimport { useInput } from \"../../components/Generalui/CustomHooks\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useCallback } from \"react\";\r\nimport Link from \"next/link\";\r\nimport Router from \"next/router\";\r\nimport { MailOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport wrapper from \"../../store/configureStore\";\r\nimport axios from \"axios\";\r\nimport { END } from \"redux-saga\";\r\nimport { LOAD_USER_REQUEST, LOG_IN_REQUEST } from \"../../reducers/user\";\r\n\r\nconst Login = (props) => {\r\n  console.log(props);\r\n  const [username, onChangeUsername] = useInput();\r\n  const [password, onChangePassword] = useInput();\r\n  const dispatch = useDispatch();\r\n\r\n  const onFinish = useCallback(() => {\r\n    dispatch({\r\n      type: LOG_IN_REQUEST,\r\n      data: {\r\n        username,\r\n        password,\r\n      },\r\n    });\r\n    // if (isLoggedIn) {\r\n    //   Router.push(\"/\");\r\n    // }\r\n  }, [username, password]);\r\n\r\n  return (\r\n    <>\r\n      <Card style={{ height: \"100vh\", verticalAlign: \"middle\" }}>\r\n        <Form onFinish={onFinish}>\r\n          <Space direction=\"vertical\" size={\"large\"} style={{ width: \"100%\" }}>\r\n            <h1>Login</h1>\r\n            <Form.Item\r\n              name={\"email\"}\r\n              rules={[\r\n                { required: true, message: \"이메일을 입력해주세요\" },\r\n                { type: \"email\", message: \"형식에 맞지 않는 아이디입니다\" },\r\n              ]}\r\n            >\r\n              <Input\r\n                prefix={<MailOutlined />}\r\n                size={\"large\"}\r\n                name={\"email\"}\r\n                value={username}\r\n                onChange={onChangeUsername}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name={\"password\"}\r\n              rules={[\r\n                { required: true, message: \"비밀번호를 입력해주세요\" },\r\n                { pattern: /^[0-9a-zA-Z]{6,12}$/, message: \"형식에 맞지 않는 비밀번호입니다\" },\r\n              ]}\r\n            >\r\n              <Input.Password\r\n                name={\"password\"}\r\n                value={password}\r\n                prefix={<LockOutlined />}\r\n                size={\"large\"}\r\n                onChange={onChangePassword}\r\n              />\r\n            </Form.Item>\r\n            <Button type={\"primary\"} htmlType={\"submit\"} style={{ width: \"100%\" }}>\r\n              Login\r\n            </Button>\r\n            <Link href={\"/user/signup\"}>\r\n              <a>\r\n                <Button style={{ width: \"100%\" }}>회원가입</Button>\r\n              </a>\r\n            </Link>\r\n          </Space>\r\n        </Form>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  const cookie = context.req ? context.req.headers.cookie : \"\";\r\n  axios.defaults.headers.Cookie = cookie;\r\n  const result = await context.store.dispatch({ type: LOAD_USER_REQUEST });\r\n  context.store.dispatch(END);\r\n  await context.store.sagaTask.toPromise();\r\n  const state = await context.store.getState();\r\n  console.log(state.user);\r\n  const { session, isLoggedIn } = state.user;\r\n  if (session) {\r\n    context.res.setHeader(\"location\", \"/\");\r\n    context.res.statusCode = 302;\r\n    context.res.end();\r\n  }\r\n  return { props: { isLoggedIn } };\r\n});\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}