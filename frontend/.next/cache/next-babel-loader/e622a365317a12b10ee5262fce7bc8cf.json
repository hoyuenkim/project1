{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(loadProducts),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(productsSaga);\n\nimport { all, put, fork, call, takeLatest } from \"redux/effects\";\nimport { LOAD_PRODUCTS_SUCCESS } from \"../reducers/products\";\n\nfunction loadProductApi(loadData) {\n  return axios.post(\"/products/load\", loadData);\n}\n\nfunction loadProducts(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadProducts$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(loadProductsApi, action.data);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            type: LOAD_PRODUCTS_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context.next = 11;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nexport default function productsSaga() {\n  return _regeneratorRuntime.wrap(function productsSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          all([fork()]);\n\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/sagas/products.js"],"names":["loadProducts","productsSaga","all","put","fork","call","takeLatest","LOAD_PRODUCTS_SUCCESS","loadProductApi","loadData","axios","post","action","loadProductsApi","data","result","type","console","log"],"mappings":";;oDAOUA,Y;qDAYeC,Y;;AAnBzB,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,UAA/B,QAAiD,eAAjD;AACA,SAASC,qBAAT,QAAsC,sBAAtC;;AAEA,SAASC,cAAT,CAAwBC,QAAxB,EAAkC;AAChC,SAAOC,KAAK,CAACC,IAAN,CAAW,gBAAX,EAA6BF,QAA7B,CAAP;AACD;;AAED,SAAUT,YAAV,CAAuBY,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEmB,iBAAMP,IAAI,CAACQ,eAAD,EAAkBD,MAAM,CAACE,IAAzB,CAAV;;AAFnB;AAEUC,UAAAA,MAFV;AAAA;AAGI,iBAAMZ,GAAG,CAAC;AACRa,YAAAA,IAAI,EAAET,qBADE;AAERO,YAAAA,IAAI,EAAEC,MAAM,CAACD;AAFL,WAAD,CAAT;;AAHJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQIG,UAAAA,OAAO,CAACC,GAAR;;AARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAYA,eAAe,SAAUjB,YAAV;AAAA;AAAA;AAAA;AAAA;AACbC,UAAAA,GAAG,CAAC,CAACE,IAAI,EAAL,CAAD,CAAH;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, put, fork, call, takeLatest } from \"redux/effects\";\r\nimport { LOAD_PRODUCTS_SUCCESS } from \"../reducers/products\";\r\n\r\nfunction loadProductApi(loadData) {\r\n  return axios.post(\"/products/load\", loadData);\r\n}\r\n\r\nfunction* loadProducts(action) {\r\n  try {\r\n    const result = yield call(loadProductsApi, action.data);\r\n    yield put({\r\n      type: LOAD_PRODUCTS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nexport default function* productsSaga() {\r\n  all([fork()]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}