{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\hoyuen\\\\Documents\\\\project\\\\project1\\\\frontend\\\\components\\\\ProductCard.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Card, Avatar, Button, Col, Row, Descriptions } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ADD_QUANTITY_SUCCESS, ADD_QUANTITY_REQUEST, SUBSTRACT_QUANTITY_SUCCESS } from \"../reducers/products\";\nimport NumberFormat from \"react-number-format\";\n\nvar ProductCard = function ProductCard(_ref) {\n  var id = _ref.id,\n      title = _ref.title,\n      cover = _ref.cover,\n      price = _ref.price,\n      quantity = _ref.quantity;\n  var dispatch = useDispatch();\n\n  var onClickAdd = function onClickAdd() {\n    try {\n      dispatch({\n        type: ADD_QUANTITY_SUCCESS,\n        data: {\n          id: id\n        }\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  var onClickSubstract = function onClickSubstract() {\n    dispatch({\n      type: SUBSTRACT_QUANTITY_SUCCESS,\n      data: {\n        id: id\n      }\n    });\n  };\n\n  return __jsx(Card, {\n    key: id,\n    title: title,\n    actions: [__jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, \"\\uC989\\uC2DC \\uAD6C\\uB9E4\"), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 35\n      }\n    }, \"\\uC7A5\\uBC14\\uAD6C\\uB2C8\")],\n    cover: __jsx(\"img\", {\n      src: cover,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 14\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, __jsx(Card.Meta, {\n    description: __jsx(Descriptions, {\n      bordered: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }, __jsx(Descriptions.Item, {\n      label: \"가격\",\n      span: 24,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, __jsx(NumberFormat, {\n      value: price,\n      displayType: \"text\",\n      thousandSeparator: true,\n      prefix: \"원\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }\n    })), __jsx(Descriptions.Item, {\n      label: \"수량\",\n      span: 24,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, __jsx(Button, {\n      shape: \"circle\",\n      size: \"small\",\n      onClick: onClickAdd,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }\n    }, \"+\"), quantity, __jsx(Button, {\n      shape: \"circle\",\n      size: \"small\",\n      onClick: onClickSubstract,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }, \"-\")), __jsx(Descriptions.Item, {\n      label: \"총액\",\n      span: 24,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, __jsx(NumberFormat, {\n      value: price * quantity,\n      displayType: \"text\",\n      thousandSeparator: true,\n      prefix: \"원\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }))),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ProductCard;","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/components/ProductCard.js"],"names":["Card","Avatar","Button","Col","Row","Descriptions","useDispatch","useSelector","ADD_QUANTITY_SUCCESS","ADD_QUANTITY_REQUEST","SUBSTRACT_QUANTITY_SUCCESS","NumberFormat","ProductCard","id","title","cover","price","quantity","dispatch","onClickAdd","type","data","e","console","log","onClickSubstract"],"mappings":"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","sourcesContent":["import { Card, Avatar, Button, Col, Row, Descriptions } from \"antd\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  ADD_QUANTITY_SUCCESS,\r\n  ADD_QUANTITY_REQUEST,\r\n  SUBSTRACT_QUANTITY_SUCCESS,\r\n} from \"../reducers/products\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\nconst ProductCard = ({ id, title, cover, price, quantity }) => {\r\n  const dispatch = useDispatch();\r\n  const onClickAdd = () => {\r\n    try {\r\n      dispatch({ type: ADD_QUANTITY_SUCCESS, data: { id } });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n  const onClickSubstract = () => {\r\n    dispatch({ type: SUBSTRACT_QUANTITY_SUCCESS, data: { id } });\r\n  };\r\n  return (\r\n    <Card\r\n      key={id}\r\n      title={title}\r\n      actions={[<div>즉시 구매</div>, <div>장바구니</div>]}\r\n      cover={<img src={cover} />}\r\n    >\r\n      <Card.Meta\r\n        description={\r\n          <Descriptions bordered>\r\n            <Descriptions.Item label={\"가격\"} span={24}>\r\n              <NumberFormat\r\n                value={price}\r\n                displayType={\"text\"}\r\n                thousandSeparator={true}\r\n                prefix={\"원\"}\r\n              />\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label={\"수량\"} span={24}>\r\n              <Button shape=\"circle\" size=\"small\" onClick={onClickAdd}>\r\n                +\r\n              </Button>\r\n              {quantity}\r\n              <Button shape=\"circle\" size=\"small\" onClick={onClickSubstract}>\r\n                -\r\n              </Button>\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label={\"총액\"} span={24}>\r\n              <NumberFormat\r\n                value={price * quantity}\r\n                displayType={\"text\"}\r\n                thousandSeparator={true}\r\n                prefix={\"원\"}\r\n              />\r\n            </Descriptions.Item>\r\n          </Descriptions>\r\n        }\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ProductCard;\r\n"]},"metadata":{},"sourceType":"module"}