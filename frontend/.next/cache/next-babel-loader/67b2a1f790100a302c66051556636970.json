{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { all, fork } from 'redux-saga/effects';\nimport axios from 'axios';\nimport user from './user';\nimport shop from './shop';\nimport menu from './menu';\nimport payment from './payment';\nconsole.log(process.env.BACKEND_IP);\naxios.defaults.baseURL = \"\".concat(process.env.BACKEND_IP);\n\nfunction rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return all([fork(user), fork(shop), fork(menu), fork(payment)]);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nexport default rootSaga;","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/dev/project1/frontend/sagas/index.js"],"names":["rootSaga","all","fork","axios","user","shop","menu","payment","console","log","process","env","BACKEND_IP","defaults","baseURL"],"mappings":";;oDAWUA,Q;;AAXV,SAASC,GAAT,EAAcC,IAAd,QAA0B,oBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEAC,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACC,GAAR,CAAYC,UAAxB;AAEAT,KAAK,CAACU,QAAN,CAAeC,OAAf,aAA4BJ,OAAO,CAACC,GAAR,CAAYC,UAAxC;;AAEA,SAAUZ,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMC,GAAG,CAAC,CAACC,IAAI,CAACE,IAAD,CAAL,EAAaF,IAAI,CAACG,IAAD,CAAjB,EAAyBH,IAAI,CAACI,IAAD,CAA7B,EAAqCJ,IAAI,CAACK,OAAD,CAAzC,CAAD,CAAT;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAeP,QAAf","sourcesContent":["import { all, fork } from 'redux-saga/effects';\nimport axios from 'axios';\nimport user from './user';\nimport shop from './shop';\nimport menu from './menu';\nimport payment from './payment';\n\nconsole.log(process.env.BACKEND_IP);\n\naxios.defaults.baseURL = `${process.env.BACKEND_IP}`;\n\nfunction* rootSaga() {\n  yield all([fork(user), fork(shop), fork(menu), fork(payment)]);\n}\n\nexport default rootSaga;\n"]},"metadata":{},"sourceType":"module"}