{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport { Empty, Card, Space, List, Button, Avatar, Modal, Popconfirm } from 'antd';\nimport { ADMIN_PRODUCTS_REQUEST, DELETE_CATEGORY_REQUEST } from '../../../reducers/shop';\nimport CategoryForm from '../../../components/Forms/CategoryForm';\nimport { PAGE_CHANGE_SUCCESS } from '../../../reducers/admin';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst Index = () => {\n  const dispatch = useDispatch();\n  const {\n    session,\n    division\n  } = useSelector(state => state.user);\n  const router = useRouter();\n\n  if (!session || session.division === false) {\n    return router.back();\n  } else {\n    useEffect(() => {\n      dispatch({\n        type: ADMIN_PRODUCTS_REQUEST,\n        ShopId: session.Shops[0].id\n      });\n    }, []);\n  }\n\n  const {\n    products,\n    categories\n  } = useSelector(state => state.shop);\n\n  if (division === false || session === undefined) {\n    router.back();\n  }\n\n  const {\n    0: category,\n    1: setCategory\n  } = useState(false);\n  const {\n    0: item,\n    1: setItem\n  } = useState();\n\n  const onToggleCategory = item => {\n    setItem(item);\n    setCategory(prev => !prev);\n  };\n\n  const onClickDelete = item => {\n    dispatch({\n      type: DELETE_CATEGORY_REQUEST,\n      data: {\n        id: item.id\n      }\n    });\n  };\n\n  useEffect(() => {\n    dispatch({\n      type: PAGE_CHANGE_SUCCESS,\n      data: 'admin'\n    });\n  }, []);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [category && /*#__PURE__*/_jsx(Modal, {\n      title: '카테고리',\n      visible: category,\n      onCancel: () => {\n        setCategory(false);\n      },\n      footer: null,\n      children: /*#__PURE__*/_jsx(CategoryForm, {\n        item: item,\n        ShopId: session.Shops[0].id,\n        setCategory: setCategory,\n        setItem: setItem\n      })\n    }), /*#__PURE__*/_jsxs(Space, {\n      direction: 'vertical',\n      style: {\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsx(Card, {\n        title: '카테고리 관리',\n        extra: categories && categories.length < 5 ? /*#__PURE__*/_jsx(Button, {\n          onClick: () => onToggleCategory(),\n          children: \"\\uCE74\\uD14C\\uACE0\\uB9AC \\uCD94\\uAC00\"\n        }) : /*#__PURE__*/_jsx(\"div\", {\n          children: \"\\uCE74\\uD14C\\uACE0\\uB9AC\\uB294 \\uCD5C\\uB300 5\\uAC1C\\uAE4C\\uC9C0 \\uC124\\uC815\\uD558\\uC2E4 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"\n        }),\n        children: categories.length > 0 ? /*#__PURE__*/_jsx(List, {\n          dataSource: categories,\n          renderItem: (item, i) => /*#__PURE__*/_jsx(_Fragment, {\n            children: /*#__PURE__*/_jsx(List.Item, {\n              actions: [/*#__PURE__*/_jsx(\"div\", {\n                onClick: () => onToggleCategory(item),\n                children: \"\\uC218\\uC815\"\n              }), /*#__PURE__*/_jsx(Popconfirm, {\n                title: /*#__PURE__*/_jsxs(_Fragment, {\n                  children: [item.name, \"\\uC744 \\uC815\\uB9D0\\uB85C \\uC0AD\\uC81C\\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\", /*#__PURE__*/_jsx(\"br\", {}), \"\\uCE74\\uD14C\\uACE0\\uB9AC\\uC5D0 \\uD574\\uB2F9\\uD558\\uB294 \\uBAA8\\uB4E0 \\uC0C1\\uD488\\uC774 \\uC0AD\\uC81C\\uB429\\uB2C8\\uB2E4.\"]\n                }),\n                onConfirm: () => dispatch({\n                  type: DELETE_CATEGORY_REQUEST,\n                  data: {\n                    id: item.id\n                  }\n                }),\n                onCancel: () => console.log('cancel'),\n                okText: \"Yes\",\n                cancelText: \"No\",\n                children: /*#__PURE__*/_jsx(\"div\", {\n                  children: \"\\uC0AD\\uC81C\"\n                })\n              })],\n              children: /*#__PURE__*/_jsx(List.Item.Meta, {\n                avatar: /*#__PURE__*/_jsx(Avatar, {\n                  children: i + 1\n                }),\n                title: item.name\n              })\n            }, i)\n          })\n        }) : /*#__PURE__*/_jsx(Empty, {\n          children: \"\\uCE74\\uD14C\\uACE0\\uB9AC\\uB97C \\uCD94\\uAC00\\uD574\\uC8FC\\uC138\\uC694.\"\n        })\n      }), products.length > 0 && /*#__PURE__*/_jsx(Card, {\n        title: '상품정보',\n        extra: /*#__PURE__*/_jsx(Button, {\n          onClick: () => router.push('/shop/admin/product'),\n          children: \"\\uC0C1\\uD488\\uAD00\\uB9AC\"\n        }),\n        children: /*#__PURE__*/_jsx(Card.Meta, {\n          title: /*#__PURE__*/_jsx(Avatar.Group, {\n            maxCount: 10,\n            children: products.map((product, i) => /*#__PURE__*/_jsx(Avatar, {\n              src: `${process.env.BACKEND_IP}/uploads/${product.Images[0].url}`\n            }, i))\n          }),\n          description: products.length > 1 ? `${products[0].title} 외 ${products.length - 1}개의 상품이 존재하고 있습니다.` : `${products[0].title} 상품이 존재하고 있습니다.`\n        })\n      }), categories.length > 0 && products.length < 1 && /*#__PURE__*/_jsx(Card, {\n        title: '상품정보',\n        children: /*#__PURE__*/_jsx(Empty, {\n          onClick: () => router.push('/shop/admin/product/add'),\n          children: \"\\uC0C1\\uD488\\uC744 \\uCD94\\uAC00\\uD574\\uC8FC\\uC138\\uC694\"\n        })\n      })]\n    })]\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/dev/project1/frontend/pages/shop/admin/index.js"],"names":["useEffect","useState","useSelector","useDispatch","useRouter","Empty","Card","Space","List","Button","Avatar","Modal","Popconfirm","ADMIN_PRODUCTS_REQUEST","DELETE_CATEGORY_REQUEST","CategoryForm","PAGE_CHANGE_SUCCESS","Index","dispatch","session","division","state","user","router","back","type","ShopId","Shops","id","products","categories","shop","undefined","category","setCategory","item","setItem","onToggleCategory","prev","onClickDelete","data","width","length","i","name","console","log","push","map","product","process","env","BACKEND_IP","Images","url","title"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useRouter } from 'next/router';\r\n\r\nimport {\r\n  Empty,\r\n  Card,\r\n  Space,\r\n  List,\r\n  Button,\r\n  Avatar,\r\n  Modal,\r\n  Popconfirm,\r\n} from 'antd';\r\nimport {\r\n  ADMIN_PRODUCTS_REQUEST,\r\n  DELETE_CATEGORY_REQUEST,\r\n} from '../../../reducers/shop';\r\n\r\nimport CategoryForm from '../../../components/Forms/CategoryForm';\r\n\r\nimport { PAGE_CHANGE_SUCCESS } from '../../../reducers/admin';\r\n\r\nconst Index = () => {\r\n  const dispatch = useDispatch();\r\n  const { session, division } = useSelector((state) => state.user);\r\n  const router = useRouter();\r\n\r\n  if (!session || session.division === false) {\r\n    return router.back();\r\n  } else {\r\n    useEffect(() => {\r\n      dispatch({ type: ADMIN_PRODUCTS_REQUEST, ShopId: session.Shops[0].id });\r\n    }, []);\r\n  }\r\n\r\n  const { products, categories } = useSelector((state) => state.shop);\r\n\r\n  if (division === false || session === undefined) {\r\n    router.back();\r\n  }\r\n\r\n  const [category, setCategory] = useState(false);\r\n  const [item, setItem] = useState();\r\n\r\n  const onToggleCategory = (item) => {\r\n    setItem(item);\r\n    setCategory((prev) => !prev);\r\n  };\r\n\r\n  const onClickDelete = (item) => {\r\n    dispatch({ type: DELETE_CATEGORY_REQUEST, data: { id: item.id } });\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: PAGE_CHANGE_SUCCESS, data: 'admin' });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {category && (\r\n        <Modal\r\n          title={'카테고리'}\r\n          visible={category}\r\n          onCancel={() => {\r\n            setCategory(false);\r\n          }}\r\n          footer={null}\r\n        >\r\n          <CategoryForm\r\n            item={item}\r\n            ShopId={session.Shops[0].id}\r\n            setCategory={setCategory}\r\n            setItem={setItem}\r\n          />\r\n        </Modal>\r\n      )}\r\n      <Space direction={'vertical'} style={{ width: '100%' }}>\r\n        <Card\r\n          title={'카테고리 관리'}\r\n          extra={\r\n            categories && categories.length < 5 ? (\r\n              <Button onClick={() => onToggleCategory()}>카테고리 추가</Button>\r\n            ) : (\r\n              <div>카테고리는 최대 5개까지 설정하실 수 있습니다.</div>\r\n            )\r\n          }\r\n        >\r\n          {categories.length > 0 ? (\r\n            <List\r\n              dataSource={categories}\r\n              renderItem={(item, i) => (\r\n                <>\r\n                  <List.Item\r\n                    key={i}\r\n                    actions={[\r\n                      <div onClick={() => onToggleCategory(item)}>수정</div>,\r\n                      <Popconfirm\r\n                        title={\r\n                          <>\r\n                            {item.name}을 정말로 삭제하시겠습니까?\r\n                            <br />\r\n                            카테고리에 해당하는 모든 상품이 삭제됩니다.\r\n                          </>\r\n                        }\r\n                        onConfirm={() =>\r\n                          dispatch({\r\n                            type: DELETE_CATEGORY_REQUEST,\r\n                            data: { id: item.id },\r\n                          })\r\n                        }\r\n                        onCancel={() => console.log('cancel')}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                      >\r\n                        <div>삭제</div>\r\n                      </Popconfirm>,\r\n                    ]}\r\n                  >\r\n                    <List.Item.Meta\r\n                      avatar={<Avatar>{i + 1}</Avatar>}\r\n                      title={item.name}\r\n                    />\r\n                  </List.Item>\r\n                </>\r\n              )}\r\n            />\r\n          ) : (\r\n            <Empty>카테고리를 추가해주세요.</Empty>\r\n          )}\r\n        </Card>\r\n        {products.length > 0 && (\r\n          <Card\r\n            title={'상품정보'}\r\n            extra={\r\n              <Button onClick={() => router.push('/shop/admin/product')}>\r\n                상품관리\r\n              </Button>\r\n            }\r\n          >\r\n            <Card.Meta\r\n              title={\r\n                <Avatar.Group maxCount={10}>\r\n                  {products.map((product, i) => (\r\n                    <Avatar\r\n                      key={i}\r\n                      src={`${process.env.BACKEND_IP}/uploads/${product.Images[0].url}`}\r\n                    />\r\n                  ))}\r\n                </Avatar.Group>\r\n              }\r\n              description={\r\n                products.length > 1\r\n                  ? `${products[0].title} 외 ${\r\n                      products.length - 1\r\n                    }개의 상품이 존재하고 있습니다.`\r\n                  : `${products[0].title} 상품이 존재하고 있습니다.`\r\n              }\r\n            />\r\n          </Card>\r\n        )}\r\n        {categories.length > 0 && products.length < 1 && (\r\n          <Card title={'상품정보'}>\r\n            <Empty onClick={() => router.push('/shop/admin/product/add')}>\r\n              상품을 추가해주세요\r\n            </Empty>\r\n          </Card>\r\n        )}\r\n      </Space>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}