{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hoyuen\\\\Documents\\\\project\\\\project1\\\\frontend\\\\pages\\\\user\\\\login.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Input, Card, Button, Space, Form, PageHeader } from \"antd\";\nimport { useInput } from \"../../components/Generalui/CustomHooks\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useCallback } from \"react\";\nimport { LOG_IN_REQUEST } from \"../../reducers/user\";\nimport Link from \"next/link\";\nimport Router from \"next/router\";\nimport { MailOutlined, LockOutlined } from \"@ant-design/icons\";\nimport { useEffect } from \"react\";\n\nconst Login = ({\n  isLoggedIn\n}) => {\n  const [username, onChangeUsername] = useInput();\n  const [password, onChangePassword] = useInput();\n  const dispatch = useDispatch();\n  const onFinish = useCallback(() => {\n    dispatch({\n      type: LOG_IN_REQUEST,\n      data: {\n        username,\n        password\n      }\n    });\n    console.log(isLoggedIn);\n\n    if (isLoggedIn) {\n      Router.push(\"/\");\n    }\n  }, [username, password]);\n  return __jsx(React.Fragment, null, __jsx(Card, {\n    style: {\n      height: \"100vh\",\n      verticalAlign: \"middle\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, __jsx(Form, {\n    onFinish: onFinish,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, __jsx(Space, {\n    direction: \"vertical\",\n    size: \"large\",\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"Login\"), __jsx(Form.Item, {\n    name: \"email\",\n    rules: [{\n      required: true,\n      message: \"이메일을 입력해주세요\"\n    }, {\n      type: \"email\",\n      message: \"형식에 맞지 않는 아이디입니다\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, __jsx(Input, {\n    prefix: __jsx(MailOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }\n    }),\n    size: \"large\",\n    name: \"email\",\n    value: username,\n    onChange: onChangeUsername,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  })), __jsx(Form.Item, {\n    name: \"password\",\n    rules: [{\n      required: true,\n      message: \"비밀번호를 입력해주세요\"\n    }, {\n      pattern: /^[0-9a-zA-Z]{6,12}$/,\n      message: \"형식에 맞지 않는 비밀번호입니다\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, __jsx(Input.Password, {\n    name: \"password\",\n    value: password,\n    prefix: __jsx(LockOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }\n    }),\n    size: \"large\",\n    onChange: onChangePassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  })), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \"Login\"), __jsx(Link, {\n    href: \"/user/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, __jsx(Button, {\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\")))))));\n};\n\nLogin.getInitialProps = ctx => {\n  const state = ctx.store.getState();\n  const cookie = ctx.req.headers.cookie;\n\n  if (cookie) {\n    // return Router.push(\"/\");\n    return {\n      isLoggedIn: true\n    };\n  }\n};\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/pages/user/login.js"],"names":["Input","Card","Button","Space","Form","PageHeader","useInput","useDispatch","useSelector","useCallback","LOG_IN_REQUEST","Link","Router","MailOutlined","LockOutlined","useEffect","Login","isLoggedIn","username","onChangeUsername","password","onChangePassword","dispatch","onFinish","type","data","console","log","push","height","verticalAlign","width","required","message","pattern","getInitialProps","ctx","state","store","getState","cookie","req","headers"],"mappings":"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","sourcesContent":["import { Input, Card, Button, Space, Form, PageHeader } from \"antd\";\r\nimport { useInput } from \"../../components/Generalui/CustomHooks\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useCallback } from \"react\";\r\nimport { LOG_IN_REQUEST } from \"../../reducers/user\";\r\nimport Link from \"next/link\";\r\nimport Router from \"next/router\";\r\nimport { MailOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst Login = ({ isLoggedIn }) => {\r\n  const [username, onChangeUsername] = useInput();\r\n  const [password, onChangePassword] = useInput();\r\n  const dispatch = useDispatch();\r\n\r\n  const onFinish = useCallback(() => {\r\n    dispatch({\r\n      type: LOG_IN_REQUEST,\r\n      data: {\r\n        username,\r\n        password,\r\n      },\r\n    });\r\n    console.log(isLoggedIn);\r\n    if (isLoggedIn) {\r\n      Router.push(\"/\");\r\n    }\r\n  }, [username, password]);\r\n\r\n  return (\r\n    <>\r\n      <Card style={{ height: \"100vh\", verticalAlign: \"middle\" }}>\r\n        <Form onFinish={onFinish}>\r\n          <Space direction=\"vertical\" size={\"large\"} style={{ width: \"100%\" }}>\r\n            <h1>Login</h1>\r\n            <Form.Item\r\n              name={\"email\"}\r\n              rules={[\r\n                { required: true, message: \"이메일을 입력해주세요\" },\r\n                { type: \"email\", message: \"형식에 맞지 않는 아이디입니다\" },\r\n              ]}\r\n            >\r\n              <Input\r\n                prefix={<MailOutlined />}\r\n                size={\"large\"}\r\n                name={\"email\"}\r\n                value={username}\r\n                onChange={onChangeUsername}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name={\"password\"}\r\n              rules={[\r\n                { required: true, message: \"비밀번호를 입력해주세요\" },\r\n                { pattern: /^[0-9a-zA-Z]{6,12}$/, message: \"형식에 맞지 않는 비밀번호입니다\" },\r\n              ]}\r\n            >\r\n              <Input.Password\r\n                name={\"password\"}\r\n                value={password}\r\n                prefix={<LockOutlined />}\r\n                size={\"large\"}\r\n                onChange={onChangePassword}\r\n              />\r\n            </Form.Item>\r\n            <Button type={\"primary\"} htmlType={\"submit\"} style={{ width: \"100%\" }}>\r\n              Login\r\n            </Button>\r\n            <Link href={\"/user/signup\"}>\r\n              <a>\r\n                <Button style={{ width: \"100%\" }}>회원가입</Button>\r\n              </a>\r\n            </Link>\r\n          </Space>\r\n        </Form>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nLogin.getInitialProps = (ctx) => {\r\n  const state = ctx.store.getState();\r\n  const cookie = ctx.req.headers.cookie;\r\n  if (cookie) {\r\n    // return Router.push(\"/\");\r\n    return { isLoggedIn: true };\r\n  }\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}