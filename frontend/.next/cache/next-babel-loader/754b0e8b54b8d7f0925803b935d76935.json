{"ast":null,"code":"import { useInput } from \"../Generalui/CustomHooks\";\nimport { useState } from \"react\";\nimport { Form, Input, Button, Upload, Select, Card } from \"antd\";\nimport ImgCrop from \"antd-img-crop\";\nimport { useDispatch } from \"react-redux\";\nimport { GiftOutlined, DollarOutlined, ProfileOutlined } from \"@ant-design/icons\";\nimport { EDIT_PRODUCT_REQUEST } from \"../../reducers/shop\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst EditProduct = ({\n  product,\n  setEdit,\n  setProduct,\n  categories\n}) => {\n  const dispatch = useDispatch();\n  const imageList = [];\n  {\n    product && product.Images.map(async (v, i) => {\n      return imageList.push({\n        uid: i,\n        name: v.url,\n        status: \"done\",\n        url: `http://127.0.0.1:3065/uploads/${v.url}`,\n        ImageIds: v.id\n      });\n    });\n  }\n  const [title, onChangeTitle] = useInput(product && product.title);\n  const [price, onChangePrice] = useInput(product && product.price);\n  const [description, onChangeDecription] = useInput(product && product.description);\n  const {\n    0: fileList,\n    1: setFileList\n  } = useState(imageList);\n  const {\n    0: fileError,\n    1: setFileError\n  } = useState(false);\n  const {\n    0: category,\n    1: setCategory\n  } = useState(product && product.Category.id);\n\n  const onImagesChange = ({\n    fileList: newFileList\n  }) => {\n    setFileList(newFileList);\n    setFileError(false);\n  };\n\n  const onChangeCategory = e => {\n    setCategory(e);\n  };\n\n  const onPreview = async file => {\n    let src = file.url;\n\n    if (!src) {\n      src = await new Promise(resolve => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file.originFileObj);\n\n        reader.onload = () => resolve(reader.result);\n      });\n    }\n\n    const image = new Image();\n    image.src = src;\n    const imgWindow = window.open(src);\n    imgWindow.document.write(image.outerHTML);\n  };\n\n  const onFinish = () => {\n    const formData = new FormData();\n    formData.append(\"id\", product.id);\n    formData.append(\"title\", title);\n    formData.append(\"price\", price);\n    formData.append(\"description\", description);\n    formData.append(\"CategoryId\", category);\n    fileList.forEach(({\n      originFileObj,\n      ImageIds\n    }) => {\n      if (ImageIds) formData.append(\"ImageIds\", ImageIds);\n      if (originFileObj) formData.append(\"files\", originFileObj);\n    });\n\n    if (fileList.length > 0) {\n      dispatch({\n        type: EDIT_PRODUCT_REQUEST,\n        formData\n      });\n      setEdit(false);\n      setProduct(null);\n    } else {\n      return setFileError(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(Form, {\n    encType: \"multipart/form-data\",\n    onFinish: onFinish,\n    layout: \"vertical\",\n    initialValues: {\n      title: product && product.title,\n      price: product && product.price,\n      description: product && product.description\n    },\n    children: [/*#__PURE__*/_jsx(Form.Item, {\n      name: \"title\",\n      rules: [{\n        required: true,\n        message: \"상품명을 입력해주세요\"\n      }],\n      children: /*#__PURE__*/_jsx(Input, {\n        name: \"title\",\n        prefix: /*#__PURE__*/_jsx(GiftOutlined, {}),\n        size: \"large\",\n        onChange: onChangeTitle\n      })\n    }), /*#__PURE__*/_jsx(Form.Item, {\n      name: \"price\",\n      rules: [{\n        required: true,\n        message: \"가격을 입력해주세요\"\n      }, {\n        pattern: /^[0-9]/g,\n        message: \"숫자를 입력해주세요\"\n      }],\n      children: /*#__PURE__*/_jsx(Input, {\n        name: \"price\",\n        prefix: /*#__PURE__*/_jsx(DollarOutlined, {}),\n        size: \"large\",\n        value: price,\n        onChange: onChangePrice\n      })\n    }), /*#__PURE__*/_jsx(Form.Item, {\n      name: \"description\",\n      label: \"\\uC124\\uBA85\",\n      rules: [{\n        required: true,\n        message: \"상세내역을 입력해주세요\"\n      }],\n      children: /*#__PURE__*/_jsx(Input.TextArea, {\n        name: \"description\",\n        prefix: /*#__PURE__*/_jsx(ProfileOutlined, {}),\n        size: \"large\",\n        placeholder: \"상세사항을 입력해주세요\",\n        maxLength: 200,\n        onChange: onChangeDecription\n      })\n    }), /*#__PURE__*/_jsx(Form.Item, {\n      name: \"category\",\n      label: \"\\uCE74\\uD14C\\uACE0\\uB9AC\",\n      children: /*#__PURE__*/_jsx(Select, {\n        onChange: onChangeCategory,\n        defaultValue: product.Category.id,\n        children: categories.map((category, index) => /*#__PURE__*/_jsx(Select.Option, {\n          value: category.id,\n          children: category.name\n        }, index))\n      })\n    }), /*#__PURE__*/_jsxs(Card, {\n      title: `image`,\n      children: [/*#__PURE__*/_jsx(ImgCrop, {\n        rotate: true,\n        aspect: 4 / 3,\n        name: \"image\",\n        children: /*#__PURE__*/_jsx(Upload, {\n          action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\n          listType: \"picture-card\",\n          fileList: fileList,\n          onChange: onImagesChange,\n          onPreview: onPreview,\n          children: fileList.length < 5 && \"+ Upload\"\n        })\n      }), fileError && /*#__PURE__*/_jsx(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        children: \"\\uD30C\\uC77C\\uC744 \\uC5C5\\uB85C\\uB4DC \\uD574\\uC8FC\\uC138\\uC694\"\n      })]\n    }), /*#__PURE__*/_jsx(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      style: {\n        width: `100%`\n      },\n      children: \"\\uC81C\\uCD9C\"\n    })]\n  });\n};\n\nexport default EditProduct;","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/dev/project1/frontend/components/Forms/EditProduct.js"],"names":["useInput","useState","Form","Input","Button","Upload","Select","Card","ImgCrop","useDispatch","GiftOutlined","DollarOutlined","ProfileOutlined","EDIT_PRODUCT_REQUEST","EditProduct","product","setEdit","setProduct","categories","dispatch","imageList","Images","map","v","i","push","uid","name","url","status","ImageIds","id","title","onChangeTitle","price","onChangePrice","description","onChangeDecription","fileList","setFileList","fileError","setFileError","category","setCategory","Category","onImagesChange","newFileList","onChangeCategory","e","onPreview","file","src","Promise","resolve","reader","FileReader","readAsDataURL","originFileObj","onload","result","image","Image","imgWindow","window","open","document","write","outerHTML","onFinish","formData","FormData","append","forEach","length","type","required","message","pattern","index","color","width"],"mappings":"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","sourcesContent":["import { useInput } from \"../Generalui/CustomHooks\";\nimport { useState } from \"react\";\nimport { Form, Input, Button, Upload, Select, Card } from \"antd\";\nimport ImgCrop from \"antd-img-crop\";\nimport { useDispatch } from \"react-redux\";\nimport { GiftOutlined, DollarOutlined, ProfileOutlined } from \"@ant-design/icons\";\nimport { EDIT_PRODUCT_REQUEST } from \"../../reducers/shop\";\n\nconst EditProduct = ({ product, setEdit, setProduct, categories }) => {\n  const dispatch = useDispatch();\n\n  const imageList = [];\n\n  {\n    product &&\n      product.Images.map(async (v, i) => {\n        return imageList.push({\n          uid: i,\n          name: v.url,\n          status: \"done\",\n          url: `http://127.0.0.1:3065/uploads/${v.url}`,\n          ImageIds: v.id,\n        });\n      });\n  }\n\n  const [title, onChangeTitle] = useInput(product && product.title);\n  const [price, onChangePrice] = useInput(product && product.price);\n  const [description, onChangeDecription] = useInput(product && product.description);\n  const [fileList, setFileList] = useState(imageList);\n  const [fileError, setFileError] = useState(false);\n  const [category, setCategory] = useState(product && product.Category.id);\n\n  const onImagesChange = ({ fileList: newFileList }) => {\n    setFileList(newFileList);\n    setFileError(false);\n  };\n\n  const onChangeCategory = (e) => {\n    setCategory(e);\n  };\n\n  const onPreview = async (file) => {\n    let src = file.url;\n    if (!src) {\n      src = await new Promise((resolve) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file.originFileObj);\n        reader.onload = () => resolve(reader.result);\n      });\n    }\n    const image = new Image();\n    image.src = src;\n    const imgWindow = window.open(src);\n    imgWindow.document.write(image.outerHTML);\n  };\n\n  const onFinish = () => {\n    const formData = new FormData();\n    formData.append(\"id\", product.id);\n    formData.append(\"title\", title);\n    formData.append(\"price\", price);\n    formData.append(\"description\", description);\n    formData.append(\"CategoryId\", category);\n    fileList.forEach(({ originFileObj, ImageIds }) => {\n      if (ImageIds) formData.append(\"ImageIds\", ImageIds);\n      if (originFileObj) formData.append(\"files\", originFileObj);\n    });\n    if (fileList.length > 0) {\n      dispatch({\n        type: EDIT_PRODUCT_REQUEST,\n        formData,\n      });\n      setEdit(false);\n      setProduct(null);\n    } else {\n      return setFileError(true);\n    }\n  };\n\n  return (\n    <Form\n      encType={\"multipart/form-data\"}\n      onFinish={onFinish}\n      layout={\"vertical\"}\n      initialValues={{\n        title: product && product.title,\n        price: product && product.price,\n        description: product && product.description,\n      }}\n    >\n      <Form.Item name=\"title\" rules={[{ required: true, message: \"상품명을 입력해주세요\" }]}>\n        <Input name=\"title\" prefix={<GiftOutlined />} size={\"large\"} onChange={onChangeTitle} />\n      </Form.Item>\n      <Form.Item\n        name=\"price\"\n        rules={[\n          { required: true, message: \"가격을 입력해주세요\" },\n          { pattern: /^[0-9]/g, message: \"숫자를 입력해주세요\" },\n        ]}\n      >\n        <Input\n          name=\"price\"\n          prefix={<DollarOutlined />}\n          size={\"large\"}\n          value={price}\n          onChange={onChangePrice}\n        />\n      </Form.Item>\n      <Form.Item\n        name=\"description\"\n        label=\"설명\"\n        rules={[{ required: true, message: \"상세내역을 입력해주세요\" }]}\n      >\n        <Input.TextArea\n          name=\"description\"\n          prefix={<ProfileOutlined />}\n          size={\"large\"}\n          placeholder={\"상세사항을 입력해주세요\"}\n          maxLength={200}\n          onChange={onChangeDecription}\n        />\n      </Form.Item>\n      <Form.Item name=\"category\" label=\"카테고리\">\n        <Select onChange={onChangeCategory} defaultValue={product.Category.id}>\n          {categories.map((category, index) => (\n            <Select.Option key={index} value={category.id}>\n              {category.name}\n            </Select.Option>\n          ))}\n        </Select>\n      </Form.Item>\n      <Card title={`image`}>\n        <ImgCrop rotate aspect={4 / 3} name={\"image\"}>\n          <Upload\n            action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n            listType=\"picture-card\"\n            fileList={fileList}\n            onChange={onImagesChange}\n            onPreview={onPreview}\n          >\n            {fileList.length < 5 && \"+ Upload\"}\n          </Upload>\n        </ImgCrop>\n        {fileError && <div style={{ color: \"red\" }}>파일을 업로드 해주세요</div>}\n      </Card>\n      <Button type=\"primary\" htmlType=\"submit\" style={{ width: `100%` }}>\n        제출\n      </Button>\n    </Form>\n  );\n};\n\nexport default EditProduct;\n"]},"metadata":{},"sourceType":"module"}