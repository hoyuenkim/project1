{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\hoyuen\\\\Documents\\\\project\\\\project1\\\\frontend\\\\pages\\\\user\\\\signup.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Card, Button, Avatar, Form, Input, Descriptions, Checkbox } from \"antd\";\nimport { LeftOutlined } from \"@ant-design/icons\";\nimport { useState, useCallback, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useInput } from \"../../components/CustomHooks\";\nimport CentralAppLayout from \"../../components/CentralAppLayout\";\nimport NavibarLayout from \"../../components/NavibarLayout\";\nimport { SIGN_UP_REQUEST } from \"../../reducers/user\";\nimport Router, { withRouter } from \"next/router\";\n\nvar Signup = function Signup() {\n  var _window = window,\n      IMP = _window.IMP;\n  useEffect(function () {\n    var scriptKakaoJS = document.createElement(\"script\");\n    scriptKakaoJS.id = \"KakaoJSSDK\";\n    scriptKakaoJS.src = \"//developers.kakao.com/sdk/js/kakao.min.js\";\n    document.body.appendChild(scriptKakaoJS);\n  }, []); // IMP.init(\"FxuX4vBYyOEQ0Q9f0IricBzzoEveEVBks5hwBSvaH90H0aX1Soj50SEow9Db5evxkM4VFA5nK64Kg2L\"); // \"imp00000000\" 대신 발급받은 \"가맹점 식별코드\"를 사용합니다.\n  // function onClickCertification() {\n  //   /* 2. 본인인증 데이터 정의하기 */\n  //   const data = {\n  //     merchant_uid: `mid_${new Date().getTime()}`, // 주문번호\n  //     company: \"아임포트\", // 회사명 또는 URL\n  //     carrier: \"SKT\", // 통신사\n  //     name: \"홍길동\", // 이름\n  //     phone: \"01012341234\", // 전화번호\n  //   };\n  //   /* 4. 본인인증 창 호출하기 */\n  //   IMP.certification(data, callback);\n  // }\n\n  /* 3. 콜백 함수 정의하기 */\n\n  function callback(response) {\n    var success = response.success,\n        merchant_uid = response.merchant_uid,\n        error_msg = response.error_msg;\n\n    if (success) {\n      alert(\"본인인증 성공\");\n    } else {\n      alert(\"\\uBCF8\\uC778\\uC778\\uC99D \\uC2E4\\uD328: \".concat(error_msg));\n    }\n  }\n\n  var _useInput = useInput(),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      email = _useInput2[0],\n      onChangeEmail = _useInput2[1];\n\n  var _useInput3 = useInput(),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      password = _useInput4[0],\n      onChangePassword = _useInput4[1];\n\n  var _useState = useState(),\n      passwordCheck = _useState[0],\n      setPasswordCheck = _useState[1];\n\n  var _useState2 = useState(false),\n      passwordError = _useState2[0],\n      setPasswordError = _useState2[1];\n\n  var _useState3 = useState(false),\n      termToggle = _useState3[0],\n      setTermToggle = _useState3[1];\n\n  var dispatch = useDispatch();\n\n  var onChangePasswordCheck = function onChangePasswordCheck(e) {\n    setPasswordCheck(e.target.value);\n    setPasswordError(password != e.target.value);\n  };\n\n  var onClickTermToggle = function onClickTermToggle() {\n    return setTermToggle(!termToggle);\n  };\n\n  var onSubmitForm = useCallback(function (e) {\n    if (passwordError) {\n      return setPasswordError(true);\n    } else {\n      dispatch({\n        type: SIGN_UP_REQUEST,\n        data: {\n          username: email,\n          password: password\n        }\n      });\n    }\n  }, [email, password, passwordCheck]);\n  return __jsx(CentralAppLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, __jsx(NavibarLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, __jsx(Form, {\n    onFinish: onSubmitForm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, __jsx(Card, {\n    title: __jsx(\"div\", {\n      onClick: function onClick() {\n        return Router.back();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, __jsx(LeftOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 19\n      }\n    }))),\n    style: {\n      height: \"100%\"\n    },\n    actions: [],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, __jsx(Checkbox, {\n    onChange: onClickTermToggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, \"\\uC804\\uCCB4\\uB3D9\\uC758\")), !termToggle && __jsx(Descriptions, {\n    bordered: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }, __jsx(Descriptions.Item, {\n    label: \"\\uD544\\uC218\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, \"\\uAC1C\\uC778(\\uC2E0\\uC6A9)\\uC815\\uBCF4\\uC218\\uC9D1/\\uC774\\uC6A9\"), __jsx(Descriptions.Item, {\n    label: \"\\uD544\\uC218\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, \"\\uACE0\\uC720\\uC2DD\\uBCC4\\uC815\\uBCF4\\uC758 \\uCC98\\uB9AC\"), __jsx(Descriptions.Item, {\n    label: \"\\uD544\\uC218\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, \"\\uD1B5\\uC2E0\\uC0AC \\uC774\\uC6A9\\uC57D\\uAD00\"), __jsx(Descriptions.Item, {\n    label: \"\\uD544\\uC218\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, \"\\uC11C\\uBE44\\uC2A4 \\uC774\\uC6A9\\uC57D\\uAD00\")), __jsx(Form.Item, {\n    name: \"email\",\n    label: \"Email\",\n    rules: [{\n      type: \"email\",\n      message: \"올바른 이메일 형식을 입력해주세요!\"\n    }, {\n      required: true,\n      message: \"이메일를 입력해 주세요!\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, __jsx(Input, {\n    value: email,\n    onChange: onChangeEmail,\n    placeholder: \"Email\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  })), __jsx(Form.Item, {\n    label: \"Password\",\n    name: \"password\",\n    rules: [{\n      required: true,\n      message: \"비밀번호를 확인해주세요\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, __jsx(Input.Password, {\n    value: password,\n    onChange: onChangePassword,\n    placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  })), __jsx(Form.Item, {\n    label: \"Password check\",\n    name: \"passwordCheck\",\n    rules: [{\n      required: true,\n      message: \"비밀번호를 확인해 주세요\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, __jsx(Input.Password, {\n    value: passwordCheck,\n    onChange: onChangePasswordCheck,\n    placeholder: \"\\uB2E4\\uC2DC \\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  })), passwordError && __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 31\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4\"), __jsx(Button, {\n    htmlType: \"submit\",\n    type: \"primary\",\n    style: {\n      width: \"100%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\")))));\n};\n\nexport default withRouter(Signup);","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/pages/user/signup.js"],"names":["Card","Button","Avatar","Form","Input","Descriptions","Checkbox","LeftOutlined","useState","useCallback","useEffect","useDispatch","useInput","CentralAppLayout","NavibarLayout","SIGN_UP_REQUEST","Router","withRouter","Signup","window","IMP","scriptKakaoJS","document","createElement","id","src","body","appendChild","callback","response","success","merchant_uid","error_msg","alert","email","onChangeEmail","password","onChangePassword","passwordCheck","setPasswordCheck","passwordError","setPasswordError","termToggle","setTermToggle","dispatch","onChangePasswordCheck","e","target","value","onClickTermToggle","onSubmitForm","type","data","username","back","height","message","required","width"],"mappings":";;;;;;;AAAA,SAASA,IAAT,EAAeC,MAAf,EAAuBC,MAAvB,EAA+BC,IAA/B,EAAqCC,KAArC,EAA4CC,YAA5C,EAA0DC,QAA1D,QAA0E,MAA1E;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,SAAhC,QAAiD,OAAjD;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,QAAyB,8BAAzB;AACA,OAAOC,gBAAP,MAA6B,mCAA7B;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,OAAOC,MAAP,IAAiBC,UAAjB,QAAmC,aAAnC;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA,gBACHC,MADG;AAAA,MACXC,GADW,WACXA,GADW;AAGnBV,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMW,aAAa,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAtB;AACAF,IAAAA,aAAa,CAACG,EAAd,GAAmB,YAAnB;AACAH,IAAAA,aAAa,CAACI,GAAd,GAAoB,4CAApB;AACAH,IAAAA,QAAQ,CAACI,IAAT,CAAcC,WAAd,CAA0BN,aAA1B;AACD,GALQ,EAKN,EALM,CAAT,CAHmB,CAUnB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;;AACA,WAASO,QAAT,CAAkBC,QAAlB,EAA4B;AAAA,QAClBC,OADkB,GACmBD,QADnB,CAClBC,OADkB;AAAA,QACTC,YADS,GACmBF,QADnB,CACTE,YADS;AAAA,QACKC,SADL,GACmBH,QADnB,CACKG,SADL;;AAG1B,QAAIF,OAAJ,EAAa;AACXG,MAAAA,KAAK,CAAC,SAAD,CAAL;AACD,KAFD,MAEO;AACLA,MAAAA,KAAK,kDAAaD,SAAb,EAAL;AACD;AACF;;AAnCkB,kBAqCYpB,QAAQ,EArCpB;AAAA;AAAA,MAqCZsB,KArCY;AAAA,MAqCLC,aArCK;;AAAA,mBAsCkBvB,QAAQ,EAtC1B;AAAA;AAAA,MAsCZwB,QAtCY;AAAA,MAsCFC,gBAtCE;;AAAA,kBAuCuB7B,QAAQ,EAvC/B;AAAA,MAuCZ8B,aAvCY;AAAA,MAuCGC,gBAvCH;;AAAA,mBAwCuB/B,QAAQ,CAAC,KAAD,CAxC/B;AAAA,MAwCZgC,aAxCY;AAAA,MAwCGC,gBAxCH;;AAAA,mBAyCiBjC,QAAQ,CAAC,KAAD,CAzCzB;AAAA,MAyCZkC,UAzCY;AAAA,MAyCAC,aAzCA;;AA0CnB,MAAMC,QAAQ,GAAGjC,WAAW,EAA5B;;AAEA,MAAMkC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,CAAD,EAAO;AACnCP,IAAAA,gBAAgB,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhB;AACAP,IAAAA,gBAAgB,CAACL,QAAQ,IAAIU,CAAC,CAACC,MAAF,CAASC,KAAtB,CAAhB;AACD,GAHD;;AAKA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9B,WAAON,aAAa,CAAC,CAACD,UAAF,CAApB;AACD,GAFD;;AAIA,MAAMQ,YAAY,GAAGzC,WAAW,CAC9B,UAACqC,CAAD,EAAO;AACL,QAAIN,aAAJ,EAAmB;AACjB,aAAOC,gBAAgB,CAAC,IAAD,CAAvB;AACD,KAFD,MAEO;AACLG,MAAAA,QAAQ,CAAC;AACPO,QAAAA,IAAI,EAAEpC,eADC;AAEPqC,QAAAA,IAAI,EAAE;AACJC,UAAAA,QAAQ,EAAEnB,KADN;AAEJE,UAAAA,QAAQ,EAAEA;AAFN;AAFC,OAAD,CAAR;AAOD;AACF,GAb6B,EAc9B,CAACF,KAAD,EAAQE,QAAR,EAAkBE,aAAlB,CAd8B,CAAhC;AAgBA,SACE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEY,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AACE,IAAA,KAAK,EACH;AAAK,MAAA,OAAO,EAAE;AAAA,eAAMlC,MAAM,CAACsC,IAAP,EAAN;AAAA,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CAFJ;AAQE,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KART;AASE,IAAA,OAAO,EAAE,EATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,QAAQ,EAAEN,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,CAXF,EAcG,CAACP,UAAD,IACC,MAAC,YAAD;AAAc,IAAA,QAAQ,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD,CAAc,IAAd;AAAmB,IAAA,KAAK,EAAC,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uEADF,EAEE,MAAC,YAAD,CAAc,IAAd;AAAmB,IAAA,KAAK,EAAC,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DAFF,EAGE,MAAC,YAAD,CAAc,IAAd;AAAmB,IAAA,KAAK,EAAC,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAHF,EAIE,MAAC,YAAD,CAAc,IAAd;AAAmB,IAAA,KAAK,EAAC,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAJF,CAfJ,EAsBE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,KAAK,EAAC,OAFR;AAGE,IAAA,KAAK,EAAE,CACL;AACES,MAAAA,IAAI,EAAE,OADR;AAEEK,MAAAA,OAAO,EAAE;AAFX,KADK,EAKL;AACEC,MAAAA,QAAQ,EAAE,IADZ;AAEED,MAAAA,OAAO,EAAE;AAFX,KALK,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAcE,MAAC,KAAD;AAAO,IAAA,KAAK,EAAEtB,KAAd;AAAqB,IAAA,QAAQ,EAAEC,aAA/B;AAA8C,IAAA,WAAW,EAAC,kDAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,CAtBF,EAsCE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,KAAK,EAAC,UADR;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAE,CACL;AACEsB,MAAAA,QAAQ,EAAE,IADZ;AAEED,MAAAA,OAAO,EAAE;AAFX,KADK,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUE,MAAC,KAAD,CAAO,QAAP;AACE,IAAA,KAAK,EAAEpB,QADT;AAEE,IAAA,QAAQ,EAAEC,gBAFZ;AAGE,IAAA,WAAW,EAAC,qEAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CAtCF,EAsDE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,KAAK,EAAC,gBADR;AAEE,IAAA,IAAI,EAAC,eAFP;AAGE,IAAA,KAAK,EAAE,CACL;AACEoB,MAAAA,QAAQ,EAAE,IADZ;AAEED,MAAAA,OAAO,EAAE;AAFX,KADK,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUE,MAAC,KAAD,CAAO,QAAP;AACE,IAAA,KAAK,EAAElB,aADT;AAEE,IAAA,QAAQ,EAAEO,qBAFZ;AAGE,IAAA,WAAW,EAAC,kFAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CAtDF,EAsEGL,aAAa,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wFAtEpB,EAuEE,MAAC,MAAD;AAAQ,IAAA,QAAQ,EAAE,QAAlB;AAA4B,IAAA,IAAI,EAAE,SAAlC;AAA6C,IAAA,KAAK,EAAE;AAAEkB,MAAAA,KAAK,EAAE;AAAT,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAvEF,CADF,CAFF,CADF,CADF;AAoFD,CAzJD;;AA2JA,eAAezC,UAAU,CAACC,MAAD,CAAzB","sourcesContent":["import { Card, Button, Avatar, Form, Input, Descriptions, Checkbox } from \"antd\";\r\nimport { LeftOutlined } from \"@ant-design/icons\";\r\nimport { useState, useCallback, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useInput } from \"../../components/CustomHooks\";\r\nimport CentralAppLayout from \"../../components/CentralAppLayout\";\r\nimport NavibarLayout from \"../../components/NavibarLayout\";\r\nimport { SIGN_UP_REQUEST } from \"../../reducers/user\";\r\nimport Router, { withRouter } from \"next/router\";\r\n\r\nconst Signup = () => {\r\n  const { IMP } = window;\r\n\r\n  useEffect(() => {\r\n    const scriptKakaoJS = document.createElement(\"script\");\r\n    scriptKakaoJS.id = \"KakaoJSSDK\";\r\n    scriptKakaoJS.src = \"//developers.kakao.com/sdk/js/kakao.min.js\";\r\n    document.body.appendChild(scriptKakaoJS);\r\n  }, []);\r\n\r\n  // IMP.init(\"FxuX4vBYyOEQ0Q9f0IricBzzoEveEVBks5hwBSvaH90H0aX1Soj50SEow9Db5evxkM4VFA5nK64Kg2L\"); // \"imp00000000\" 대신 발급받은 \"가맹점 식별코드\"를 사용합니다.\r\n\r\n  // function onClickCertification() {\r\n  //   /* 2. 본인인증 데이터 정의하기 */\r\n  //   const data = {\r\n  //     merchant_uid: `mid_${new Date().getTime()}`, // 주문번호\r\n  //     company: \"아임포트\", // 회사명 또는 URL\r\n  //     carrier: \"SKT\", // 통신사\r\n  //     name: \"홍길동\", // 이름\r\n  //     phone: \"01012341234\", // 전화번호\r\n  //   };\r\n\r\n  //   /* 4. 본인인증 창 호출하기 */\r\n  //   IMP.certification(data, callback);\r\n  // }\r\n\r\n  /* 3. 콜백 함수 정의하기 */\r\n  function callback(response) {\r\n    const { success, merchant_uid, error_msg } = response;\r\n\r\n    if (success) {\r\n      alert(\"본인인증 성공\");\r\n    } else {\r\n      alert(`본인인증 실패: ${error_msg}`);\r\n    }\r\n  }\r\n\r\n  const [email, onChangeEmail] = useInput();\r\n  const [password, onChangePassword] = useInput();\r\n  const [passwordCheck, setPasswordCheck] = useState();\r\n  const [passwordError, setPasswordError] = useState(false);\r\n  const [termToggle, setTermToggle] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const onChangePasswordCheck = (e) => {\r\n    setPasswordCheck(e.target.value);\r\n    setPasswordError(password != e.target.value);\r\n  };\r\n\r\n  const onClickTermToggle = () => {\r\n    return setTermToggle(!termToggle);\r\n  };\r\n\r\n  const onSubmitForm = useCallback(\r\n    (e) => {\r\n      if (passwordError) {\r\n        return setPasswordError(true);\r\n      } else {\r\n        dispatch({\r\n          type: SIGN_UP_REQUEST,\r\n          data: {\r\n            username: email,\r\n            password: password,\r\n          },\r\n        });\r\n      }\r\n    },\r\n    [email, password, passwordCheck]\r\n  );\r\n  return (\r\n    <CentralAppLayout>\r\n      <NavibarLayout>\r\n        {/* <button onClick={onClickCertification}>인증</button> */}\r\n        <Form onFinish={onSubmitForm}>\r\n          <Card\r\n            title={\r\n              <div onClick={() => Router.back()}>\r\n                <a>\r\n                  <LeftOutlined />\r\n                </a>\r\n              </div>\r\n            }\r\n            style={{ height: \"100%\" }}\r\n            actions={[]}\r\n          >\r\n            <div>\r\n              <Checkbox onChange={onClickTermToggle}>전체동의</Checkbox>\r\n            </div>\r\n            {!termToggle && (\r\n              <Descriptions bordered>\r\n                <Descriptions.Item label=\"필수\">개인(신용)정보수집/이용</Descriptions.Item>\r\n                <Descriptions.Item label=\"필수\">고유식별정보의 처리</Descriptions.Item>\r\n                <Descriptions.Item label=\"필수\">통신사 이용약관</Descriptions.Item>\r\n                <Descriptions.Item label=\"필수\">서비스 이용약관</Descriptions.Item>\r\n              </Descriptions>\r\n            )}\r\n            <Form.Item\r\n              name=\"email\"\r\n              label=\"Email\"\r\n              rules={[\r\n                {\r\n                  type: \"email\",\r\n                  message: \"올바른 이메일 형식을 입력해주세요!\",\r\n                },\r\n                {\r\n                  required: true,\r\n                  message: \"이메일를 입력해 주세요!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input value={email} onChange={onChangeEmail} placeholder=\"Email을 입력해주세요\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Password\"\r\n              name=\"password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"비밀번호를 확인해주세요\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input.Password\r\n                value={password}\r\n                onChange={onChangePassword}\r\n                placeholder=\"비밀번호를 입력해주세요\"\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Password check\"\r\n              name=\"passwordCheck\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"비밀번호를 확인해 주세요\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input.Password\r\n                value={passwordCheck}\r\n                onChange={onChangePasswordCheck}\r\n                placeholder=\"다시 비밀번호를 입력해주세요\"\r\n              />\r\n            </Form.Item>\r\n            {passwordError && <div>비밀번호가 일치하지 않습니다</div>}\r\n            <Button htmlType={\"submit\"} type={\"primary\"} style={{ width: \"100%\" }}>\r\n              회원가입\r\n            </Button>\r\n          </Card>\r\n        </Form>\r\n      </NavibarLayout>\r\n    </CentralAppLayout>\r\n  );\r\n};\r\n\r\nexport default withRouter(Signup);\r\n"]},"metadata":{},"sourceType":"module"}