{"ast":null,"code":"import { Card, Carousel, Image } from 'antd';\nimport { useEffect, useState, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport OneSignal from 'react-onesignal';\nimport axios from 'axios';\nimport { useRouter } from 'next/router';\nimport { LOAD_EVENTS_REQUEST } from '../reducers/admin';\nimport { Map, MapMarker } from 'react-kakao-maps-sdk';\nimport { LOAD_COORDINATES_REQUEST } from '../reducers/shop';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nconst Index = () => {\n  axios.defaults.baseURL = `${process.env.BACKEND_IP}`;\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const {\n    0: coordinates,\n    1: setCoordinates\n  } = useState(null);\n  useEffect(() => {\n    dispatch({\n      type: LOAD_EVENTS_REQUEST\n    });\n  });\n  console.log(coordinates);\n  const {\n    events\n  } = useSelector(state => state.admin);\n  const {\n    isLoggedIn,\n    session\n  } = useSelector(state => state.user);\n\n  if (session && coordinates == null) {\n    axios.post('/', {\n      id: session.id\n    }).then(result => setCoordinates(result)).catch(err => console.error(err));\n  }\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: isLoggedIn && session ? /*#__PURE__*/_jsxs(Map, {\n      center: {\n        lat: session.lat,\n        lng: session.lng\n      },\n      style: {\n        width: '100%',\n        height: '360px'\n      },\n      children: [/*#__PURE__*/_jsx(MapMarker, {\n        position: {\n          lat: session.lat,\n          lng: session.lng\n        },\n        onClick: () => {\n          alert('clicked');\n        },\n        children: /*#__PURE__*/_jsx(\"div\", {\n          style: {\n            color: '#000'\n          },\n          children: session && session.name\n        })\n      }), coordinates && coordinates.map(data => {\n        /*#__PURE__*/\n        _jsx(MapMarker, {\n          position: {\n            lat: data.location.coordinates[1],\n            lng: data.location.coordinates[0]\n          },\n          children: data.username\n        });\n      })]\n    }) : /*#__PURE__*/_jsx(Card, {\n      children: /*#__PURE__*/_jsx(Card.Meta, {\n        description: /*#__PURE__*/_jsx(\"div\", {\n          style: {\n            height: '100vh',\n            width: '100%'\n          },\n          children: /*#__PURE__*/_jsx(Carousel, {\n            autoplay: true,\n            dots: false,\n            children: events.map(event => /*#__PURE__*/_jsx(Image, {\n              onClick: router.push(`/event/${event.id}`),\n              style: {\n                height: '100vh',\n                width: '100%'\n              },\n              src: `${process.env.BACKEND_IP}/uploads/${event.Images[0].url}`\n            }))\n          })\n        })\n      })\n    })\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/dev/project1/frontend/pages/index.js"],"names":["Card","Carousel","Image","useEffect","useState","useCallback","useDispatch","useSelector","OneSignal","axios","useRouter","LOAD_EVENTS_REQUEST","Map","MapMarker","LOAD_COORDINATES_REQUEST","Index","defaults","baseURL","process","env","BACKEND_IP","dispatch","router","coordinates","setCoordinates","type","console","log","events","state","admin","isLoggedIn","session","user","post","id","then","result","catch","err","error","lat","lng","width","height","alert","color","name","map","data","location","username","event","push","Images","url"],"mappings":"AAAA,SAASA,IAAT,EAAeC,QAAf,EAAyBC,KAAzB,QAAsC,MAAtC;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,WAA9B,QAAiD,OAAjD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,mBAAT,QAAoC,mBAApC;AACA,SAASC,GAAT,EAAcC,SAAd,QAA+B,sBAA/B;AACA,SAASC,wBAAT,QAAyC,kBAAzC;;;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClBN,EAAAA,KAAK,CAACO,QAAN,CAAeC,OAAf,GAA0B,GAAEC,OAAO,CAACC,GAAR,CAAYC,UAAW,EAAnD;AAEA,QAAMC,QAAQ,GAAGf,WAAW,EAA5B;AACA,QAAMgB,MAAM,GAAGZ,SAAS,EAAxB;AAEA,QAAM;AAAA,OAACa,WAAD;AAAA,OAAcC;AAAd,MAAgCpB,QAAQ,CAAC,IAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAEd;AAAR,KAAD,CAAR;AACD,GAFQ,CAAT;AAIAe,EAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;AAEA,QAAM;AAAEK,IAAAA;AAAF,MAAarB,WAAW,CAAEsB,KAAD,IAAWA,KAAK,CAACC,KAAlB,CAA9B;AACA,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA0BzB,WAAW,CAAEsB,KAAD,IAAWA,KAAK,CAACI,IAAlB,CAA3C;;AAEA,MAAID,OAAO,IAAIT,WAAW,IAAI,IAA9B,EAAoC;AAClCd,IAAAA,KAAK,CACFyB,IADH,CACQ,GADR,EACa;AAAEC,MAAAA,EAAE,EAAEH,OAAO,CAACG;AAAd,KADb,EAEGC,IAFH,CAESC,MAAD,IAAYb,cAAc,CAACa,MAAD,CAFlC,EAGGC,KAHH,CAGUC,GAAD,IAASb,OAAO,CAACc,KAAR,CAAcD,GAAd,CAHlB;AAID;;AAED,sBACE;AAAA,cACGR,UAAU,IAAIC,OAAd,gBACC,MAAC,GAAD;AACE,MAAA,MAAM,EAAE;AAAES,QAAAA,GAAG,EAAET,OAAO,CAACS,GAAf;AAAoBC,QAAAA,GAAG,EAAEV,OAAO,CAACU;AAAjC,OADV;AAEE,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,OAFT;AAAA,8BAIE,KAAC,SAAD;AACE,QAAA,QAAQ,EAAE;AAAEH,UAAAA,GAAG,EAAET,OAAO,CAACS,GAAf;AAAoBC,UAAAA,GAAG,EAAEV,OAAO,CAACU;AAAjC,SADZ;AAEE,QAAA,OAAO,EAAE,MAAM;AACbG,UAAAA,KAAK,CAAC,SAAD,CAAL;AACD,SAJH;AAAA,+BAME;AAAK,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAAZ;AAAA,oBAAgCd,OAAO,IAAIA,OAAO,CAACe;AAAnD;AANF,QAJF,EAYGxB,WAAW,IACVA,WAAW,CAACyB,GAAZ,CAAiBC,IAAD,IAAU;AACxB;AAAA,aAAC,SAAD;AACE,UAAA,QAAQ,EAAE;AACRR,YAAAA,GAAG,EAAEQ,IAAI,CAACC,QAAL,CAAc3B,WAAd,CAA0B,CAA1B,CADG;AAERmB,YAAAA,GAAG,EAAEO,IAAI,CAACC,QAAL,CAAc3B,WAAd,CAA0B,CAA1B;AAFG,WADZ;AAAA,oBAMG0B,IAAI,CAACE;AANR;AAQD,OATD,CAbJ;AAAA,MADD,gBA0BC,KAAC,IAAD;AAAA,6BACE,KAAC,IAAD,CAAM,IAAN;AACE,QAAA,WAAW,eACT;AAAK,UAAA,KAAK,EAAE;AAAEP,YAAAA,MAAM,EAAE,OAAV;AAAmBD,YAAAA,KAAK,EAAE;AAA1B,WAAZ;AAAA,iCACE,KAAC,QAAD;AAAU,YAAA,QAAQ,MAAlB;AAAmB,YAAA,IAAI,EAAE,KAAzB;AAAA,sBACGf,MAAM,CAACoB,GAAP,CAAYI,KAAD,iBACV,KAAC,KAAD;AACE,cAAA,OAAO,EAAE9B,MAAM,CAAC+B,IAAP,CAAa,UAASD,KAAK,CAACjB,EAAG,EAA/B,CADX;AAEE,cAAA,KAAK,EAAE;AAAES,gBAAAA,MAAM,EAAE,OAAV;AAAmBD,gBAAAA,KAAK,EAAE;AAA1B,eAFT;AAGE,cAAA,GAAG,EAAG,GAAEzB,OAAO,CAACC,GAAR,CAAYC,UAAW,YAAWgC,KAAK,CAACE,MAAN,CAAa,CAAb,EAAgBC,GAAI;AAHhE,cADD;AADH;AADF;AAFJ;AADF;AA3BJ,IADF;AAgDD,CAxED;;AA0EA,eAAexC,KAAf","sourcesContent":["import { Card, Carousel, Image } from 'antd';\nimport { useEffect, useState, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport OneSignal from 'react-onesignal';\nimport axios from 'axios';\nimport { useRouter } from 'next/router';\nimport { LOAD_EVENTS_REQUEST } from '../reducers/admin';\nimport { Map, MapMarker } from 'react-kakao-maps-sdk';\nimport { LOAD_COORDINATES_REQUEST } from '../reducers/shop';\n\nconst Index = () => {\n  axios.defaults.baseURL = `${process.env.BACKEND_IP}`;\n\n  const dispatch = useDispatch();\n  const router = useRouter();\n\n  const [coordinates, setCoordinates] = useState(null);\n\n  useEffect(() => {\n    dispatch({ type: LOAD_EVENTS_REQUEST });\n  });\n\n  console.log(coordinates);\n\n  const { events } = useSelector((state) => state.admin);\n  const { isLoggedIn, session } = useSelector((state) => state.user);\n\n  if (session && coordinates == null) {\n    axios\n      .post('/', { id: session.id })\n      .then((result) => setCoordinates(result))\n      .catch((err) => console.error(err));\n  }\n\n  return (\n    <>\n      {isLoggedIn && session ? (\n        <Map\n          center={{ lat: session.lat, lng: session.lng }}\n          style={{ width: '100%', height: '360px' }}\n        >\n          <MapMarker\n            position={{ lat: session.lat, lng: session.lng }}\n            onClick={() => {\n              alert('clicked');\n            }}\n          >\n            <div style={{ color: '#000' }}>{session && session.name}</div>\n          </MapMarker>\n          {coordinates &&\n            coordinates.map((data) => {\n              <MapMarker\n                position={{\n                  lat: data.location.coordinates[1],\n                  lng: data.location.coordinates[0],\n                }}\n              >\n                {data.username}\n              </MapMarker>;\n            })}\n        </Map>\n      ) : (\n        <Card>\n          <Card.Meta\n            description={\n              <div style={{ height: '100vh', width: '100%' }}>\n                <Carousel autoplay dots={false}>\n                  {events.map((event) => (\n                    <Image\n                      onClick={router.push(`/event/${event.id}`)}\n                      style={{ height: '100vh', width: '100%' }}\n                      src={`${process.env.BACKEND_IP}/uploads/${event.Images[0].url}`}\n                    />\n                  ))}\n                </Carousel>\n              </div>\n            }\n          />\n        </Card>\n      )}\n    </>\n  );\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}