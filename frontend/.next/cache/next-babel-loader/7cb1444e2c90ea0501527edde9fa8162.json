{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\hoyuen\\\\Documents\\\\project\\\\project1\\\\frontend\\\\pages\\\\shop\\\\admin\\\\product\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { List, Button, Modal, Avatar, Card } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { ADMIN_PRODUCTS_REQUEST, DELETE_PRODUCT_REQUEST } from '../../../../reducers/shop';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\nimport { useChecked } from '../../../../components/Generalui/CustomHooks';\nimport EditProduct from '../../../../components/Generalui/EditProduct';\n\nvar Console = function Console() {\n  _s();\n\n  var dispatch = useDispatch();\n  var router = useRouter();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      session = _useSelector.session;\n\n  if (!session || session.division === false) {\n    return router.back();\n  } else {\n    useEffect(function () {\n      dispatch({\n        type: ADMIN_PRODUCTS_REQUEST,\n        ShopId: session.Shops[0].id\n      });\n    }, []);\n  }\n\n  var _useChecked = useChecked(false),\n      _useChecked2 = _slicedToArray(_useChecked, 3),\n      edit = _useChecked2[0],\n      onToggleEdit = _useChecked2[1],\n      setEdit = _useChecked2[2];\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.shop;\n  }),\n      products = _useSelector2.products;\n\n  return __jsx(React.Fragment, null, products && products.map(function (item) {\n    return __jsx(React.Fragment, null, __jsx(Modal, {\n      title: '수정하기',\n      visible: edit,\n      onCancel: onToggleEdit,\n      footer: null,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, __jsx(EditProduct, {\n      item: item,\n      setEdit: setEdit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }\n    })), __jsx(Card, {\n      style: {\n        width: '100%'\n      },\n      actions: [__jsx(\"div\", {\n        onClick: onToggleEdit,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }\n      }, \"\\uC218\\uC815\"), __jsx(\"div\", {\n        onClick: function onClick() {\n          var flag = confirm(\"\\uC774 \\uC81C\\uD488\\uC744 \\uC815\\uB9D0\\uB85C \\uC0AD\\uC81C\\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\");\n\n          if (!flag) {\n            return false;\n          } else {\n            dispatch({\n              type: DELETE_PRODUCT_REQUEST,\n              id: item.id\n            });\n          }\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }\n      }, \"\\uC0AD\\uC81C\")],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, __jsx(Card.Meta, {\n      title: item.title,\n      description: __jsx(React.Fragment, null, __jsx(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }\n      }, item.price, \",\", item.description)),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }\n    })));\n  }));\n};\n\n_s(Console, \"nAAWd30ocy3xLDAm0JDxK9Dtjn0=\", false, function () {\n  return [useDispatch, useRouter, useSelector, useChecked, useSelector];\n});\n\n_c = Console;\nConsole.protoType = {\n  productList: PropTypes.object.isRequired\n};\nexport default Console;\n\nvar _c;\n\n$RefreshReg$(_c, \"Console\");","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/pages/shop/admin/product/index.js"],"names":["List","Button","Modal","Avatar","Card","useDispatch","useSelector","useEffect","useState","useRouter","ADMIN_PRODUCTS_REQUEST","DELETE_PRODUCT_REQUEST","PropTypes","Link","useChecked","EditProduct","Console","dispatch","router","state","user","session","division","back","type","ShopId","Shops","id","edit","onToggleEdit","setEdit","shop","products","map","item","width","flag","confirm","title","price","description","protoType","productList","object","isRequired"],"mappings":"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","sourcesContent":["import { List, Button, Modal, Avatar, Card } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect, useState } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport { ADMIN_PRODUCTS_REQUEST, DELETE_PRODUCT_REQUEST } from '../../../../reducers/shop';\r\nimport PropTypes from 'prop-types';\r\nimport Link from 'next/link';\r\nimport { useChecked } from '../../../../components/Generalui/CustomHooks';\r\nimport EditProduct from '../../../../components/Generalui/EditProduct';\r\n\r\nconst Console = () => {\r\n  const dispatch = useDispatch();\r\n  const router = useRouter();\r\n  const { session } = useSelector((state) => state.user);\r\n  if (!session || session.division === false) {\r\n    return router.back();\r\n  } else {\r\n    useEffect(() => {\r\n      dispatch({ type: ADMIN_PRODUCTS_REQUEST, ShopId: session.Shops[0].id });\r\n    }, []);\r\n  }\r\n\r\n  const [edit, onToggleEdit, setEdit] = useChecked(false);\r\n\r\n  const { products } = useSelector((state) => state.shop);\r\n\r\n  return (\r\n    <>\r\n      {products && products.map((item) => {\r\n        return (\r\n          <>\r\n            <Modal title={'수정하기'} visible={edit} onCancel={onToggleEdit} footer={null}>\r\n              <EditProduct item={item} setEdit={setEdit} />\r\n            </Modal>\r\n            <Card\r\n              style={{ width: '100%' }}\r\n              actions={[\r\n                <div onClick={onToggleEdit}>수정</div>,\r\n                <div\r\n                  onClick={() => {\r\n                    const flag = confirm(`이 제품을 정말로 삭제하시겠습니까?`);\r\n                    if (!flag) {\r\n                      return false;\r\n                    } else {\r\n                      dispatch({ type: DELETE_PRODUCT_REQUEST, id: item.id });\r\n                    }\r\n                  }}\r\n                >\r\n                  삭제\r\n                </div>,\r\n              ]}\r\n            >\r\n              <Card.Meta\r\n                title={item.title}\r\n                description={\r\n                  <>\r\n                    <p>\r\n                      {item.price},{item.description}\r\n                    </p>\r\n                  </>\r\n                }\r\n              />\r\n            </Card>\r\n          </>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nConsole.protoType = {\r\n  productList: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Console;\r\n"]},"metadata":{},"sourceType":"module"}