{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar initialState = {\n  products: [],\n  originProducts: [],\n  lists: [],\n  originalLists: [],\n  naviSize: null,\n  TableId: null,\n  isAddingProduct: false,\n  isLoadingCart: false,\n  categories: []\n};\nexport var LOAD_PRODUCTS_REQUEST = \"LOAD_PRODUCTS_REQUEST\";\nexport var LOAD_PRODUCTS_SUCCESS = \"LOAD_PRODUCTS_SUCCESS\";\nexport var LOAD_PRODUCTS_FAILURE = \"LOAD_PRODUCTS_FAILURE\";\nexport var ADD_QUANTITY_REQUEST = \"ADD_QUANTITY_REQUEST\";\nexport var ADD_QUANTITY_SUCCESS = \"ADD_QUANTITY_SUCCESS\";\nexport var ADD_QUANTITY_FAILURE = \"ADD_QUANTITY_FAILURE\";\nexport var SUBSTRACT_QUANTITY_REQUEST = \"SUBSTRACT_QUANTITY_REQUEST\";\nexport var SUBSTRACT_QUANTITY_SUCCESS = \"SUBSTRACT_QUANTITY_SUCCESS\";\nexport var SUBSTRACT_QUANTITY_FAILURE = \"SUBSTRACT_QUANTITY_FAILURE\";\nexport var ADD_PRODUCT_REQUEST = \"ADD_PRODUCT_REQUEST\";\nexport var ADD_PRODUCT_SUCCESS = \"ADD_PRODUCT_SUCCESS\";\nexport var ADD_PRODUCT_FAILURE = \"ADD_PRODUCT_FAILURE\";\nexport var LOAD_CART_REQUEST = \"LOAD_CART_REQUEST\";\nexport var LOAD_CART_SUCCESS = \"LOAD_CART_SUCCESS\";\nexport var LOAD_CART_FAILURE = \"LOAD_CART_FAILURE\";\nexport var INITIATE_QUANTITY_REQUEST = \"INITIATE_QUANTITY_REQUEST\";\nexport var GET_NAVIBAR_SIZE = \"GET_NAVIBAR_SIZE\";\nexport var SEARCH_PRODUCT_SUCCESS = \"SEARCH_PRODUCT_SUCCESS\";\nexport var SELECT_CATEGORY_SUCCESS = \"SELECT_CATEGORY_SUCCESS\";\nexport var LOAD_LIST_REQUEST = \"LOAD_LIST_REQUEST\";\nexport var LOAD_LIST_SUCCESS = \"LOAD_LIST_SUCCESS\";\nexport var LOAD_LIST_FAILURE = \"LOAD_LIST_FAILURE\";\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_NAVIBAR_SIZE:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          naviSize: action.data\n        });\n      }\n\n    case ADD_QUANTITY_SUCCESS:\n      {\n        var index = state.products.findIndex(function (product) {\n          return product.id === action.data.id;\n        });\n        var product = state.products[index];\n        var quantity = product.quantity;\n        quantity < 100 ? quantity += 1 : 99;\n\n        var products = _toConsumableArray(state.products);\n\n        products[index] = _objectSpread(_objectSpread({}, product), {}, {\n          quantity: quantity\n        });\n        return _objectSpread(_objectSpread({}, state), {}, {\n          products: products\n        });\n      }\n\n    case SUBSTRACT_QUANTITY_SUCCESS:\n      {\n        var _index = state.products.findIndex(function (product) {\n          return product.id === action.data.id;\n        });\n\n        var _product = state.products[_index];\n        var _quantity = _product.quantity;\n        _quantity > 1 ? _quantity -= 1 : 1;\n\n        var _products = _toConsumableArray(state.products);\n\n        _products[_index] = _objectSpread(_objectSpread({}, _product), {}, {\n          quantity: _quantity\n        });\n        return _objectSpread(_objectSpread({}, state), {}, {\n          products: _products\n        });\n      }\n\n    case PLUS_QUANTITY_SUCCESS:\n      {\n        var _index2 = state.lists.findIndex(function (product) {\n          return product.id === action.data.id;\n        });\n\n        var _product2 = state.lists[_index2];\n        var _quantity2 = _product2.quantity;\n        _quantity2 < _product2.stock ? _quantity2 += 1 : _product2.quantity;\n\n        var lists = _toConsumableArray(state.lists);\n\n        lists[_index2] = _objectSpread(_objectSpread({}, _product2), {}, {\n          quantity: _quantity2\n        });\n        return _objectSpread(_objectSpread({}, state), {}, {\n          lists: lists\n        });\n      }\n\n    case MINUS_QUANTITY_SUCCESS:\n      {\n        var _index3 = state.lists.findIndex(function (product) {\n          return product.id === action.data.id;\n        });\n\n        var _product3 = state.lists[_index3];\n        var _quantity3 = _product3.quantity;\n        _quantity3 > 1 ? _quantity3 -= 1 : 1;\n\n        var _lists = _toConsumableArray(state.lists);\n\n        _lists[_index3] = _objectSpread(_objectSpread({}, _product3), {}, {\n          quantity: _quantity3\n        });\n        return _objectSpread(_objectSpread({}, state), {}, {\n          lists: _lists\n        });\n      }\n\n    case LOAD_PRODUCTS_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_PRODUCTS_SUCCESS:\n      {\n        if (action.data[0].TableId) {\n          return _objectSpread(_objectSpread({}, state), {}, {\n            products: action.data[0].menus,\n            originProducts: action.data[0].menus,\n            TableId: action.data[0].TableId,\n            categories: action.data[1]\n          });\n        }\n\n        return _objectSpread(_objectSpread({}, state), {}, {\n          originProducts: action.data[0],\n          products: action.data[0],\n          categories: action.data[1]\n        });\n      }\n\n    case LOAD_PRODUCTS_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case ADD_PRODUCT_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case ADD_PRODUCT_SUCCESS:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          products: [action.data].concat(_toConsumableArray(state.products))\n        });\n      }\n\n    case ADD_PRODUCT_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_CART_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_CART_SUCCESS:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          cart: [].concat(_toConsumableArray(state.cart), [action.data])\n        });\n      }\n\n    case LOAD_CART_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case INITIATE_QUANTITY_REQUEST:\n      {\n        var _product4 = action.data;\n\n        var _index4 = state.products.findIndex(function (v) {\n          return v.id == action.data.id;\n        });\n\n        var _products2 = _toConsumableArray(state.products);\n\n        _products2[_index4] = _objectSpread(_objectSpread({}, _product4), {}, {\n          quantity: 1\n        });\n        return _objectSpread(_objectSpread({}, state), {}, {\n          products: _products2\n        });\n      }\n\n    case SEARCH_PRODUCT_SUCCESS:\n      {\n        var filteredProducts = state.originProducts.filter(function (product) {\n          return product.title.indexOf(action.data.text) > -1;\n        });\n        return _objectSpread(_objectSpread({}, state), {}, {\n          products: filteredProducts\n        });\n      }\n\n    case SELECT_CATEGORY_SUCCESS:\n      {\n        if (action.id == 0) {\n          return _objectSpread(_objectSpread({}, state), {}, {\n            products: _toConsumableArray(state.originProducts)\n          });\n        } else if (action.id == -1) {\n          var discountedProduct = state.originProducts.filter(function (v) {\n            return v.Discount !== null;\n          });\n          return _objectSpread(_objectSpread({}, state), {}, {\n            products: discountedProduct\n          });\n        }\n\n        var _filteredProducts = state.originProducts.filter(function (r) {\n          return r.Category.id == action.id;\n        });\n\n        return _objectSpread(_objectSpread({}, state), {}, {\n          products: _filteredProducts\n        });\n      }\n\n    case LOAD_LIST_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_LIST_SUCCESS:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          lists: action.data.products,\n          originalLists: action.data.products\n        });\n      }\n\n    case LOAD_LIST_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/Dev/project1/frontend/reducers/menu.js"],"names":["initialState","products","originProducts","lists","originalLists","naviSize","TableId","isAddingProduct","isLoadingCart","categories","LOAD_PRODUCTS_REQUEST","LOAD_PRODUCTS_SUCCESS","LOAD_PRODUCTS_FAILURE","ADD_QUANTITY_REQUEST","ADD_QUANTITY_SUCCESS","ADD_QUANTITY_FAILURE","SUBSTRACT_QUANTITY_REQUEST","SUBSTRACT_QUANTITY_SUCCESS","SUBSTRACT_QUANTITY_FAILURE","ADD_PRODUCT_REQUEST","ADD_PRODUCT_SUCCESS","ADD_PRODUCT_FAILURE","LOAD_CART_REQUEST","LOAD_CART_SUCCESS","LOAD_CART_FAILURE","INITIATE_QUANTITY_REQUEST","GET_NAVIBAR_SIZE","SEARCH_PRODUCT_SUCCESS","SELECT_CATEGORY_SUCCESS","LOAD_LIST_REQUEST","LOAD_LIST_SUCCESS","LOAD_LIST_FAILURE","reducer","state","action","type","data","index","findIndex","product","id","quantity","PLUS_QUANTITY_SUCCESS","stock","MINUS_QUANTITY_SUCCESS","menus","cart","v","filteredProducts","filter","title","indexOf","text","discountedProduct","Discount","r","Category"],"mappings":"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","sourcesContent":["const initialState = {\n  products: [],\n  originProducts: [],\n  lists: [],\n  originalLists: [],\n  naviSize: null,\n  TableId: null,\n  isAddingProduct: false,\n  isLoadingCart: false,\n  categories: [],\n};\n\nexport const LOAD_PRODUCTS_REQUEST = \"LOAD_PRODUCTS_REQUEST\";\nexport const LOAD_PRODUCTS_SUCCESS = \"LOAD_PRODUCTS_SUCCESS\";\nexport const LOAD_PRODUCTS_FAILURE = \"LOAD_PRODUCTS_FAILURE\";\n\nexport const ADD_QUANTITY_REQUEST = \"ADD_QUANTITY_REQUEST\";\nexport const ADD_QUANTITY_SUCCESS = \"ADD_QUANTITY_SUCCESS\";\nexport const ADD_QUANTITY_FAILURE = \"ADD_QUANTITY_FAILURE\";\n\nexport const SUBSTRACT_QUANTITY_REQUEST = \"SUBSTRACT_QUANTITY_REQUEST\";\nexport const SUBSTRACT_QUANTITY_SUCCESS = \"SUBSTRACT_QUANTITY_SUCCESS\";\nexport const SUBSTRACT_QUANTITY_FAILURE = \"SUBSTRACT_QUANTITY_FAILURE\";\n\nexport const ADD_PRODUCT_REQUEST = \"ADD_PRODUCT_REQUEST\";\nexport const ADD_PRODUCT_SUCCESS = \"ADD_PRODUCT_SUCCESS\";\nexport const ADD_PRODUCT_FAILURE = \"ADD_PRODUCT_FAILURE\";\n\nexport const LOAD_CART_REQUEST = \"LOAD_CART_REQUEST\";\nexport const LOAD_CART_SUCCESS = \"LOAD_CART_SUCCESS\";\nexport const LOAD_CART_FAILURE = \"LOAD_CART_FAILURE\";\n\nexport const INITIATE_QUANTITY_REQUEST = \"INITIATE_QUANTITY_REQUEST\";\n\nexport const GET_NAVIBAR_SIZE = \"GET_NAVIBAR_SIZE\";\n\nexport const SEARCH_PRODUCT_SUCCESS = \"SEARCH_PRODUCT_SUCCESS\";\n\nexport const SELECT_CATEGORY_SUCCESS = \"SELECT_CATEGORY_SUCCESS\";\n\nexport const LOAD_LIST_REQUEST = \"LOAD_LIST_REQUEST\";\nexport const LOAD_LIST_SUCCESS = \"LOAD_LIST_SUCCESS\";\nexport const LOAD_LIST_FAILURE = \"LOAD_LIST_FAILURE\";\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_NAVIBAR_SIZE: {\n      return {\n        ...state,\n        naviSize: action.data,\n      };\n    }\n\n    case ADD_QUANTITY_SUCCESS: {\n      const index = state.products.findIndex((product) => product.id === action.data.id);\n      const product = state.products[index];\n      let quantity = product.quantity;\n      quantity < 100 ? (quantity += 1) : 99;\n      const products = [...state.products];\n      products[index] = { ...product, quantity };\n\n      return {\n        ...state,\n        products,\n      };\n    }\n\n    case SUBSTRACT_QUANTITY_SUCCESS: {\n      const index = state.products.findIndex((product) => product.id === action.data.id);\n      const product = state.products[index];\n      let quantity = product.quantity;\n      quantity > 1 ? (quantity -= 1) : 1;\n      const products = [...state.products];\n      products[index] = { ...product, quantity };\n      return {\n        ...state,\n        products,\n      };\n    }\n\n    case PLUS_QUANTITY_SUCCESS: {\n      const index = state.lists.findIndex((product) => product.id === action.data.id);\n      const product = state.lists[index];\n      let quantity = product.quantity;\n      quantity < product.stock ? (quantity += 1) : product.quantity;\n      const lists = [...state.lists];\n      lists[index] = { ...product, quantity };\n\n      return {\n        ...state,\n        lists,\n      };\n    }\n\n    case MINUS_QUANTITY_SUCCESS: {\n      const index = state.lists.findIndex((product) => product.id === action.data.id);\n      const product = state.lists[index];\n      let quantity = product.quantity;\n      quantity > 1 ? (quantity -= 1) : 1;\n      const lists = [...state.lists];\n      lists[index] = { ...product, quantity };\n      return {\n        ...state,\n        lists,\n      };\n    }\n\n    case LOAD_PRODUCTS_REQUEST: {\n      return {\n        ...state,\n      };\n    }\n\n    case LOAD_PRODUCTS_SUCCESS: {\n      if (action.data[0].TableId) {\n        return {\n          ...state,\n          products: action.data[0].menus,\n          originProducts: action.data[0].menus,\n          TableId: action.data[0].TableId,\n          categories: action.data[1],\n        };\n      }\n      return {\n        ...state,\n        originProducts: action.data[0],\n        products: action.data[0],\n        categories: action.data[1],\n      };\n    }\n\n    case LOAD_PRODUCTS_FAILURE: {\n      return {\n        ...state,\n      };\n    }\n\n    case ADD_PRODUCT_REQUEST: {\n      return {\n        ...state,\n      };\n    }\n\n    case ADD_PRODUCT_SUCCESS: {\n      return {\n        ...state,\n        products: [action.data, ...state.products],\n      };\n    }\n\n    case ADD_PRODUCT_FAILURE: {\n      return {\n        ...state,\n      };\n    }\n\n    case LOAD_CART_REQUEST: {\n      return {\n        ...state,\n      };\n    }\n\n    case LOAD_CART_SUCCESS: {\n      return {\n        ...state,\n        cart: [...state.cart, action.data],\n      };\n    }\n\n    case LOAD_CART_FAILURE: {\n      return {\n        ...state,\n      };\n    }\n\n    case INITIATE_QUANTITY_REQUEST: {\n      const product = action.data;\n      const index = state.products.findIndex((v) => v.id == action.data.id);\n      const products = [...state.products];\n      products[index] = { ...product, quantity: 1 };\n      return {\n        ...state,\n        products,\n      };\n    }\n\n    case SEARCH_PRODUCT_SUCCESS: {\n      const filteredProducts = state.originProducts.filter((product) => {\n        return product.title.indexOf(action.data.text) > -1;\n      });\n      return { ...state, products: filteredProducts };\n    }\n\n    case SELECT_CATEGORY_SUCCESS: {\n      if (action.id == 0) {\n        return { ...state, products: [...state.originProducts] };\n      } else if (action.id == -1) {\n        const discountedProduct = state.originProducts.filter((v) => {\n          return v.Discount !== null;\n        });\n        return { ...state, products: discountedProduct };\n      }\n      const filteredProducts = state.originProducts.filter((r) => r.Category.id == action.id);\n      return { ...state, products: filteredProducts };\n    }\n\n    case LOAD_LIST_REQUEST: {\n      return { ...state };\n    }\n    case LOAD_LIST_SUCCESS: {\n      return {\n        ...state,\n        lists: action.data.products,\n        originalLists: action.data.products,\n      };\n    }\n    case LOAD_LIST_FAILURE: {\n      return {\n        ...state,\n      };\n    }\n\n    default: {\n      return {\n        ...state,\n      };\n    }\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}