{"ast":null,"code":"import { Card, Carousel, Image, Tag } from \"antd\";\nimport { useEffect, useState, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport OneSignal from \"react-onesignal\";\nimport axios from \"axios\";\nimport { useRouter } from \"next/router\";\nimport { LOAD_EVENTS_REQUEST, PAGE_CHANGE_SUCCESS } from \"../reducers/admin\";\nimport { Map, MapMarker, CustomOverlayMap } from \"react-kakao-maps-sdk\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nconst Index = () => {\n  axios.defaults.baseURL = `${process.env.BACKEND_IP}`;\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const {\n    0: coordinates,\n    1: setCoordinates\n  } = useState();\n  useEffect(() => {\n    dispatch({\n      type: LOAD_EVENTS_REQUEST\n    });\n  });\n  useEffect(() => {\n    dispatch({\n      type: PAGE_CHANGE_SUCCESS,\n      data: \"index\"\n    });\n  });\n  const {\n    events\n  } = useSelector(state => state.admin);\n  const {\n    isLoggedIn,\n    session\n  } = useSelector(state => state.user);\n\n  if (session && coordinates == null) {\n    axios.post(\"/\", {\n      id: session.id\n    }).then(result => {\n      setCoordinates(result.data);\n    }).catch(err => console.error(err));\n  }\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: isLoggedIn && session ? /*#__PURE__*/_jsxs(Map, {\n      center: {\n        lat: session.lat,\n        lng: session.lng\n      },\n      style: {\n        width: \"100%\",\n        height: \"360px\"\n      },\n      level: 5,\n      children: [session && session.division === false && /*#__PURE__*/_jsx(MapMarker, {\n        position: {\n          lat: session.lat,\n          lng: session.lng\n        },\n        children: /*#__PURE__*/_jsx(\"div\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: session && session.name\n        })\n      }, session.id), coordinates && coordinates.length > 0 && coordinates.map(result => {\n        return /*#__PURE__*/_jsx(CustomOverlayMap, {\n          position: {\n            lat: result.location.coordinates[1],\n            lng: result.location.coordinates[0]\n          },\n          onClick: () => {\n            console.log(session.Shops.filter(v => v.id == result.ShopId));\n            const ids = session.Shops.filter(v => v.id == result.ShopId);\n\n            if (ids.length == 0) {\n              return router.push(`/menu/${result.ShopId}`);\n            } else {\n              return router.push(`/shop/admin`);\n            }\n          },\n          children: /*#__PURE__*/_jsx(Tag, {\n            style: {\n              cursor: \"pointer\"\n            },\n            children: result.name\n          })\n        });\n      })]\n    }) : /*#__PURE__*/_jsx(Card, {\n      children: /*#__PURE__*/_jsx(Card.Meta, {\n        description: /*#__PURE__*/_jsx(\"div\", {\n          style: {\n            height: \"100vh\",\n            width: \"100%\"\n          },\n          children: /*#__PURE__*/_jsx(Carousel, {\n            autoplay: true,\n            dots: false,\n            children: events.map(event => /*#__PURE__*/_jsx(Image, {\n              onClick: router.push(`/event/${event.id}`),\n              style: {\n                height: \"100vh\",\n                width: \"100%\"\n              },\n              src: `${process.env.BACKEND_IP}/uploads/${event.Images[0].url}`\n            }))\n          })\n        })\n      })\n    })\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/dev/project1/frontend/pages/index.js"],"names":["Card","Carousel","Image","Tag","useEffect","useState","useCallback","useDispatch","useSelector","OneSignal","axios","useRouter","LOAD_EVENTS_REQUEST","PAGE_CHANGE_SUCCESS","Map","MapMarker","CustomOverlayMap","Index","defaults","baseURL","process","env","BACKEND_IP","dispatch","router","coordinates","setCoordinates","type","data","events","state","admin","isLoggedIn","session","user","post","id","then","result","catch","err","console","error","lat","lng","width","height","division","textAlign","name","length","map","location","log","Shops","filter","v","ShopId","ids","push","cursor","event","Images","url"],"mappings":"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","sourcesContent":["import { Card, Carousel, Image, Tag } from \"antd\";\nimport { useEffect, useState, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport OneSignal from \"react-onesignal\";\nimport axios from \"axios\";\nimport { useRouter } from \"next/router\";\nimport { LOAD_EVENTS_REQUEST, PAGE_CHANGE_SUCCESS } from \"../reducers/admin\";\nimport { Map, MapMarker, CustomOverlayMap } from \"react-kakao-maps-sdk\";\n\nconst Index = () => {\n  axios.defaults.baseURL = `${process.env.BACKEND_IP}`;\n\n  const dispatch = useDispatch();\n  const router = useRouter();\n\n  const [coordinates, setCoordinates] = useState();\n\n  useEffect(() => {\n    dispatch({ type: LOAD_EVENTS_REQUEST });\n  });\n\n  useEffect(() => {\n    dispatch({ type: PAGE_CHANGE_SUCCESS, data: \"index\" });\n  });\n\n  const { events } = useSelector((state) => state.admin);\n  const { isLoggedIn, session } = useSelector((state) => state.user);\n\n  if (session && coordinates == null) {\n    axios\n      .post(\"/\", { id: session.id })\n      .then((result) => {\n        setCoordinates(result.data);\n      })\n      .catch((err) => console.error(err));\n  }\n\n  return (\n    <>\n      {isLoggedIn && session ? (\n        <Map\n          center={{ lat: session.lat, lng: session.lng }}\n          style={{ width: \"100%\", height: \"360px\" }}\n          level={5}\n        >\n          {session && session.division === false && (\n            <MapMarker key={session.id} position={{ lat: session.lat, lng: session.lng }}>\n              <div style={{ textAlign: \"center\" }}>{session && session.name}</div>\n            </MapMarker>\n          )}\n          {coordinates &&\n            coordinates.length > 0 &&\n            coordinates.map((result) => {\n              return (\n                <CustomOverlayMap\n                  position={{\n                    lat: result.location.coordinates[1],\n                    lng: result.location.coordinates[0],\n                  }}\n                  onClick={() => {\n                    console.log(session.Shops.filter((v) => v.id == result.ShopId));\n                    const ids = session.Shops.filter((v) => v.id == result.ShopId);\n                    if (ids.length == 0) {\n                      return router.push(`/menu/${result.ShopId}`);\n                    } else {\n                      return router.push(`/shop/admin`);\n                    }\n                  }}\n                >\n                  <Tag style={{ cursor: \"pointer\" }}>{result.name}</Tag>\n                </CustomOverlayMap>\n              );\n            })}\n        </Map>\n      ) : (\n        <Card>\n          <Card.Meta\n            description={\n              <div style={{ height: \"100vh\", width: \"100%\" }}>\n                <Carousel autoplay dots={false}>\n                  {events.map((event) => (\n                    <Image\n                      onClick={router.push(`/event/${event.id}`)}\n                      style={{ height: \"100vh\", width: \"100%\" }}\n                      src={`${process.env.BACKEND_IP}/uploads/${event.Images[0].url}`}\n                    />\n                  ))}\n                </Carousel>\n              </div>\n            }\n          />\n        </Card>\n      )}\n    </>\n  );\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}