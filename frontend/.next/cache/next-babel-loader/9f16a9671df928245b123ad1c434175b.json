{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\hoyuen\\\\Documents\\\\project\\\\project1\\\\frontend\\\\components\\\\Generalui\\\\SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Input, Form } from 'antd';\nimport { useDispatch } from 'react-redux';\nimport { useInput } from './CustomHooks';\n\nvar SearchBar = function SearchBar(_ref) {\n  _s();\n\n  var setToggleSearch = _ref.setToggleSearch;\n  var dispatch = useDispatch();\n\n  var _useInput = useInput(),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      text = _useInput2[0],\n      onChangeText = _useInput2[1]; //   dispatch({})\n\n\n  return __jsx(Input.Search, {\n    size: 20,\n    onChange: onChangeText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 10\n    }\n  });\n};\n\n_s(SearchBar, \"mjTccmqPpzWnnlBblvKS5gkk7mk=\", false, function () {\n  return [useDispatch, useInput];\n});\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/components/Generalui/SearchBar.js"],"names":["Input","Form","useDispatch","useInput","SearchBar","setToggleSearch","dispatch","text","onChangeText"],"mappings":";;;;;;;;AAAA,SAASA,KAAT,EAAgBC,IAAhB,QAA4B,MAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,QAAyB,eAAzB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAyB;AAAA;;AAAA,MAAtBC,eAAsB,QAAtBA,eAAsB;AACzC,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B;;AADyC,kBAEZC,QAAQ,EAFI;AAAA;AAAA,MAElCI,IAFkC;AAAA,MAE5BC,YAF4B,kBAIzC;;;AAEA,SAAO,MAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAE,EAApB;AAAwB,IAAA,QAAQ,EAAEA,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAPD;;GAAMJ,S;UACaF,W,EACYC,Q;;;KAFzBC,S;AASN,eAAeA,SAAf","sourcesContent":["import { Input, Form } from 'antd';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useInput } from './CustomHooks';\r\n\r\nconst SearchBar = ({ setToggleSearch }) => {\r\n  const dispatch = useDispatch();\r\n  const [text, onChangeText] = useInput();\r\n\r\n  //   dispatch({})\r\n\r\n  return <Input.Search size={20} onChange={onChangeText} />;\r\n};\r\n\r\nexport default SearchBar;\r\n"]},"metadata":{},"sourceType":"module"}