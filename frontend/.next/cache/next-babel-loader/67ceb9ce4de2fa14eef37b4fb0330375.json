{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hoyuen\\\\Documents\\\\project\\\\project1\\\\frontend\\\\pages\\\\shop\\\\admin\\\\product\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { List, Button, Modal, Avatar, Card } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState, useCallback } from 'react';\nimport { useRouter } from 'next/router';\nimport { ADMIN_PRODUCTS_REQUEST, DELETE_PRODUCT_REQUEST } from '../../../../reducers/shop';\nimport PropTypes from 'prop-types';\nimport EditProduct from '../../../../components/Generalui/EditProduct';\n\nconst Console = () => {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const {\n    session\n  } = useSelector(state => state.user);\n\n  if (!session || session.division === false) {\n    return router.back();\n  } else {\n    useEffect(() => {\n      dispatch({\n        type: ADMIN_PRODUCTS_REQUEST,\n        ShopId: session.Shops[0].id\n      });\n    }, []);\n  }\n\n  const {\n    0: edit,\n    1: setEdit\n  } = useState(false);\n  const {\n    0: product,\n    1: setProduct\n  } = useState({});\n\n  const onToggleEdit = item => {\n    setEdit(prev => !prev);\n    setProduct(item);\n  };\n\n  const {\n    products\n  } = useSelector(state => state.shop);\n  return __jsx(React.Fragment, null, __jsx(Modal, {\n    title: '수정하기',\n    visible: edit,\n    onCancel: () => {\n      setEdit(false);\n      return setProduct(null);\n    },\n    footer: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, __jsx(EditProduct, {\n    item: product,\n    setEdit: setEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  })), __jsx(List, {\n    itemLayout: 'horizontal',\n    dataSource: products,\n    renderItem: item => {\n      return __jsx(React.Fragment, null, __jsx(List.Item, {\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }\n      }, __jsx(Card, {\n        style: {\n          width: '100%'\n        },\n        actions: [__jsx(\"div\", {\n          onClick: () => onToggleEdit(item),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }\n        }, \"\\uC218\\uC815\"), // 수정을 클릭하면 Modal State가 바뀌어서 모달열림\n        __jsx(\"div\", {\n          onClick: () => {\n            const flag = confirm(`이 제품을 정말로 삭제하시겠습니까?`);\n\n            if (!flag) {\n              return false;\n            } else {\n              dispatch({\n                type: DELETE_PRODUCT_REQUEST,\n                id: item.id\n              });\n            }\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }\n        }, \"\\uC0AD\\uC81C\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }, __jsx(List.Item.Meta, {\n        avatar: __jsx(Avatar, {\n          src: `http://127.0.0.1:3065/uploads/${item.Images[0].url}`,\n          shape: 'square',\n          size: 'large',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 23\n          }\n        }),\n        title: item.title,\n        description: __jsx(React.Fragment, null, __jsx(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }\n        }, item.price, \",\", item.description)),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 19\n        }\n      }))));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }));\n};\n\nConsole.protoType = {\n  productList: PropTypes.object.isRequired\n};\nexport default Console;","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/pages/shop/admin/product/index.js"],"names":["List","Button","Modal","Avatar","Card","useDispatch","useSelector","useEffect","useState","useCallback","useRouter","ADMIN_PRODUCTS_REQUEST","DELETE_PRODUCT_REQUEST","PropTypes","EditProduct","Console","dispatch","router","session","state","user","division","back","type","ShopId","Shops","id","edit","setEdit","product","setProduct","onToggleEdit","item","prev","products","shop","width","flag","confirm","Images","url","title","price","description","protoType","productList","object","isRequired"],"mappings":"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","sourcesContent":["import { List, Button, Modal, Avatar, Card } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect, useState, useCallback } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport { ADMIN_PRODUCTS_REQUEST, DELETE_PRODUCT_REQUEST } from '../../../../reducers/shop';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport EditProduct from '../../../../components/Generalui/EditProduct';\r\n\r\nconst Console = () => {\r\n  const dispatch = useDispatch();\r\n  const router = useRouter();\r\n  const { session } = useSelector((state) => state.user);\r\n  if (!session || session.division === false) {\r\n    return router.back();\r\n  } else {\r\n    useEffect(() => {\r\n      dispatch({ type: ADMIN_PRODUCTS_REQUEST, ShopId: session.Shops[0].id });\r\n    }, []);\r\n  }\r\n\r\n  const [edit, setEdit] = useState(false);\r\n  const [product, setProduct] = useState({});\r\n\r\n  const onToggleEdit = (item) => {\r\n    setEdit((prev) => !prev);\r\n    setProduct(item);\r\n  };\r\n\r\n  const { products } = useSelector((state) => state.shop);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title={'수정하기'}\r\n        visible={edit}\r\n        onCancel={() => {\r\n          setEdit(false);\r\n          return setProduct(null);\r\n        }}\r\n        footer={null}\r\n      >\r\n        <EditProduct item={product} setEdit={setEdit} />\r\n      </Modal>\r\n      <List\r\n        itemLayout={'horizontal'}\r\n        dataSource={products}\r\n        renderItem={(item) => {\r\n          return (\r\n            <>\r\n              <List.Item key={item.id}>\r\n                <Card\r\n                  style={{ width: '100%' }}\r\n                  actions={[\r\n                    <div onClick={() => onToggleEdit(item)}>수정</div>, // 수정을 클릭하면 Modal State가 바뀌어서 모달열림\r\n                    <div\r\n                      onClick={() => {\r\n                        const flag = confirm(`이 제품을 정말로 삭제하시겠습니까?`);\r\n                        if (!flag) {\r\n                          return false;\r\n                        } else {\r\n                          dispatch({ type: DELETE_PRODUCT_REQUEST, id: item.id });\r\n                        }\r\n                      }}\r\n                    >\r\n                      삭제\r\n                    </div>,\r\n                  ]}\r\n                >\r\n                  <List.Item.Meta\r\n                    avatar={\r\n                      <Avatar\r\n                        src={`http://127.0.0.1:3065/uploads/${item.Images[0].url}`}\r\n                        shape={'square'}\r\n                        size={'large'}\r\n                      />\r\n                    }\r\n                    title={item.title}\r\n                    description={\r\n                      <>\r\n                        <p>\r\n                          {item.price},{item.description}\r\n                        </p>\r\n                      </>\r\n                    }\r\n                  />\r\n                </Card>\r\n              </List.Item>\r\n            </>\r\n          );\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nConsole.protoType = {\r\n  productList: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Console;\r\n"]},"metadata":{},"sourceType":"module"}