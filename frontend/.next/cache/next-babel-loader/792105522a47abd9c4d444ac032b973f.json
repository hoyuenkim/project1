{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { Input, Modal, List } from \"antd\";\nimport { useDispatch } from \"react-redux\";\nimport { SEARCH_PRODUCT_SUCCESS } from \"../../reducers/menu\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar SearchBar = function SearchBar(_ref) {\n  _s();\n\n  var setToggleSearch = _ref.setToggleSearch,\n      type = _ref.type;\n  var dispatch = useDispatch();\n\n  var _useState = useState(),\n      text = _useState[0],\n      setText = _useState[1];\n\n  var _useState2 = useState(),\n      coordinates = _useState2[0],\n      setCoordinates = _useState2[1];\n\n  var _useState3 = useState([]),\n      list = _useState3[0],\n      setList = _useState3[1];\n\n  var _useState4 = useState(false),\n      visible = _useState4[0],\n      setVisible = _useState4[1];\n\n  var onChangeText = function onChangeText(e) {\n    return setText(e.target.value);\n  };\n\n  var onClickAddress = function onClickAddress(data) {\n    setCoordinates([Number(data.address.x), Number(data.address.y)]);\n  };\n\n  var onSearch = function onSearch() {\n    /*#__PURE__*/\n    _jsx(Modal, {\n      title: list.length == 0 ? \"오류\" : \"검색결과\",\n      visible: visible,\n      onCancel: function onCancel() {\n        return setVisible(false);\n      },\n      children: list.length == 0 ? /*#__PURE__*/_jsx(\"div\", {\n        children: \"\\uAC80\\uC0C9\\uACB0\\uACFC \\uC5C6\\uC74C\"\n      }) : /*#__PURE__*/_jsx(List, {\n        dataSource: list,\n        renderItem: function renderItem(data) {\n          return /*#__PURE__*/_jsx(List.Item, {\n            onClick: function onClick() {\n              return onClickAddress(data);\n            },\n            children: /*#__PURE__*/_jsx(List.Item.Meta, {\n              title: data.title,\n              description: data.address\n            })\n          });\n        }\n      })\n    });\n\n    if (type == \"menu\") {\n      dispatch({\n        type: SEARCH_PRODUCT_SUCCESS,\n        data: {\n          text: text\n        }\n      });\n    } else if (type == \"index\") {\n      axios.get(\"https://dapi.kakao.com/v2/local/search/keyword?query=\".concat(text, \"&size=15\"), {\n        headers: {\n          Authorization: \"KakaoAK \".concat(process.env.KAKAO_APIKEY)\n        }\n      }).then(function (res) {\n        var location = res.data.documents;\n        console.log(location);\n\n        if (location.length === 1) {\n          setCoordinates([Number(location[0].address.x), Number(location[0].address.y)]);\n        } else {\n          console.log(\"yes\");\n          setVisible(true);\n        }\n      });\n    }\n\n    setText();\n    setToggleSearch(false);\n  };\n\n  return /*#__PURE__*/_jsx(Input.Search, {\n    size: \"large\",\n    value: text,\n    onChange: onChangeText,\n    enterButton: true,\n    onSearch: onSearch\n  });\n};\n\n_s(SearchBar, \"WSbH8z5K4HXFNVtC1pieqKb5YNU=\", false, function () {\n  return [useDispatch];\n});\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/dev/project1/frontend/components/Forms/SearchBar.js"],"names":["Input","Modal","List","useDispatch","SEARCH_PRODUCT_SUCCESS","useState","axios","SearchBar","setToggleSearch","type","dispatch","text","setText","coordinates","setCoordinates","list","setList","visible","setVisible","onChangeText","e","target","value","onClickAddress","data","Number","address","x","y","onSearch","length","title","get","headers","Authorization","process","env","KAKAO_APIKEY","then","res","location","documents","console","log"],"mappings":";;AAAA,SAASA,KAAT,EAAgBC,KAAhB,EAAuBC,IAAvB,QAAmC,MAAnC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,sBAAT,QAAuC,qBAAvC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAA+B;AAAA;;AAAA,MAA5BC,eAA4B,QAA5BA,eAA4B;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAC/C,MAAMC,QAAQ,GAAGP,WAAW,EAA5B;;AACA,kBAAwBE,QAAQ,EAAhC;AAAA,MAAOM,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAsCP,QAAQ,EAA9C;AAAA,MAAOQ,WAAP;AAAA,MAAoBC,cAApB;;AACA,mBAAwBT,QAAQ,CAAC,EAAD,CAAhC;AAAA,MAAOU,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAA8BX,QAAQ,CAAC,KAAD,CAAtC;AAAA,MAAOY,OAAP;AAAA,MAAgBC,UAAhB;;AACA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD;AAAA,WAAOR,OAAO,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AAAA,GAArB;;AAEA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD,EAAU;AAC/BV,IAAAA,cAAc,CAAC,CAACW,MAAM,CAACD,IAAI,CAACE,OAAL,CAAaC,CAAd,CAAP,EAAyBF,MAAM,CAACD,IAAI,CAACE,OAAL,CAAaE,CAAd,CAA/B,CAAD,CAAd;AACD,GAFD;;AAIA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB;AAAA,SAAC,KAAD;AACE,MAAA,KAAK,EAAEd,IAAI,CAACe,MAAL,IAAe,CAAf,GAAmB,IAAnB,GAA0B,MADnC;AAEE,MAAA,OAAO,EAAEb,OAFX;AAGE,MAAA,QAAQ,EAAE;AAAA,eAAMC,UAAU,CAAC,KAAD,CAAhB;AAAA,OAHZ;AAAA,gBAKGH,IAAI,CAACe,MAAL,IAAe,CAAf,gBACC;AAAA;AAAA,QADD,gBAGC,KAAC,IAAD;AACE,QAAA,UAAU,EAAEf,IADd;AAEE,QAAA,UAAU,EAAE,oBAACS,IAAD,EAAU;AACpB,8BACE,KAAC,IAAD,CAAM,IAAN;AAAW,YAAA,OAAO,EAAE;AAAA,qBAAMD,cAAc,CAACC,IAAD,CAApB;AAAA,aAApB;AAAA,mCACE,KAAC,IAAD,CAAM,IAAN,CAAW,IAAX;AAAgB,cAAA,KAAK,EAAEA,IAAI,CAACO,KAA5B;AAAmC,cAAA,WAAW,EAAEP,IAAI,CAACE;AAArD;AADF,YADF;AAKD;AARH;AARJ;;AAoBA,QAAIjB,IAAI,IAAI,MAAZ,EAAoB;AAClBC,MAAAA,QAAQ,CAAC;AACPD,QAAAA,IAAI,EAAEL,sBADC;AAEPoB,QAAAA,IAAI,EAAE;AAAEb,UAAAA,IAAI,EAAJA;AAAF;AAFC,OAAD,CAAR;AAID,KALD,MAKO,IAAIF,IAAI,IAAI,OAAZ,EAAqB;AAC1BH,MAAAA,KAAK,CACF0B,GADH,gEAC+DrB,IAD/D,eAC+E;AAC3EsB,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,oBAAaC,OAAO,CAACC,GAAR,CAAYC,YAAzB;AADN;AADkE,OAD/E,EAMGC,IANH,CAMQ,UAACC,GAAD,EAAS;AACb,YAAMC,QAAQ,GAAGD,GAAG,CAACf,IAAJ,CAASiB,SAA1B;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AACA,YAAIA,QAAQ,CAACV,MAAT,KAAoB,CAAxB,EAA2B;AACzBhB,UAAAA,cAAc,CAAC,CAACW,MAAM,CAACe,QAAQ,CAAC,CAAD,CAAR,CAAYd,OAAZ,CAAoBC,CAArB,CAAP,EAAgCF,MAAM,CAACe,QAAQ,CAAC,CAAD,CAAR,CAAYd,OAAZ,CAAoBE,CAArB,CAAtC,CAAD,CAAd;AACD,SAFD,MAEO;AACLc,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAzB,UAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF,OAfH;AAgBD;;AACDN,IAAAA,OAAO;AACPJ,IAAAA,eAAe,CAAC,KAAD,CAAf;AACD,GA9CD;;AAgDA,sBACE,KAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAE,OADR;AAEE,IAAA,KAAK,EAAEG,IAFT;AAGE,IAAA,QAAQ,EAAEQ,YAHZ;AAIE,IAAA,WAAW,MAJb;AAKE,IAAA,QAAQ,EAAEU;AALZ,IADF;AASD,CArED;;GAAMtB,S;UACaJ,W;;;KADbI,S;AAuEN,eAAeA,SAAf","sourcesContent":["import { Input, Modal, List } from \"antd\";\nimport { useDispatch } from \"react-redux\";\nimport { SEARCH_PRODUCT_SUCCESS } from \"../../reducers/menu\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\n\nconst SearchBar = ({ setToggleSearch, type }) => {\n  const dispatch = useDispatch();\n  const [text, setText] = useState();\n  const [coordinates, setCoordinates] = useState();\n  const [list, setList] = useState([]);\n  const [visible, setVisible] = useState(false);\n  const onChangeText = (e) => setText(e.target.value);\n\n  const onClickAddress = (data) => {\n    setCoordinates([Number(data.address.x), Number(data.address.y)]);\n  };\n\n  const onSearch = () => {\n    <Modal\n      title={list.length == 0 ? \"오류\" : \"검색결과\"}\n      visible={visible}\n      onCancel={() => setVisible(false)}\n    >\n      {list.length == 0 ? (\n        <div>검색결과 없음</div>\n      ) : (\n        <List\n          dataSource={list}\n          renderItem={(data) => {\n            return (\n              <List.Item onClick={() => onClickAddress(data)}>\n                <List.Item.Meta title={data.title} description={data.address} />\n              </List.Item>\n            );\n          }}\n        />\n      )}\n    </Modal>;\n    if (type == \"menu\") {\n      dispatch({\n        type: SEARCH_PRODUCT_SUCCESS,\n        data: { text },\n      });\n    } else if (type == \"index\") {\n      axios\n        .get(`https://dapi.kakao.com/v2/local/search/keyword?query=${text}&size=15`, {\n          headers: {\n            Authorization: `KakaoAK ${process.env.KAKAO_APIKEY}`,\n          },\n        })\n        .then((res) => {\n          const location = res.data.documents;\n          console.log(location);\n          if (location.length === 1) {\n            setCoordinates([Number(location[0].address.x), Number(location[0].address.y)]);\n          } else {\n            console.log(\"yes\");\n            setVisible(true);\n          }\n        });\n    }\n    setText();\n    setToggleSearch(false);\n  };\n\n  return (\n    <Input.Search\n      size={\"large\"}\n      value={text}\n      onChange={onChangeText}\n      enterButton\n      onSearch={onSearch}\n    />\n  );\n};\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}