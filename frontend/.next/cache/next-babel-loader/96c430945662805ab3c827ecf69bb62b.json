{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst initialState = {\n  cart: [],\n  shopId: undefined,\n  tableId: undefined\n};\nexport const LOAD_CART_REQUEST = 'LOAD_CART_REQUEST';\nexport const LOAD_CART_SUCCESS = 'LOAD_CART_SUCCESS';\nexport const LOAD_CART_FAILURE = 'LOAD_CART_FAILURE';\nexport const REMOVE_ITEM_REQUEST = 'REMOVE_ITEM_REQUEST';\nexport const REMOVE_ITEM_SUCCESS = 'REMOVE_ITEM_SUCCESS';\nexport const REMOVE_ITEM_FAILURE = 'REMOVE_ITEM_FAILURE';\nexport const ADD_ITEM_QUANTITY_REQUEST = 'ADD_ITEM_QUANTITY_REQUEST';\nexport const SUBSTRACT_ITEM_QUANTITY_REQUEST = 'SUBSTRACT_ITEM_QUANTITY_REQUEST';\nexport const ADD_CART_ITEM_REQUEST = 'ADD_CART_ITEM_REQUEST';\nexport const REMOVE_CART_ITEM_REQUEST = 'REMOVE_CART_ITEM_REQUEST';\nexport const CLEAR_CART_REQUEST = 'CLEAR_CART_REQUEST';\nexport const GET_SHOP_TABLE_ID = 'GET_SHOP_TABLE_ID';\nexport const PASSWORD_CHANGE_REQUEST = 'PASSWORD_CHANGE_REQUEST';\nexport const PASSWORD_CHANGE_SUCCESS = 'PASSWORD_CHANGE_';\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_CART_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_CART_SUCCESS:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          cart: [...state.cart, action.data]\n        });\n      }\n\n    case LOAD_CART_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case REMOVE_ITEM_REQUEST:\n      {\n        console.log(action.id);\n        const items = state.cart.filter(item => item.id !== action.id);\n        console.log(items);\n        return _objectSpread(_objectSpread({}, state), {}, {\n          cart: [...items]\n        });\n      }\n\n    case ADD_CART_ITEM_REQUEST:\n      {\n        const newProduct = action.product;\n        const productIndex = state.cart.findIndex(v => v.id === newProduct.id);\n        console.log(productIndex);\n\n        if (productIndex !== -1) {\n          const formerProduct = state.cart[productIndex];\n\n          const finalProduct = _objectSpread(_objectSpread({}, formerProduct), {}, {\n            quantity: formerProduct.quantity + newProduct.quantity\n          });\n\n          const cartList = [...state.cart.filter(v => v.id !== newProduct.id), finalProduct];\n          return _objectSpread(_objectSpread({}, state), {}, {\n            cart: cartList\n          });\n        }\n\n        return _objectSpread(_objectSpread({}, state), {}, {\n          cart: [...state.cart, newProduct]\n        });\n      }\n\n    case ADD_ITEM_QUANTITY_REQUEST:\n      {\n        const index = state.cart.findIndex(cart => cart.id === action.data.id);\n        const product = state.cart[index];\n        let quantity = product.quantity;\n        quantity < 100 ? quantity += 1 : 99;\n        const cart = [...state.cart];\n        cart[index] = _objectSpread(_objectSpread({}, product), {}, {\n          quantity\n        });\n        return _objectSpread(_objectSpread({}, state), {}, {\n          cart\n        });\n      }\n\n    case SUBSTRACT_ITEM_QUANTITY_REQUEST:\n      {\n        const index = state.cart.findIndex(cart => cart.id === action.data.id);\n        const product = state.cart[index];\n        let quantity = product.quantity;\n        quantity > 1 ? quantity -= 1 : 1;\n        const cart = [...state.cart];\n        cart[index] = _objectSpread(_objectSpread({}, product), {}, {\n          quantity\n        });\n        return _objectSpread(_objectSpread({}, state), {}, {\n          cart\n        });\n      }\n\n    case CLEAR_CART_REQUEST:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          cart: []\n        });\n      }\n\n    case GET_SHOP_TABLE_ID:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          shopId: action.data.shopId,\n          tableId: action.data.tableId\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/reducers/cart.js"],"names":["initialState","cart","shopId","undefined","tableId","LOAD_CART_REQUEST","LOAD_CART_SUCCESS","LOAD_CART_FAILURE","REMOVE_ITEM_REQUEST","REMOVE_ITEM_SUCCESS","REMOVE_ITEM_FAILURE","ADD_ITEM_QUANTITY_REQUEST","SUBSTRACT_ITEM_QUANTITY_REQUEST","ADD_CART_ITEM_REQUEST","REMOVE_CART_ITEM_REQUEST","CLEAR_CART_REQUEST","GET_SHOP_TABLE_ID","PASSWORD_CHANGE_REQUEST","PASSWORD_CHANGE_SUCCESS","state","action","type","data","console","log","id","items","filter","item","newProduct","product","productIndex","findIndex","v","formerProduct","finalProduct","quantity","cartList","index"],"mappings":"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","sourcesContent":["const initialState = {\r\n  cart: [],\r\n  shopId: undefined,\r\n  tableId: undefined,\r\n};\r\n\r\nexport const LOAD_CART_REQUEST = 'LOAD_CART_REQUEST';\r\nexport const LOAD_CART_SUCCESS = 'LOAD_CART_SUCCESS';\r\nexport const LOAD_CART_FAILURE = 'LOAD_CART_FAILURE';\r\n\r\nexport const REMOVE_ITEM_REQUEST = 'REMOVE_ITEM_REQUEST';\r\nexport const REMOVE_ITEM_SUCCESS = 'REMOVE_ITEM_SUCCESS';\r\nexport const REMOVE_ITEM_FAILURE = 'REMOVE_ITEM_FAILURE';\r\n\r\nexport const ADD_ITEM_QUANTITY_REQUEST = 'ADD_ITEM_QUANTITY_REQUEST';\r\nexport const SUBSTRACT_ITEM_QUANTITY_REQUEST = 'SUBSTRACT_ITEM_QUANTITY_REQUEST';\r\n\r\nexport const ADD_CART_ITEM_REQUEST = 'ADD_CART_ITEM_REQUEST';\r\nexport const REMOVE_CART_ITEM_REQUEST = 'REMOVE_CART_ITEM_REQUEST';\r\n\r\nexport const CLEAR_CART_REQUEST = 'CLEAR_CART_REQUEST';\r\n\r\nexport const GET_SHOP_TABLE_ID = 'GET_SHOP_TABLE_ID';\r\n\r\nexport const PASSWORD_CHANGE_REQUEST = 'PASSWORD_CHANGE_REQUEST'\r\nexport const PASSWORD_CHANGE_SUCCESS = 'PASSWORD_CHANGE_'\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOAD_CART_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n\r\n    case LOAD_CART_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        cart: [...state.cart, action.data],\r\n      };\r\n    }\r\n\r\n    case LOAD_CART_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n\r\n    case REMOVE_ITEM_REQUEST: {\r\n      console.log(action.id);\r\n      const items = state.cart.filter((item) => item.id !== action.id);\r\n      console.log(items);\r\n      return {\r\n        ...state,\r\n        cart: [...items],\r\n      };\r\n    }\r\n\r\n    case ADD_CART_ITEM_REQUEST: {\r\n      const newProduct = action.product;\r\n      const productIndex = state.cart.findIndex((v) => v.id === newProduct.id);\r\n      console.log(productIndex);\r\n      if (productIndex !== -1) {\r\n        const formerProduct = state.cart[productIndex];\r\n        const finalProduct = {\r\n          ...formerProduct,\r\n          quantity: formerProduct.quantity + newProduct.quantity,\r\n        };\r\n        const cartList = [...state.cart.filter((v) => v.id !== newProduct.id), finalProduct];\r\n        return {\r\n          ...state,\r\n          cart: cartList,\r\n        };\r\n      }\r\n      return {\r\n        ...state,\r\n        cart: [...state.cart, newProduct],\r\n      };\r\n    }\r\n\r\n    case ADD_ITEM_QUANTITY_REQUEST: {\r\n      const index = state.cart.findIndex((cart) => cart.id === action.data.id);\r\n      const product = state.cart[index];\r\n      let quantity = product.quantity;\r\n      quantity < 100 ? (quantity += 1) : 99;\r\n      const cart = [...state.cart];\r\n      cart[index] = { ...product, quantity };\r\n\r\n      return {\r\n        ...state,\r\n        cart,\r\n      };\r\n    }\r\n\r\n    case SUBSTRACT_ITEM_QUANTITY_REQUEST: {\r\n      const index = state.cart.findIndex((cart) => cart.id === action.data.id);\r\n      const product = state.cart[index];\r\n      let quantity = product.quantity;\r\n      quantity > 1 ? (quantity -= 1) : 1;\r\n      const cart = [...state.cart];\r\n      cart[index] = { ...product, quantity };\r\n      return {\r\n        ...state,\r\n        cart,\r\n      };\r\n    }\r\n\r\n    case CLEAR_CART_REQUEST: {\r\n      return {\r\n        ...state,\r\n        cart: [],\r\n      };\r\n    }\r\n\r\n    case GET_SHOP_TABLE_ID: {\r\n      return {\r\n        ...state,\r\n        shopId: action.data.shopId,\r\n        tableId: action.data.tableId,\r\n      };\r\n    }\r\n\r\n    default: {\r\n      return { ...state };\r\n    }\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}