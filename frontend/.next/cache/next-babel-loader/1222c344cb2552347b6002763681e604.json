{"ast":null,"code":"import axios from 'axios';\nexport const onClickPayment = (type, product, isLoggedIn, session, cart, ShopId, TableId) => {\n  const onWindowScroll = () => {\n    window.scrollTo({\n      top: 0\n    });\n  };\n\n  let originData;\n  let amount = 0;\n  let name;\n\n  if (isLoggedIn) {\n    if (type == 'single') {\n      originData = {\n        UserId: session.id,\n        UserName: session.name,\n        ProductId: product.id,\n        ShopId: product.Shop.id,\n        price: product.discount ? product.price * (100 - product.discount) * 0.01 * product.quantity : product.price * product.quantity,\n        quantity: product.quantity,\n        ShopName: product.Shop.name,\n        ProductTitle: product.title\n      };\n    } else {\n      cart.map(product => amount += product.Discount ? product.price * (100 - product.Discount.rate) * 0.01 * product.quantity : product.price * product.quantity);\n      name = cart.length > 1 ? `${product.title} 외 ${cart.length - 1} 건` : product.title;\n      originData = cart.map(product => {\n        return {\n          ProductId: product.id,\n          ShopId: product.Shop.id,\n          UserId: session.id,\n          UserName: session.name,\n          price: product.Discount ? product.price * (100 - product.Discount.rate) * 0.01 : product.price,\n          quantity: product.quantity,\n          ShopName: product.Shop.name,\n          ProductTitle: product.title\n        };\n      });\n    }\n\n    const custom_data = JSON.stringify(type == 'single' ? [originData] : originData);\n\n    if (IMP !== null) {\n      onWindowScroll();\n      IMP.init(process.env.IAMPORT_KEY);\n      const today = Date.now();\n      IMP.request_pay({\n        pay_method: 'card',\n        name: type !== 'cart' ? product.title : name,\n        Merchant_uid: 'uid' + today,\n        amount: type !== 'cart' ? product.Discount ? product.price * (100 - product.Discount.rate) * 0.01 * product.quantity : product.price * product.quantity : amount,\n        custom_data\n      }, callback);\n    }\n\n    const callback = async response => {\n      const {\n        success,\n        merchant_uid,\n        error_msg\n      } = response;\n\n      if (success) {\n        axios.post(`${process.env.BACKEND_IP}/payments/complete`, {\n          data: response\n        }).then(res => {\n          console.log(res);\n\n          if (type == 'cart') {\n            return router.push(TableId == undefined ? `/menu/${ShopId}` : `/menu/${ShopId}/${TableId}`);\n          }\n        }).catch(err => {\n          console.error(err);\n        });\n      } else {\n        alert(`결제 실패: ${error_msg}`);\n      }\n    };\n  } else {\n    alert('error');\n  }\n};","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/dev/project1/frontend/components/Generalui/Payment.js"],"names":["axios","onClickPayment","type","product","isLoggedIn","session","cart","ShopId","TableId","onWindowScroll","window","scrollTo","top","originData","amount","name","UserId","id","UserName","ProductId","Shop","price","discount","quantity","ShopName","ProductTitle","title","map","Discount","rate","length","custom_data","JSON","stringify","IMP","init","process","env","IAMPORT_KEY","today","Date","now","request_pay","pay_method","Merchant_uid","callback","response","success","merchant_uid","error_msg","post","BACKEND_IP","data","then","res","console","log","router","push","undefined","catch","err","error","alert"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nexport const onClickPayment = (\n  type,\n  product,\n  isLoggedIn,\n  session,\n  cart,\n  ShopId,\n  TableId\n) => {\n  const onWindowScroll = () => {\n    window.scrollTo({ top: 0 });\n  };\n\n  let originData;\n  let amount = 0;\n  let name;\n  if (isLoggedIn) {\n    if (type == 'single') {\n      originData = {\n        UserId: session.id,\n        UserName: session.name,\n        ProductId: product.id,\n        ShopId: product.Shop.id,\n        price: product.discount\n          ? product.price * (100 - product.discount) * 0.01 * product.quantity\n          : product.price * product.quantity,\n        quantity: product.quantity,\n        ShopName: product.Shop.name,\n        ProductTitle: product.title,\n      };\n    } else {\n      cart.map(\n        (product) =>\n          (amount += product.Discount\n            ? product.price *\n              (100 - product.Discount.rate) *\n              0.01 *\n              product.quantity\n            : product.price * product.quantity)\n      );\n      name =\n        cart.length > 1\n          ? `${product.title} 외 ${cart.length - 1} 건`\n          : product.title;\n      originData = cart.map((product) => {\n        return {\n          ProductId: product.id,\n          ShopId: product.Shop.id,\n          UserId: session.id,\n          UserName: session.name,\n          price: product.Discount\n            ? product.price * (100 - product.Discount.rate) * 0.01\n            : product.price,\n          quantity: product.quantity,\n          ShopName: product.Shop.name,\n          ProductTitle: product.title,\n        };\n      });\n    }\n\n    const custom_data = JSON.stringify(\n      type == 'single' ? [originData] : originData\n    );\n\n    if (IMP !== null) {\n      onWindowScroll();\n      IMP.init(process.env.IAMPORT_KEY);\n      const today = Date.now();\n      IMP.request_pay(\n        {\n          pay_method: 'card',\n          name: type !== 'cart' ? product.title : name,\n          Merchant_uid: 'uid' + today,\n          amount:\n            type !== 'cart'\n              ? product.Discount\n                ? product.price *\n                  (100 - product.Discount.rate) *\n                  0.01 *\n                  product.quantity\n                : product.price * product.quantity\n              : amount,\n          custom_data,\n        },\n        callback\n      );\n    }\n    const callback = async (response) => {\n      const { success, merchant_uid, error_msg } = response;\n      if (success) {\n        axios\n          .post(`${process.env.BACKEND_IP}/payments/complete`, {\n            data: response,\n          })\n          .then((res) => {\n            console.log(res);\n            if (type == 'cart') {\n              return router.push(\n                TableId == undefined\n                  ? `/menu/${ShopId}`\n                  : `/menu/${ShopId}/${TableId}`\n              );\n            }\n          })\n          .catch((err) => {\n            console.error(err);\n          });\n      } else {\n        alert(`결제 실패: ${error_msg}`);\n      }\n    };\n  } else {\n    alert('error');\n  }\n};\n"]},"metadata":{},"sourceType":"module"}