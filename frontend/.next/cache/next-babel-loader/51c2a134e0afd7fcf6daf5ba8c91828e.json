{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport { Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux'; // import { PAYMENT_REQUEST } from \"../reducers/payment\";\n\nimport axios from 'axios';\n\nconst Import = ({\n  shopId,\n  amount\n}) => {\n  const dispatch = useDispatch();\n  const {\n    session\n  } = useSelector(state => state.user);\n  const {\n    0: IMP,\n    1: setIMP\n  } = useState(null);\n  useEffect(() => {\n    const {\n      IMP\n    } = window;\n    setIMP(IMP);\n  }, []);\n};\n\nexport default Import;\nexport const onClickPayment = () => {\n  if (IMP !== null) {\n    IMP.init('imp37098043');\n    IMP.request_pay({\n      pg: 'kakao',\n      // version 1.1.0부터 지원.\n      pay_method: 'card',\n      merchant_uid: 'shopId' + new Date().getTime(),\n      name: 'shopId' + new Date().getTime(),\n      amount: 1,\n      buyer_email: 'session.email',\n      buyer_name: 'session.name',\n      buyer_tel: 'session.phone',\n      buyer_addr: '서울특별시 강남구 삼성동',\n      buyer_postcode: '123-456'\n    }, callback);\n  }\n};\n\nconst callback = async response => {\n  const {\n    success,\n    merchant_uid,\n    error_msg\n  } = response;\n\n  if (success) {\n    axios // .post(`${hostIp}/payments/complete`, { data: response })\n    .post('http://127.0.0.1:3065/payments/complete', {\n      data: response\n    }).then(() => {\n      dispatch({\n        type: PAYMENT_SUCCESS\n      }, {\n        data: response\n      });\n    }).catch(e => {\n      dispatch({\n        type: PAYMENT_FAILURE\n      }, {\n        error: error_msg\n      });\n      console.log(e);\n    });\n  } else {\n    alert(`결제 실패: ${error_msg}`);\n  }\n};","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/components/Generalui/Payment.js"],"names":["useState","useEffect","Button","useDispatch","useSelector","axios","Import","shopId","amount","dispatch","session","state","user","IMP","setIMP","window","onClickPayment","init","request_pay","pg","pay_method","merchant_uid","Date","getTime","name","buyer_email","buyer_name","buyer_tel","buyer_addr","buyer_postcode","callback","response","success","error_msg","post","data","then","type","PAYMENT_SUCCESS","catch","e","PAYMENT_FAILURE","error","console","log","alert"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAAwB;AACrC,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AAEA,QAAM;AAAEO,IAAAA;AAAF,MAAcN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA/B;AAEA,QAAM;AAAA,OAACC,GAAD;AAAA,OAAMC;AAAN,MAAgBd,QAAQ,CAAC,IAAD,CAA9B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM;AAAEY,MAAAA;AAAF,QAAUE,MAAhB;AACAD,IAAAA,MAAM,CAACD,GAAD,CAAN;AACD,GAHQ,EAGN,EAHM,CAAT;AAID,CAXD;;AAaA,eAAeP,MAAf;AAEA,OAAO,MAAMU,cAAc,GAAG,MAAM;AAClC,MAAIH,GAAG,KAAK,IAAZ,EAAkB;AAChBA,IAAAA,GAAG,CAACI,IAAJ,CAAS,aAAT;AACAJ,IAAAA,GAAG,CAACK,WAAJ,CACE;AACEC,MAAAA,EAAE,EAAE,OADN;AACe;AACbC,MAAAA,UAAU,EAAE,MAFd;AAGEC,MAAAA,YAAY,EAAE,WAAW,IAAIC,IAAJ,GAAWC,OAAX,EAH3B;AAIEC,MAAAA,IAAI,EAAE,WAAW,IAAIF,IAAJ,GAAWC,OAAX,EAJnB;AAKEf,MAAAA,MAAM,EAAE,CALV;AAMEiB,MAAAA,WAAW,EAAE,eANf;AAOEC,MAAAA,UAAU,EAAE,cAPd;AAQEC,MAAAA,SAAS,EAAE,eARb;AASEC,MAAAA,UAAU,EAAE,eATd;AAUEC,MAAAA,cAAc,EAAE;AAVlB,KADF,EAaEC,QAbF;AAeD;AACF,CAnBM;;AAqBP,MAAMA,QAAQ,GAAG,MAAOC,QAAP,IAAoB;AACnC,QAAM;AAAEC,IAAAA,OAAF;AAAWX,IAAAA,YAAX;AAAyBY,IAAAA;AAAzB,MAAuCF,QAA7C;;AACA,MAAIC,OAAJ,EAAa;AACX3B,IAAAA,KAAK,CACH;AADG,KAEF6B,IAFH,CAEQ,yCAFR,EAEmD;AAAEC,MAAAA,IAAI,EAAEJ;AAAR,KAFnD,EAGGK,IAHH,CAGQ,MAAM;AACV3B,MAAAA,QAAQ,CAAC;AAAE4B,QAAAA,IAAI,EAAEC;AAAR,OAAD,EAA4B;AAAEH,QAAAA,IAAI,EAAEJ;AAAR,OAA5B,CAAR;AACD,KALH,EAMGQ,KANH,CAMUC,CAAD,IAAO;AACZ/B,MAAAA,QAAQ,CAAC;AAAE4B,QAAAA,IAAI,EAAEI;AAAR,OAAD,EAA4B;AAAEC,QAAAA,KAAK,EAAET;AAAT,OAA5B,CAAR;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAYJ,CAAZ;AACD,KATH;AAUD,GAXD,MAWO;AACLK,IAAAA,KAAK,CAAE,UAASZ,SAAU,EAArB,CAAL;AACD;AACF,CAhBD","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { Button } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// import { PAYMENT_REQUEST } from \"../reducers/payment\";\r\nimport axios from 'axios';\r\n\r\nconst Import = ({ shopId, amount }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { session } = useSelector((state) => state.user);\r\n\r\n  const [IMP, setIMP] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const { IMP } = window;\r\n    setIMP(IMP);\r\n  }, []);\r\n};\r\n\r\nexport default Import;\r\n\r\nexport const onClickPayment = () => {\r\n  if (IMP !== null) {\r\n    IMP.init('imp37098043');\r\n    IMP.request_pay(\r\n      {\r\n        pg: 'kakao', // version 1.1.0부터 지원.\r\n        pay_method: 'card',\r\n        merchant_uid: 'shopId' + new Date().getTime(),\r\n        name: 'shopId' + new Date().getTime(),\r\n        amount: 1,\r\n        buyer_email: 'session.email',\r\n        buyer_name: 'session.name',\r\n        buyer_tel: 'session.phone',\r\n        buyer_addr: '서울특별시 강남구 삼성동',\r\n        buyer_postcode: '123-456',\r\n      },\r\n      callback,\r\n    );\r\n  }\r\n};\r\n\r\nconst callback = async (response) => {\r\n  const { success, merchant_uid, error_msg } = response;\r\n  if (success) {\r\n    axios\r\n      // .post(`${hostIp}/payments/complete`, { data: response })\r\n      .post('http://127.0.0.1:3065/payments/complete', { data: response })\r\n      .then(() => {\r\n        dispatch({ type: PAYMENT_SUCCESS }, { data: response });\r\n      })\r\n      .catch((e) => {\r\n        dispatch({ type: PAYMENT_FAILURE }, { error: error_msg });\r\n        console.log(e);\r\n      });\r\n  } else {\r\n    alert(`결제 실패: ${error_msg}`);\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}