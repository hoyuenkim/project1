{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst initialState = {\n  products: [],\n  originProducts: [],\n  naviSize: null,\n  TableId: null,\n  isAddingProduct: false,\n  isLoadingCart: false,\n  categories: []\n};\nexport const LOAD_PRODUCTS_REQUEST = 'LOAD_PRODUCTS_REQUEST';\nexport const LOAD_PRODUCTS_SUCCESS = 'LOAD_PRODUCTS_SUCCESS';\nexport const LOAD_PRODUCTS_FAILURE = 'LOAD_PRODUCTS_FAILURE';\nexport const ADD_QUANTITY_REQUEST = 'ADD_QUANTITY_REQUEST';\nexport const ADD_QUANTITY_SUCCESS = 'ADD_QUANTITY_SUCCESS';\nexport const ADD_QUANTITY_FAILURE = 'ADD_QUANTITY_FAILURE';\nexport const SUBSTRACT_QUANTITY_REQUEST = 'SUBSTRACT_QUANTITY_REQUEST';\nexport const SUBSTRACT_QUANTITY_SUCCESS = 'SUBSTRACT_QUANTITY_SUCCESS';\nexport const SUBSTRACT_QUANTITY_FAILURE = 'SUBSTRACT_QUANTITY_FAILURE';\nexport const ADD_PRODUCT_REQUEST = 'ADD_PRODUCT_REQUEST';\nexport const ADD_PRODUCT_SUCCESS = 'ADD_PRODUCT_SUCCESS';\nexport const ADD_PRODUCT_FAILURE = 'ADD_PRODUCT_FAILURE';\nexport const LOAD_CART_REQUEST = 'LOAD_CART_REQUEST';\nexport const LOAD_CART_SUCCESS = 'LOAD_CART_SUCCESS';\nexport const LOAD_CART_FAILURE = 'LOAD_CART_FAILURE';\nexport const INITIATE_QUANTITY_REQUEST = 'INITIATE_QUANTITY_REQUEST';\nexport const GET_NAVIBAR_SIZE = 'GET_NAVIBAR_SIZE';\nexport const SEARCH_PRODUCT_SUCCESS = 'SEARCH_PRODUCT_SUCCESS';\nexport const SELECT_CATEGORY_SUCCESS = 'SELECT_CATEGORY_SUCCESS';\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_NAVIBAR_SIZE:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          naviSize: action.data\n        });\n      }\n\n    case ADD_QUANTITY_SUCCESS:\n      {\n        const index = state.products.findIndex(product => product.id === action.data.id);\n        const product = state.products[index];\n        let quantity = product.quantity;\n        quantity < 100 ? quantity += 1 : 99;\n        const products = [...state.products];\n        products[index] = _objectSpread(_objectSpread({}, product), {}, {\n          quantity\n        });\n        return _objectSpread(_objectSpread({}, state), {}, {\n          products\n        });\n      }\n\n    case SUBSTRACT_QUANTITY_SUCCESS:\n      {\n        const index = state.products.findIndex(product => product.id === action.data.id);\n        const product = state.products[index];\n        let quantity = product.quantity;\n        quantity > 1 ? quantity -= 1 : 1;\n        const products = [...state.products];\n        products[index] = _objectSpread(_objectSpread({}, product), {}, {\n          quantity\n        });\n        return _objectSpread(_objectSpread({}, state), {}, {\n          products\n        });\n      }\n\n    case LOAD_PRODUCTS_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_PRODUCTS_SUCCESS:\n      {\n        if (action.data[0].TableId) {\n          return _objectSpread(_objectSpread({}, state), {}, {\n            products: action.data[0].menus,\n            originProducts: action.data[0].menus,\n            TableId: action.data[0].TableId,\n            categories: action.data[1]\n          });\n        }\n\n        return _objectSpread(_objectSpread({}, state), {}, {\n          originProducts: action.data[0],\n          products: action.data[0],\n          categories: action.data[1]\n        });\n      }\n\n    case LOAD_PRODUCTS_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case ADD_PRODUCT_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case ADD_PRODUCT_SUCCESS:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          products: [action.data, ...state.products]\n        });\n      }\n\n    case ADD_PRODUCT_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_CART_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_CART_SUCCESS:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          cart: [...state.cart, action.data]\n        });\n      }\n\n    case LOAD_CART_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case INITIATE_QUANTITY_REQUEST:\n      {\n        const product = action.data;\n        const index = state.products.findIndex(v => v.id == action.data.id);\n        const products = [...state.products];\n        products[index] = _objectSpread(_objectSpread({}, product), {}, {\n          quantity: 1\n        });\n        return _objectSpread(_objectSpread({}, state), {}, {\n          products\n        });\n      }\n\n    case SEARCH_PRODUCT_SUCCESS:\n      {\n        const filteredProducts = state.originProducts.filter(product => !product.title.indexOf(action.data.text));\n        return _objectSpread(_objectSpread({}, state), {}, {\n          products: filteredProducts\n        });\n      }\n\n    case SELECT_CATEGORY_SUCCESS:\n      {\n        if (action.id == 0) {\n          return _objectSpread(_objectSpread({}, state), {}, {\n            products: [...state.originProducts]\n          });\n        } else if (action.id == -1) {\n          const discountedProduct = state.originProducts.filter(v => {\n            // console.log(v.Discount);\n            return v.Discount !== null;\n          });\n          return _objectSpread(_objectSpread({}, state), {}, {\n            products: discountedProduct\n          });\n        }\n\n        const filteredProducts = state.originProducts.filter(r => r.Category.id == action.id);\n        return _objectSpread(_objectSpread({}, state), {}, {\n          products: filteredProducts\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/reducers/menu.js"],"names":["initialState","products","originProducts","naviSize","TableId","isAddingProduct","isLoadingCart","categories","LOAD_PRODUCTS_REQUEST","LOAD_PRODUCTS_SUCCESS","LOAD_PRODUCTS_FAILURE","ADD_QUANTITY_REQUEST","ADD_QUANTITY_SUCCESS","ADD_QUANTITY_FAILURE","SUBSTRACT_QUANTITY_REQUEST","SUBSTRACT_QUANTITY_SUCCESS","SUBSTRACT_QUANTITY_FAILURE","ADD_PRODUCT_REQUEST","ADD_PRODUCT_SUCCESS","ADD_PRODUCT_FAILURE","LOAD_CART_REQUEST","LOAD_CART_SUCCESS","LOAD_CART_FAILURE","INITIATE_QUANTITY_REQUEST","GET_NAVIBAR_SIZE","SEARCH_PRODUCT_SUCCESS","SELECT_CATEGORY_SUCCESS","reducer","state","action","type","data","index","findIndex","product","id","quantity","menus","cart","v","filteredProducts","filter","title","indexOf","text","discountedProduct","Discount","r","Category"],"mappings":"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","sourcesContent":["const initialState = {\r\n  products: [],\r\n  originProducts: [],\r\n  naviSize: null,\r\n  TableId: null,\r\n  isAddingProduct: false,\r\n  isLoadingCart: false,\r\n  categories: [],\r\n};\r\n\r\nexport const LOAD_PRODUCTS_REQUEST = 'LOAD_PRODUCTS_REQUEST';\r\nexport const LOAD_PRODUCTS_SUCCESS = 'LOAD_PRODUCTS_SUCCESS';\r\nexport const LOAD_PRODUCTS_FAILURE = 'LOAD_PRODUCTS_FAILURE';\r\n\r\nexport const ADD_QUANTITY_REQUEST = 'ADD_QUANTITY_REQUEST';\r\nexport const ADD_QUANTITY_SUCCESS = 'ADD_QUANTITY_SUCCESS';\r\nexport const ADD_QUANTITY_FAILURE = 'ADD_QUANTITY_FAILURE';\r\n\r\nexport const SUBSTRACT_QUANTITY_REQUEST = 'SUBSTRACT_QUANTITY_REQUEST';\r\nexport const SUBSTRACT_QUANTITY_SUCCESS = 'SUBSTRACT_QUANTITY_SUCCESS';\r\nexport const SUBSTRACT_QUANTITY_FAILURE = 'SUBSTRACT_QUANTITY_FAILURE';\r\n\r\nexport const ADD_PRODUCT_REQUEST = 'ADD_PRODUCT_REQUEST';\r\nexport const ADD_PRODUCT_SUCCESS = 'ADD_PRODUCT_SUCCESS';\r\nexport const ADD_PRODUCT_FAILURE = 'ADD_PRODUCT_FAILURE';\r\n\r\nexport const LOAD_CART_REQUEST = 'LOAD_CART_REQUEST';\r\nexport const LOAD_CART_SUCCESS = 'LOAD_CART_SUCCESS';\r\nexport const LOAD_CART_FAILURE = 'LOAD_CART_FAILURE';\r\n\r\nexport const INITIATE_QUANTITY_REQUEST = 'INITIATE_QUANTITY_REQUEST';\r\n\r\nexport const GET_NAVIBAR_SIZE = 'GET_NAVIBAR_SIZE';\r\n\r\nexport const SEARCH_PRODUCT_SUCCESS = 'SEARCH_PRODUCT_SUCCESS';\r\n\r\nexport const SELECT_CATEGORY_SUCCESS = 'SELECT_CATEGORY_SUCCESS';\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_NAVIBAR_SIZE: {\r\n      return {\r\n        ...state,\r\n        naviSize: action.data,\r\n      };\r\n    }\r\n\r\n    case ADD_QUANTITY_SUCCESS: {\r\n      const index = state.products.findIndex((product) => product.id === action.data.id);\r\n      const product = state.products[index];\r\n      let quantity = product.quantity;\r\n      quantity < 100 ? (quantity += 1) : 99;\r\n      const products = [...state.products];\r\n      products[index] = { ...product, quantity };\r\n\r\n      return {\r\n        ...state,\r\n        products,\r\n      };\r\n    }\r\n\r\n    case SUBSTRACT_QUANTITY_SUCCESS: {\r\n      const index = state.products.findIndex((product) => product.id === action.data.id);\r\n      const product = state.products[index];\r\n      let quantity = product.quantity;\r\n      quantity > 1 ? (quantity -= 1) : 1;\r\n      const products = [...state.products];\r\n      products[index] = { ...product, quantity };\r\n      return {\r\n        ...state,\r\n        products,\r\n      };\r\n    }\r\n\r\n    case LOAD_PRODUCTS_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n\r\n    case LOAD_PRODUCTS_SUCCESS: {\r\n      if (action.data[0].TableId) {\r\n        return {\r\n          ...state,\r\n          products: action.data[0].menus,\r\n          originProducts: action.data[0].menus,\r\n          TableId: action.data[0].TableId,\r\n          categories: action.data[1],\r\n        };\r\n      }\r\n      return {\r\n        ...state,\r\n        originProducts: action.data[0],\r\n        products: action.data[0],\r\n        categories: action.data[1],\r\n      };\r\n    }\r\n\r\n    case LOAD_PRODUCTS_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n\r\n    case ADD_PRODUCT_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n\r\n    case ADD_PRODUCT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        products: [action.data, ...state.products],\r\n      };\r\n    }\r\n\r\n    case ADD_PRODUCT_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n\r\n    case LOAD_CART_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n\r\n    case LOAD_CART_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        cart: [...state.cart, action.data],\r\n      };\r\n    }\r\n\r\n    case LOAD_CART_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n\r\n    case INITIATE_QUANTITY_REQUEST: {\r\n      const product = action.data;\r\n      const index = state.products.findIndex((v) => v.id == action.data.id);\r\n      const products = [...state.products];\r\n      products[index] = { ...product, quantity: 1 };\r\n      return {\r\n        ...state,\r\n        products,\r\n      };\r\n    }\r\n\r\n    case SEARCH_PRODUCT_SUCCESS: {\r\n      const filteredProducts = state.originProducts.filter(\r\n        (product) => !product.title.indexOf(action.data.text),\r\n      );\r\n      return { ...state, products: filteredProducts };\r\n    }\r\n\r\n    case SELECT_CATEGORY_SUCCESS: {\r\n      if (action.id == 0) {\r\n        return { ...state, products: [...state.originProducts] };\r\n      } else if (action.id == -1) {\r\n        const discountedProduct = state.originProducts.filter((v) => {\r\n          // console.log(v.Discount);\r\n          return v.Discount !== null;\r\n        });\r\n        return { ...state, products: discountedProduct };\r\n      }\r\n      const filteredProducts = state.originProducts.filter((r) => r.Category.id == action.id);\r\n      return { ...state, products: filteredProducts };\r\n    }\r\n\r\n    default: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}