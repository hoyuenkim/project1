{"ast":null,"code":"import { Form, Input } from \"antd\";\nimport axios from \"axios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst BizcdeForm = ({\n  onChangeBizcode\n}) => {\n  axios.defaults.baseURL = `${process.env.BACKEND_IP}`;\n  return /*#__PURE__*/_jsx(Form.Item, {\n    name: \"bizcode\",\n    validateTrigger: \"onBlur\",\n    rules: [{\n      required: true,\n      message: \"사업자 등록번호를 입력해주세요\"\n    }, () => ({\n      async validator(rule, value) {\n        if (!value || !value.match(/\\d{1}/g) || !value.length === 10) {\n          return Promise.reject(\"형식에 맞지 않은 사업자 등록번호입니다\");\n        } else {\n          function checkBizID(bizID) {\n            var checkID = new Array(1, 3, 7, 1, 3, 7, 1, 3, 5, 1);\n            var tmpBizID,\n                i,\n                chkSum = 0,\n                c2,\n                remander;\n            bizID = bizID.replace(/-/gi, \"\");\n\n            for (i = 0; i <= 7; i++) chkSum += checkID[i] * bizID.charAt(i);\n\n            c2 = \"0\" + checkID[8] * bizID.charAt(8);\n            c2 = c2.substring(c2.length - 2, c2.length);\n            chkSum += Math.floor(c2.charAt(0)) + Math.floor(c2.charAt(1));\n            remander = (10 - chkSum % 10) % 10;\n            if (Math.floor(bizID.charAt(9)) == remander) return true;\n            return false;\n          }\n\n          if (checkBizID(value)) {\n            const result = await axios.post(\"/user/confirm/bizcode\", {\n              bizcode: value\n            });\n\n            if (!result.data) {\n              return Promise.resolve();\n            } else {\n              return Promise.reject(\"이미 존재하는 사업자 등록번호입니다\");\n            }\n          } else {\n            return Promise.reject(\"형식에 맞지 않은 사업자 등록번호입니다\");\n          }\n        }\n      }\n\n    })],\n    children: /*#__PURE__*/_jsx(Input, {\n      prefix: \"* 사업자등록번호\",\n      size: `large`,\n      name: \"bizcode\",\n      onChange: onChangeBizcode\n    })\n  });\n};\n\nexport default BizcdeForm;","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/Dev/project1/frontend/components/Forms/BizcodeForm.js"],"names":["Form","Input","axios","BizcdeForm","onChangeBizcode","defaults","baseURL","process","env","BACKEND_IP","required","message","validator","rule","value","match","length","Promise","reject","checkBizID","bizID","checkID","Array","tmpBizID","i","chkSum","c2","remander","replace","charAt","substring","Math","floor","result","post","bizcode","data","resolve"],"mappings":"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","sourcesContent":["import { Form, Input } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\nconst BizcdeForm = ({ onChangeBizcode }) => {\r\n  axios.defaults.baseURL = `${process.env.BACKEND_IP}`;\r\n  return (\r\n    <Form.Item\r\n      name=\"bizcode\"\r\n      validateTrigger=\"onBlur\"\r\n      rules={[\r\n        {\r\n          required: true,\r\n          message: \"사업자 등록번호를 입력해주세요\",\r\n        },\r\n        () => ({\r\n          async validator(rule, value) {\r\n            if (!value || !value.match(/\\d{1}/g) || !value.length === 10) {\r\n              return Promise.reject(\"형식에 맞지 않은 사업자 등록번호입니다\");\r\n            } else {\r\n              function checkBizID(bizID) {\r\n                var checkID = new Array(1, 3, 7, 1, 3, 7, 1, 3, 5, 1);\r\n                var tmpBizID,\r\n                  i,\r\n                  chkSum = 0,\r\n                  c2,\r\n                  remander;\r\n                bizID = bizID.replace(/-/gi, \"\");\r\n\r\n                for (i = 0; i <= 7; i++) chkSum += checkID[i] * bizID.charAt(i);\r\n                c2 = \"0\" + checkID[8] * bizID.charAt(8);\r\n                c2 = c2.substring(c2.length - 2, c2.length);\r\n                chkSum += Math.floor(c2.charAt(0)) + Math.floor(c2.charAt(1));\r\n                remander = (10 - (chkSum % 10)) % 10;\r\n\r\n                if (Math.floor(bizID.charAt(9)) == remander) return true;\r\n                return false;\r\n              }\r\n              if (checkBizID(value)) {\r\n                const result = await axios.post(\"/user/confirm/bizcode\", {\r\n                  bizcode: value,\r\n                });\r\n                if (!result.data) {\r\n                  return Promise.resolve();\r\n                } else {\r\n                  return Promise.reject(\"이미 존재하는 사업자 등록번호입니다\");\r\n                }\r\n              } else {\r\n                return Promise.reject(\"형식에 맞지 않은 사업자 등록번호입니다\");\r\n              }\r\n            }\r\n          },\r\n        }),\r\n      ]}\r\n    >\r\n      <Input\r\n        prefix={\"* 사업자등록번호\"}\r\n        size={`large`}\r\n        name={\"bizcode\"}\r\n        onChange={onChangeBizcode}\r\n      />\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nexport default BizcdeForm;\r\n"]},"metadata":{},"sourceType":"module"}