{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hoyuen\\\\Documents\\\\project\\\\project1\\\\frontend\\\\pages\\\\user\\\\history.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { List, Avatar, Card, Empty, Rate, DatePicker, Modal, Input, Button, Form } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useChecked, useInput } from '../../components/Generalui/CustomHooks';\nimport NumberFormat from 'react-number-format';\nimport { useEffect, useState } from 'react';\nimport { useWindowSize } from '@react-hook/window-size';\nimport axios from 'axios';\nimport { useRouter } from 'next/router';\nimport { CLIENT_HISTORY_REMOVE_REQUEST, LOAD_PAYMENT_HISTORY_REQUEST, RATING_REQUEST, SEARCH_HISTORY_REQUEST } from '../../reducers/payment';\nconst {\n  RangePicker\n} = DatePicker;\n\nconst History = () => {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const [toggleRating, onToggleRating, setToggleRating] = useChecked(false);\n  const {\n    0: startDate,\n    1: setStartDate\n  } = useState([]);\n  const {\n    0: endDate,\n    1: setEndDate\n  } = useState();\n  const {\n    0: toggleSearch,\n    1: setToggleSearch\n  } = useState(false);\n  const {\n    isLoggedIn,\n    session\n  } = useSelector(state => state.user);\n  const {\n    history\n  } = useSelector(state => state.payment);\n  useEffect(() => {\n    dispatch({\n      type: LOAD_PAYMENT_HISTORY_REQUEST,\n      division: session.division,\n      id: session.id\n    });\n  }, []);\n\n  if (!isLoggedIn) {\n    router.back();\n  }\n\n  const [windowWidth, windowHeight] = useWindowSize();\n\n  const onWindowScroll = () => {\n    window.scrollTo({\n      top: 0\n    });\n  };\n\n  const onChangeDatePicker = e => {\n    const date1 = new Date(e[0]._d);\n    const date2 = new Date(e[1]._d);\n    setStartDate(date1);\n    setEndDate(date2);\n  };\n\n  const onToggleSearch = () => {\n    setToggleSearch(prev => !prev);\n  };\n\n  const [test, onChangeText, setSetextarch] = useInput();\n  const dateFormat = 'YYYY/MM/DD';\n\n  const onFinishSearch = () => {\n    dispatch({\n      type: SEARCH_HISTORY_REQUEST\n    });\n    return setToggleSearch(false);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Modal, {\n    title: 'Search',\n    visible: toggleSearch,\n    onCancel: onToggleSearch,\n    footer: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, __jsx(Form, {\n    onFinish: onFinishSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, __jsx(Input.Search, {\n    style: {\n      verticalAlign: 'middle'\n    },\n    onChange: onChangeText,\n    enterButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }), __jsx(RangePicker, {\n    style: {\n      verticalAlign: 'middle'\n    },\n    format: dateFormat,\n    onChange: onChangeDatePicker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }), __jsx(Button, {\n    htmlType: 'submit',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \"\\uAC80\\uC0C9\"))), history.length === 0 ? __jsx(Card, {\n    style: {\n      height: '100vh'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    style: {\n      marginTop: windowHeight * 0.3,\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, __jsx(Empty, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }), __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, \"\\uAC70\\uB798\\uB0B4\\uC5ED\\uC774 \\uC874\\uC7AC\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4\"))) : __jsx(Card, {\n    extra: __jsx(Button, {\n      onClick: onToggleSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 22\n      }\n    }, \"\\uAC80\\uC0C9\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, __jsx(List, {\n    itemLayout: \"horizontal\",\n    dataSource: history,\n    renderItem: item => {\n      const date = new Date(item.createdAt);\n      const localeDate = date.toLocaleString();\n\n      const onChangeRating = value => {\n        dispatch({\n          type: RATING_REQUEST,\n          data: {\n            PaymentsId: item.id,\n            UserId: session.id,\n            rate: value,\n            ProductId: item.Product.id\n          }\n        });\n      };\n\n      const onClickRemoveHistory = () => {\n        dispatch({\n          type: CLIENT_HISTORY_REMOVE_REQUEST,\n          PaymentId: item.id\n        });\n      };\n\n      return __jsx(List.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }\n      }, __jsx(Card, {\n        style: {\n          width: '100%'\n        },\n        actions: [__jsx(\"div\", {\n          onClick: onClickRemoveHistory,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 31\n          }\n        }, \"\\uACB0\\uC81C\\uCDE8\\uC18C\")],\n        extra: item.status ? '결제완료' : '취소요청',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 19\n        }\n      }, __jsx(List.Item.Meta, {\n        title: __jsx(React.Fragment, null, item.Shop.name, \"_\", item.Product.title, \"_\", localeDate),\n        description: __jsx(React.Fragment, null, __jsx(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 27\n          }\n        }, \"\\uACB0\\uC81C\\uC218\\uB7C9:\", ' ', __jsx(NumberFormat, {\n          value: item.quantity,\n          displayType: 'text',\n          thousandSeparator: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 29\n          }\n        }), \"\\uAC1C, \\uACB0\\uC81C\\uB2E8\\uAC00:\", ' ', __jsx(NumberFormat, {\n          value: item.price,\n          displayType: 'text',\n          thousandSeparator: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 29\n          }\n        }), \"\\uC6D0\"), __jsx(\"h3\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 27\n          }\n        }, \"\\uACB0\\uC81C\\uAE08\\uC561:\", ' ', __jsx(NumberFormat, {\n          value: item.price * item.quantity,\n          displayType: 'text',\n          thousandSeparator: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 29\n          }\n        }), \"\\uC6D0\"), __jsx(Rate, {\n          defaultValue: item.Rating && item.Rating.rate ? item.Rating.rate : null,\n          onChange: onChangeRating,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 27\n          }\n        })),\n        avatar: __jsx(Avatar, {\n          size: 50,\n          shape: \"square\",\n          src: `http://127.0.0.1:3065/uploads/${item.Product.Images[0].url}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }\n      })));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default History;","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/pages/user/history.js"],"names":["List","Avatar","Card","Empty","Rate","DatePicker","Modal","Input","Button","Form","useDispatch","useSelector","useChecked","useInput","NumberFormat","useEffect","useState","useWindowSize","axios","useRouter","CLIENT_HISTORY_REMOVE_REQUEST","LOAD_PAYMENT_HISTORY_REQUEST","RATING_REQUEST","SEARCH_HISTORY_REQUEST","RangePicker","History","dispatch","router","toggleRating","onToggleRating","setToggleRating","startDate","setStartDate","endDate","setEndDate","toggleSearch","setToggleSearch","isLoggedIn","session","state","user","history","payment","type","division","id","back","windowWidth","windowHeight","onWindowScroll","window","scrollTo","top","onChangeDatePicker","e","date1","Date","_d","date2","onToggleSearch","prev","test","onChangeText","setSetextarch","dateFormat","onFinishSearch","verticalAlign","length","height","marginTop","textAlign","item","date","createdAt","localeDate","toLocaleString","onChangeRating","value","data","PaymentsId","UserId","rate","ProductId","Product","onClickRemoveHistory","PaymentId","width","status","Shop","name","title","quantity","price","Rating","Images","url"],"mappings":"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","sourcesContent":["import { List, Avatar, Card, Empty, Rate, DatePicker, Modal, Input, Button, Form } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useChecked, useInput } from '../../components/Generalui/CustomHooks';\r\n\r\nimport NumberFormat from 'react-number-format';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { useWindowSize } from '@react-hook/window-size';\r\nimport axios from 'axios';\r\nimport { useRouter } from 'next/router';\r\nimport {\r\n  CLIENT_HISTORY_REMOVE_REQUEST,\r\n  LOAD_PAYMENT_HISTORY_REQUEST,\r\n  RATING_REQUEST,\r\n  SEARCH_HISTORY_REQUEST,\r\n} from '../../reducers/payment';\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst History = () => {\r\n  const dispatch = useDispatch();\r\n  const router = useRouter();\r\n  const [toggleRating, onToggleRating, setToggleRating] = useChecked(false);\r\n  const [startDate, setStartDate] = useState([]);\r\n  const [endDate, setEndDate] = useState();\r\n  const [toggleSearch, setToggleSearch] = useState(false);\r\n\r\n  const { isLoggedIn, session } = useSelector((state) => state.user);\r\n  const { history } = useSelector((state) => state.payment);\r\n  useEffect(() => {\r\n    dispatch({ type: LOAD_PAYMENT_HISTORY_REQUEST, division: session.division, id: session.id });\r\n  }, []);\r\n\r\n  if (!isLoggedIn) {\r\n    router.back();\r\n  }\r\n\r\n  const [windowWidth, windowHeight] = useWindowSize();\r\n\r\n  const onWindowScroll = () => {\r\n    window.scrollTo({ top: 0 });\r\n  };\r\n\r\n  const onChangeDatePicker = (e) => {\r\n    const date1 = new Date(e[0]._d);\r\n    const date2 = new Date(e[1]._d);\r\n    setStartDate(date1);\r\n    setEndDate(date2);\r\n  };\r\n\r\n  const onToggleSearch = () => {\r\n    setToggleSearch((prev) => !prev);\r\n  };\r\n\r\n  const [test, onChangeText, setSetextarch] = useInput();\r\n\r\n  const dateFormat = 'YYYY/MM/DD';\r\n\r\n  const onFinishSearch = () => {\r\n    dispatch({ type: SEARCH_HISTORY_REQUEST });\r\n    return setToggleSearch(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal title={'Search'} visible={toggleSearch} onCancel={onToggleSearch} footer={null}>\r\n        <Form onFinish={onFinishSearch}>\r\n          <Input.Search style={{ verticalAlign: 'middle' }} onChange={onChangeText} enterButton />\r\n          <RangePicker\r\n            style={{ verticalAlign: 'middle' }}\r\n            format={dateFormat}\r\n            onChange={onChangeDatePicker}\r\n          />\r\n          <Button htmlType={'submit'}>검색</Button>\r\n        </Form>\r\n      </Modal>\r\n\r\n      {history.length === 0 ? (\r\n        <Card style={{ height: '100vh' }}>\r\n          <div style={{ marginTop: windowHeight * 0.3, textAlign: 'center' }}>\r\n            <Empty />\r\n            <h1>거래내역이 존재하지 않습니다</h1>\r\n          </div>\r\n        </Card>\r\n      ) : (\r\n        <Card extra={<Button onClick={onToggleSearch}>검색</Button>}>\r\n          <List\r\n            itemLayout=\"horizontal\"\r\n            dataSource={history}\r\n            renderItem={(item) => {\r\n              const date = new Date(item.createdAt);\r\n              const localeDate = date.toLocaleString();\r\n\r\n              const onChangeRating = (value) => {\r\n                dispatch({\r\n                  type: RATING_REQUEST,\r\n                  data: {\r\n                    PaymentsId: item.id,\r\n                    UserId: session.id,\r\n                    rate: value,\r\n                    ProductId: item.Product.id,\r\n                  },\r\n                });\r\n              };\r\n\r\n              const onClickRemoveHistory = () => {\r\n                dispatch({\r\n                  type: CLIENT_HISTORY_REMOVE_REQUEST,\r\n                  PaymentId: item.id,\r\n                });\r\n              };\r\n\r\n              return (\r\n                <List.Item>\r\n                  <Card\r\n                    style={{ width: '100%' }}\r\n                    actions={[<div onClick={onClickRemoveHistory}>결제취소</div>]}\r\n                    extra={item.status ? '결제완료' : '취소요청'}\r\n                  >\r\n                    <List.Item.Meta\r\n                      title={\r\n                        <>\r\n                          {item.Shop.name}_{item.Product.title}_{localeDate}\r\n                        </>\r\n                      }\r\n                      description={\r\n                        <>\r\n                          <p>\r\n                            결제수량:{' '}\r\n                            <NumberFormat\r\n                              value={item.quantity}\r\n                              displayType={'text'}\r\n                              thousandSeparator={true}\r\n                            />\r\n                            개, 결제단가:{' '}\r\n                            <NumberFormat\r\n                              value={item.price}\r\n                              displayType={'text'}\r\n                              thousandSeparator={true}\r\n                            />\r\n                            원\r\n                          </p>\r\n                          <h3>\r\n                            결제금액:{' '}\r\n                            <NumberFormat\r\n                              value={item.price * item.quantity}\r\n                              displayType={'text'}\r\n                              thousandSeparator={true}\r\n                            />\r\n                            원\r\n                          </h3>\r\n                          <Rate\r\n                            defaultValue={item.Rating && item.Rating.rate ? item.Rating.rate : null}\r\n                            onChange={onChangeRating}\r\n                          />\r\n                        </>\r\n                      }\r\n                      avatar={\r\n                        <Avatar\r\n                          size={50}\r\n                          shape=\"square\"\r\n                          src={`http://127.0.0.1:3065/uploads/${item.Product.Images[0].url}`}\r\n                        />\r\n                      }\r\n                    />\r\n                  </Card>\r\n                </List.Item>\r\n              );\r\n            }}\r\n          />\r\n        </Card>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default History;\r\n"]},"metadata":{},"sourceType":"module"}