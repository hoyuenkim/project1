{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\hoyuen\\\\Documents\\\\project\\\\project1\\\\frontend\\\\components\\\\Generalui\\\\Login.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useCallback } from 'react';\nimport { useRouter } from 'next/router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Input, Button, message } from 'antd';\nimport { MailOutlined, LockOutlined } from '@ant-design/icons';\nimport { UseOnchange } from '../../hooks/UseInput';\nimport { LOG_IN_REQUEST } from '../../reducers/user';\n\nvar Login = function Login() {\n  _s();\n\n  var dispatch = useDispatch();\n  var router = useRouter();\n\n  var _UseOnchange = UseOnchange(),\n      _UseOnchange2 = _slicedToArray(_UseOnchange, 2),\n      email = _UseOnchange2[0],\n      onChangeEmail = _UseOnchange2[1];\n\n  var _UseOnchange3 = UseOnchange(),\n      _UseOnchange4 = _slicedToArray(_UseOnchange3, 2),\n      password = _UseOnchange4[0],\n      onChangePassword = _UseOnchange4[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      loginError = _useSelector.loginError;\n\n  var onSubmit = useCallback(function () {\n    dispatch({\n      type: LOG_IN_REQUEST,\n      data: {\n        email: email,\n        password: password\n      }\n    });\n  }, [email, password]);\n  message.config({\n    top: '50%'\n  });\n  useEffect(function () {\n    if (loginError) {\n      message.error(loginError.message);\n    }\n  }, [loginError]);\n  return __jsx(Form, {\n    onFinish: onSubmit,\n    style: {\n      verticalAlign: 'middle'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, __jsx(Form.Item, {\n    name: 'email',\n    rules: [{\n      required: true,\n      message: '이메일을 입력해주세요'\n    }, {\n      type: 'email',\n      message: '형식에 맞지 않는 아이디입니다'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, __jsx(Input, {\n    prefix: __jsx(MailOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 24\n      }\n    }),\n    name: 'email',\n    value: email,\n    onChange: onChangeEmail,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  })), __jsx(Form.Item, {\n    name: 'password',\n    rules: [{\n      required: true,\n      message: '비밀번호를 입력해주세요'\n    }, {\n      pattern: /^[0-9a-zA-Z]{6,12}$/,\n      message: '형식에 맞지 않는 비밀번호입니다'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, __jsx(Input.Password, {\n    name: 'password',\n    value: password,\n    prefix: __jsx(LockOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 19\n      }\n    }),\n    onChange: onChangePassword,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  })), __jsx(Button, {\n    htmlType: 'submit',\n    type: 'primary',\n    width: '100%',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"\\uB85C\\uADF8\\uC778\"));\n};\n\n_s(Login, \"N159lxxmOoTTa5fCMYhaT59GkdA=\", false, function () {\n  return [useDispatch, useRouter, useSelector];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/components/Generalui/Login.js"],"names":["React","useEffect","useCallback","useRouter","useDispatch","useSelector","Form","Input","Button","message","MailOutlined","LockOutlined","UseOnchange","LOG_IN_REQUEST","Login","dispatch","router","email","onChangeEmail","password","onChangePassword","state","user","loginError","onSubmit","type","data","config","top","error","verticalAlign","required","pattern"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Form, Input, Button, message } from 'antd';\r\nimport { MailOutlined, LockOutlined } from '@ant-design/icons';\r\nimport { UseOnchange } from '../../hooks/UseInput';\r\nimport { LOG_IN_REQUEST } from '../../reducers/user';\r\n\r\nconst Login = () => {\r\n  const dispatch = useDispatch();\r\n  const router = useRouter();\r\n  const [email, onChangeEmail] = UseOnchange();\r\n  const [password, onChangePassword] = UseOnchange();\r\n\r\n  const { loginError } = useSelector((state) => state.user);\r\n\r\n  const onSubmit = useCallback(() => {\r\n    dispatch({\r\n      type: LOG_IN_REQUEST,\r\n      data: {\r\n        email,\r\n        password,\r\n      },\r\n    });\r\n  }, [email, password]);\r\n\r\n  message.config({ top: '50%' });\r\n\r\n  useEffect(() => {\r\n    if (loginError) {\r\n      message.error(loginError.message);\r\n    }\r\n  }, [loginError]);\r\n\r\n  return (\r\n    <Form onFinish={onSubmit} style={{ verticalAlign: 'middle' }}>\r\n      <Form.Item\r\n        name={'email'}\r\n        rules={[\r\n          { required: true, message: '이메일을 입력해주세요' },\r\n          { type: 'email', message: '형식에 맞지 않는 아이디입니다' },\r\n        ]}\r\n      >\r\n        <Input prefix={<MailOutlined />} name={'email'} value={email} onChange={onChangeEmail} />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name={'password'}\r\n        rules={[\r\n          { required: true, message: '비밀번호를 입력해주세요' },\r\n          { pattern: /^[0-9a-zA-Z]{6,12}$/, message: '형식에 맞지 않는 비밀번호입니다' },\r\n        ]}\r\n      >\r\n        <Input.Password\r\n          name={'password'}\r\n          value={password}\r\n          prefix={<LockOutlined />}\r\n          onChange={onChangePassword}\r\n        />\r\n      </Form.Item>\r\n\r\n      <Button htmlType={'submit'} type={'primary'} width={'100%'}>\r\n        로그인\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}