{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\hoyuen\\\\Documents\\\\project\\\\project1\\\\frontend\\\\pages\\\\shop\\\\admin\\\\product\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { List, Button, Modal, Avatar, Card, Empty, Checkbox } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { ADMIN_PRODUCTS_REQUEST, DELETE_PRODUCT_REQUEST } from '../../../../reducers/shop';\nimport PropTypes from 'prop-types';\nimport EditProduct from '../../../../components/Generalui/EditProduct';\n\nvar Console = function Console() {\n  _s();\n\n  var dispatch = useDispatch();\n  var router = useRouter();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      session = _useSelector.session;\n\n  if (!session || session.division === false) {\n    return router.back();\n  } else {\n    useEffect(function () {\n      dispatch({\n        type: ADMIN_PRODUCTS_REQUEST,\n        ShopId: session.Shops[0].id\n      });\n    }, []);\n  }\n\n  var _useState = useState(false),\n      edit = _useState[0],\n      setEdit = _useState[1];\n\n  var _useState2 = useState(),\n      product = _useState2[0],\n      setProduct = _useState2[1];\n\n  var onToggleEdit = function onToggleEdit(item) {\n    setProduct(item);\n    setEdit(function (prev) {\n      return !prev;\n    });\n  };\n\n  var productIdArray = [];\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.shop;\n  }),\n      products = _useSelector2.products;\n\n  return __jsx(Card, {\n    extra: __jsx(Checkbox, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 18\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, edit && __jsx(Modal, {\n    title: '수정하기',\n    visible: edit,\n    onCancel: function onCancel() {\n      setEdit(false);\n      setProduct(null);\n    },\n    footer: null,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, __jsx(EditProduct, {\n    product: product,\n    setEdit: setEdit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  })), products ? __jsx(List, {\n    itemLayout: 'horizontal',\n    dataSource: products,\n    renderItem: function renderItem(item) {\n      return __jsx(React.Fragment, null, __jsx(List.Item, {\n        key: item.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      }, __jsx(Card, {\n        activeTabKey: 'test',\n        style: {\n          width: '100%'\n        },\n        actions: [__jsx(\"div\", {\n          onClick: function onClick() {\n            return onToggleEdit(item);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 23\n          }\n        }, \"\\uC218\\uC815\"), __jsx(\"div\", {\n          onClick: function onClick() {\n            var flag = confirm(\"\\uC774 \\uC81C\\uD488\\uC744 \\uC815\\uB9D0\\uB85C \\uC0AD\\uC81C\\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\");\n\n            if (!flag) {\n              return false;\n            } else {\n              dispatch({\n                type: DELETE_PRODUCT_REQUEST,\n                id: item.id\n              });\n            }\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 23\n          }\n        }, \"\\uC0AD\\uC81C\")],\n        extra: __jsx(Checkbox, {\n          onChange: function onChange(e) {\n            var result = productIdArray.findIndex(item.id);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 28\n          }\n        }),\n        title: item.title,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 19\n        }\n      }, __jsx(List.Item.Meta, {\n        avatar: __jsx(Avatar, {\n          src: item.Images[0] && \"http://127.0.0.1:3065/uploads/\".concat(item.Images[0].url),\n          shape: 'square',\n          size: 'large',\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }\n        }),\n        description: __jsx(React.Fragment, null, __jsx(\"p\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 27\n          }\n        }, item.price)),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }\n      }))));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }) : __jsx(React.Fragment, null, __jsx(Empty, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  })));\n};\n\n_s(Console, \"3c7ZBhDKNIEs2tdWkWpvOIz8pRI=\", false, function () {\n  return [useDispatch, useRouter, useSelector, useSelector];\n});\n\n_c = Console;\nConsole.protoType = {\n  productList: PropTypes.object.isRequired\n};\nexport default Console;\n\nvar _c;\n\n$RefreshReg$(_c, \"Console\");","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/pages/shop/admin/product/index.js"],"names":["List","Button","Modal","Avatar","Card","Empty","Checkbox","useDispatch","useSelector","useEffect","useState","useRouter","ADMIN_PRODUCTS_REQUEST","DELETE_PRODUCT_REQUEST","PropTypes","EditProduct","Console","dispatch","router","state","user","session","division","back","type","ShopId","Shops","id","edit","setEdit","product","setProduct","onToggleEdit","item","prev","productIdArray","shop","products","width","flag","confirm","e","result","findIndex","title","Images","url","price","protoType","productList","object","isRequired"],"mappings":"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","sourcesContent":["import { List, Button, Modal, Avatar, Card, Empty, Checkbox } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect, useState } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport { ADMIN_PRODUCTS_REQUEST, DELETE_PRODUCT_REQUEST } from '../../../../reducers/shop';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport EditProduct from '../../../../components/Generalui/EditProduct';\r\n\r\nconst Console = () => {\r\n  const dispatch = useDispatch();\r\n  const router = useRouter();\r\n  const { session } = useSelector((state) => state.user);\r\n  if (!session || session.division === false) {\r\n    return router.back();\r\n  } else {\r\n    useEffect(() => {\r\n      dispatch({ type: ADMIN_PRODUCTS_REQUEST, ShopId: session.Shops[0].id });\r\n    }, []);\r\n  }\r\n\r\n  const [edit, setEdit] = useState(false);\r\n  const [product, setProduct] = useState();\r\n\r\n  const onToggleEdit = (item) => {\r\n    setProduct(item);\r\n    setEdit((prev) => !prev);\r\n  };\r\n\r\n  const productIdArray = [];\r\n\r\n  \r\n\r\n  const { products } = useSelector((state) => state.shop);\r\n\r\n  return (\r\n    <Card extra={<Checkbox />}>\r\n      {edit && (\r\n        <Modal\r\n          title={'수정하기'}\r\n          visible={edit}\r\n          onCancel={() => {\r\n            setEdit(false);\r\n            setProduct(null);\r\n          }}\r\n          footer={null}\r\n        >\r\n          <EditProduct product={product} setEdit={setEdit} />\r\n        </Modal>\r\n      )}\r\n      {products ? (\r\n        <List\r\n          itemLayout={'horizontal'}\r\n          dataSource={products}\r\n          renderItem={(item) => {\r\n            return (\r\n              <>\r\n                <List.Item key={item.id}>\r\n                  <Card\r\n                    activeTabKey={'test'}\r\n                    style={{ width: '100%' }}\r\n                    actions={[\r\n                      <div onClick={() => onToggleEdit(item)}>수정</div>,\r\n                      <div\r\n                        onClick={() => {\r\n                          const flag = confirm(`이 제품을 정말로 삭제하시겠습니까?`);\r\n                          if (!flag) {\r\n                            return false;\r\n                          } else {\r\n                            dispatch({ type: DELETE_PRODUCT_REQUEST, id: item.id });\r\n                          }\r\n                        }}\r\n                      >\r\n                        삭제\r\n                      </div>,\r\n                    ]}\r\n                    extra={<Checkbox onChange={(e) => {\r\n                      const result = productIdArray.findIndex(item.id)\r\n                    }} />}\r\n                    title={item.title}\r\n                  >\r\n                    <List.Item.Meta\r\n                      avatar={\r\n                        <Avatar\r\n                          src={\r\n                            item.Images[0] && `http://127.0.0.1:3065/uploads/${item.Images[0].url}`\r\n                          }\r\n                          shape={'square'}\r\n                          size={'large'}\r\n                        />\r\n                      }\r\n                      description={\r\n                        <>\r\n                          <p>{item.price}</p>\r\n                        </>\r\n                      }\r\n                    />\r\n                  </Card>\r\n                </List.Item>\r\n              </>\r\n            );\r\n          }}\r\n        />\r\n      ) : (\r\n        <>\r\n          <Empty />\r\n        </>\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nConsole.protoType = {\r\n  productList: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Console;\r\n"]},"metadata":{},"sourceType":"module"}