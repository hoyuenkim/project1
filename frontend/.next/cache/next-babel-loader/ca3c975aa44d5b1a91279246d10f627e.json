{"ast":null,"code":"import { fork, takeEvery, all, put, call, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOAD_PAYMENT_HISTORY_FAILURE, LOAD_PAYMENT_HISTORY_REQUEST, LOAD_PAYMENT_HISTORY_SUCCESS, RATING_FAILURE, RATING_SUCCESS, RATING_REQUEST } from '../reducers/payment';\n\nfunction paymentHistoryAPI(data) {\n  console.log('api call');\n  return axios.post('/payments/history/load', {\n    id: data.id\n  });\n}\n\nfunction* paymentHistory(data) {\n  try {\n    const result = yield call(paymentHistoryAPI, data);\n    yield put({\n      type: LOAD_PAYMENT_HISTORY_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    yield put({\n      type: LOAD_PAYMENT_HISTORY_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchPaymentHistory() {\n  yield takeLatest(LOAD_PAYMENT_HISTORY_REQUEST, paymentHistory);\n}\n\nfunction ratingAPI(data) {\n  return axios.post('/payments/rating', {\n    PaymentsId: data.PaymentsId,\n    UserId: data.UserId,\n    rate: data.rate\n  });\n}\n\nfunction* rating(data) {\n  console.log(data);\n\n  try {\n    const result = yield call(ratingAPI, data);\n    yield put({\n      type: RATING_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.log(e);\n    yield put({\n      type: RATING_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchRating() {\n  yield takeLatest(RATING_REQUEST, rating);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchPaymentHistory), fork(watchRating)]);\n}","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/sagas/payment.js"],"names":["fork","takeEvery","all","put","call","takeLatest","axios","LOAD_PAYMENT_HISTORY_FAILURE","LOAD_PAYMENT_HISTORY_REQUEST","LOAD_PAYMENT_HISTORY_SUCCESS","RATING_FAILURE","RATING_SUCCESS","RATING_REQUEST","paymentHistoryAPI","data","console","log","post","id","paymentHistory","result","type","e","error","watchPaymentHistory","ratingAPI","PaymentsId","UserId","rate","rating","watchRating","userSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,SAAf,EAA0BC,GAA1B,EAA+BC,GAA/B,EAAoCC,IAApC,EAA0CC,UAA1C,QAA4D,oBAA5D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SACEC,4BADF,EAEEC,4BAFF,EAGEC,4BAHF,EAIEC,cAJF,EAKEC,cALF,EAMEC,cANF,QAOO,qBAPP;;AASA,SAASC,iBAAT,CAA2BC,IAA3B,EAAiC;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,SAAOV,KAAK,CAACW,IAAN,CAAW,wBAAX,EAAqC;AAAEC,IAAAA,EAAE,EAAEJ,IAAI,CAACI;AAAX,GAArC,CAAP;AACD;;AAED,UAAUC,cAAV,CAAyBL,IAAzB,EAA+B;AAC7B,MAAI;AACF,UAAMM,MAAM,GAAG,MAAMhB,IAAI,CAACS,iBAAD,EAAoBC,IAApB,CAAzB;AACA,UAAMX,GAAG,CAAC;AACRkB,MAAAA,IAAI,EAAEZ,4BADE;AAERK,MAAAA,IAAI,EAAEM,MAAM,CAACN;AAFL,KAAD,CAAT;AAID,GAND,CAME,OAAOQ,CAAP,EAAU;AACV,UAAMnB,GAAG,CAAC;AAAEkB,MAAAA,IAAI,EAAEd,4BAAR;AAAsCgB,MAAAA,KAAK,EAAED;AAA7C,KAAD,CAAT;AACD;AACF;;AAED,UAAUE,mBAAV,GAAgC;AAC9B,QAAMnB,UAAU,CAACG,4BAAD,EAA+BW,cAA/B,CAAhB;AACD;;AAED,SAASM,SAAT,CAAmBX,IAAnB,EAAyB;AACvB,SAAOR,KAAK,CAACW,IAAN,CAAW,kBAAX,EAA+B;AACpCS,IAAAA,UAAU,EAAEZ,IAAI,CAACY,UADmB;AAEpCC,IAAAA,MAAM,EAAEb,IAAI,CAACa,MAFuB;AAGpCC,IAAAA,IAAI,EAAEd,IAAI,CAACc;AAHyB,GAA/B,CAAP;AAKD;;AAED,UAAUC,MAAV,CAAiBf,IAAjB,EAAuB;AACrBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,MAAI;AACF,UAAMM,MAAM,GAAG,MAAMhB,IAAI,CAACqB,SAAD,EAAYX,IAAZ,CAAzB;AACA,UAAMX,GAAG,CAAC;AAAEkB,MAAAA,IAAI,EAAEV,cAAR;AAAwBG,MAAAA,IAAI,EAAEM,MAAM,CAACN;AAArC,KAAD,CAAT;AACD,GAHD,CAGE,OAAOQ,CAAP,EAAU;AACVP,IAAAA,OAAO,CAACC,GAAR,CAAYM,CAAZ;AAEA,UAAMnB,GAAG,CAAC;AAAEkB,MAAAA,IAAI,EAAEX,cAAR;AAAwBa,MAAAA,KAAK,EAAED;AAA/B,KAAD,CAAT;AACD;AACF;;AAED,UAAUQ,WAAV,GAAwB;AACtB,QAAMzB,UAAU,CAACO,cAAD,EAAiBiB,MAAjB,CAAhB;AACD;;AAED,eAAe,UAAUE,QAAV,GAAqB;AAClC,QAAM7B,GAAG,CAAC,CAACF,IAAI,CAACwB,mBAAD,CAAL,EAA4BxB,IAAI,CAAC8B,WAAD,CAAhC,CAAD,CAAT;AACD","sourcesContent":["import { fork, takeEvery, all, put, call, takeLatest } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\n\r\nimport {\r\n  LOAD_PAYMENT_HISTORY_FAILURE,\r\n  LOAD_PAYMENT_HISTORY_REQUEST,\r\n  LOAD_PAYMENT_HISTORY_SUCCESS,\r\n  RATING_FAILURE,\r\n  RATING_SUCCESS,\r\n  RATING_REQUEST,\r\n} from '../reducers/payment';\r\n\r\nfunction paymentHistoryAPI(data) {\r\n  console.log('api call');\r\n  return axios.post('/payments/history/load', { id: data.id });\r\n}\r\n\r\nfunction* paymentHistory(data) {\r\n  try {\r\n    const result = yield call(paymentHistoryAPI, data);\r\n    yield put({\r\n      type: LOAD_PAYMENT_HISTORY_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    yield put({ type: LOAD_PAYMENT_HISTORY_FAILURE, error: e });\r\n  }\r\n}\r\n\r\nfunction* watchPaymentHistory() {\r\n  yield takeLatest(LOAD_PAYMENT_HISTORY_REQUEST, paymentHistory);\r\n}\r\n\r\nfunction ratingAPI(data) {\r\n  return axios.post('/payments/rating', {\r\n    PaymentsId: data.PaymentsId,\r\n    UserId: data.UserId,\r\n    rate: data.rate,\r\n  });\r\n}\r\n\r\nfunction* rating(data) {\r\n  console.log(data);\r\n  try {\r\n    const result = yield call(ratingAPI, data);\r\n    yield put({ type: RATING_SUCCESS, data: result.data });\r\n  } catch (e) {\r\n    console.log(e);\r\n\r\n    yield put({ type: RATING_FAILURE, error: e });\r\n  }\r\n}\r\n\r\nfunction* watchRating() {\r\n  yield takeLatest(RATING_REQUEST, rating);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([fork(watchPaymentHistory), fork(watchRating)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}