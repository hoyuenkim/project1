{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport producer from \"immer\";\nconst initialState = {\n  cart: [],\n  isLoadingCart: false,\n  isRemoveingCart: false,\n  ShopId: undefined,\n  TableId: undefined\n};\nexport const LOAD_CART_REQUEST = \"LOAD_CART_REQUEST\";\nexport const LOAD_CART_SUCCESS = \"LOAD_CART_SUCCESS\";\nexport const LOAD_CART_FAILURE = \"LOAD_CART_FAILURE\";\nexport const REMOVE_ITEM_REQUEST = \"REMOVE_ITEM_REQUEST\";\nexport const REMOVE_ITEM_SUCCESS = \"REMOVE_ITEM_SUCCESS\";\nexport const REMOVE_ITEM_FAILURE = \"REMOVE_ITEM_FAILURE\";\nexport const ADD_ITEM_QUANTITY_REQUEST = \"ADD_ITEM_QUANTITY_REQUEST\";\nexport const SUBSTRACT_ITEM_QUANTITY_REQUEST = \"SUBSTRACT_ITEM_QUANTITY_REQUEST\";\nexport const ADD_CART_ITEM_REQUEST = \"ADD_CART_ITEM_REQUEST\";\nexport const REMOVE_CART_ITEM_REQUEST = \"REMOVE_CART_ITEM_REQUEST\";\nexport const CLEAR_CART_REQUEST = \"CLEAR_CART_REQUEST\";\nexport const GET_SHOP_TABLE_ID = \"GET_SHOP_TABLE_ID\";\nexport const SOLD_CART_SUCCESS = \"SOLD_CART_SUCCESS\";\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_CART_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_CART_SUCCESS:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          cart: [...state.cart, action.data]\n        });\n      }\n\n    case LOAD_CART_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case REMOVE_ITEM_REQUEST:\n      {\n        const items = state.cart.filter(item => item.id !== action.id);\n        return _objectSpread(_objectSpread({}, state), {}, {\n          cart: [...items]\n        });\n      }\n\n    case ADD_CART_ITEM_REQUEST:\n      {\n        const newProduct = action.product;\n        const productIndex = state.cart.findIndex(v => v.id === newProduct.id);\n\n        if (productIndex !== -1) {\n          const formerProduct = state.cart[productIndex];\n\n          const finalProduct = _objectSpread(_objectSpread({}, formerProduct), {}, {\n            quantity: formerProduct.quantity + newProduct.quantity\n          });\n\n          const cartList = [...state.cart.filter(v => v.id !== newProduct.id), finalProduct];\n          return _objectSpread(_objectSpread({}, state), {}, {\n            cart: cartList\n          });\n        }\n\n        return _objectSpread(_objectSpread({}, state), {}, {\n          cart: [...state.cart, newProduct]\n        });\n      }\n\n    case ADD_ITEM_QUANTITY_REQUEST:\n      {\n        const index = state.cart.findIndex(cart => cart.id == action.data.id);\n        const product = state.cart[index];\n        let quantity = product.quantity;\n        const stock = product.stock;\n        stock > quantity ? quantity += 1 : stock - 1;\n        const cart = [...state.cart];\n        cart[index] = _objectSpread(_objectSpread({}, product), {}, {\n          quantity\n        });\n        return _objectSpread(_objectSpread({}, state), {}, {\n          cart\n        });\n      }\n\n    case SUBSTRACT_ITEM_QUANTITY_REQUEST:\n      {\n        const index = state.cart.findIndex(cart => cart.id === action.data.id);\n        const product = state.cart[index];\n        let quantity = product.quantity;\n        quantity > 1 ? quantity -= 1 : 1;\n        const cart = [...state.cart];\n        cart[index] = _objectSpread(_objectSpread({}, product), {}, {\n          quantity\n        });\n        return _objectSpread(_objectSpread({}, state), {}, {\n          cart\n        });\n      }\n\n    case CLEAR_CART_REQUEST:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          cart: []\n        });\n      }\n\n    case GET_SHOP_TABLE_ID:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          ShopId: action.data.ShopId,\n          TableId: action.data.TableId\n        });\n      }\n\n    case SOLD_CART_SUCCESS:\n      {\n        const index = state.cart.findIndex(v => v.id === action.data.id);\n        const product = state.cart[index];\n        let stock = product.stock;\n        stock = stock - action.data.quantity;\n        const cart = [...state.cart];\n        cart[index] = _objectSpread(_objectSpread({}, product), {}, {\n          quantity\n        });\n        return _objectSpread(_objectSpread({}, state), {}, {\n          cart\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/Dev/project1/frontend/reducers/cart.js"],"names":["producer","initialState","cart","isLoadingCart","isRemoveingCart","ShopId","undefined","TableId","LOAD_CART_REQUEST","LOAD_CART_SUCCESS","LOAD_CART_FAILURE","REMOVE_ITEM_REQUEST","REMOVE_ITEM_SUCCESS","REMOVE_ITEM_FAILURE","ADD_ITEM_QUANTITY_REQUEST","SUBSTRACT_ITEM_QUANTITY_REQUEST","ADD_CART_ITEM_REQUEST","REMOVE_CART_ITEM_REQUEST","CLEAR_CART_REQUEST","GET_SHOP_TABLE_ID","SOLD_CART_SUCCESS","state","action","type","data","items","filter","item","id","newProduct","product","productIndex","findIndex","v","formerProduct","finalProduct","quantity","cartList","index","stock"],"mappings":"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","sourcesContent":["import producer from \"immer\";\n\nconst initialState = {\n  cart: [],\n  isLoadingCart: false,\n  isRemoveingCart: false,\n  ShopId: undefined,\n  TableId: undefined,\n};\n\nexport const LOAD_CART_REQUEST = \"LOAD_CART_REQUEST\";\nexport const LOAD_CART_SUCCESS = \"LOAD_CART_SUCCESS\";\nexport const LOAD_CART_FAILURE = \"LOAD_CART_FAILURE\";\n\nexport const REMOVE_ITEM_REQUEST = \"REMOVE_ITEM_REQUEST\";\nexport const REMOVE_ITEM_SUCCESS = \"REMOVE_ITEM_SUCCESS\";\nexport const REMOVE_ITEM_FAILURE = \"REMOVE_ITEM_FAILURE\";\n\nexport const ADD_ITEM_QUANTITY_REQUEST = \"ADD_ITEM_QUANTITY_REQUEST\";\nexport const SUBSTRACT_ITEM_QUANTITY_REQUEST = \"SUBSTRACT_ITEM_QUANTITY_REQUEST\";\n\nexport const ADD_CART_ITEM_REQUEST = \"ADD_CART_ITEM_REQUEST\";\nexport const REMOVE_CART_ITEM_REQUEST = \"REMOVE_CART_ITEM_REQUEST\";\n\nexport const CLEAR_CART_REQUEST = \"CLEAR_CART_REQUEST\";\n\nexport const GET_SHOP_TABLE_ID = \"GET_SHOP_TABLE_ID\";\n\nexport const SOLD_CART_SUCCESS = \"SOLD_CART_SUCCESS\";\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_CART_REQUEST: {\n      return {\n        ...state,\n      };\n    }\n\n    case LOAD_CART_SUCCESS: {\n      return {\n        ...state,\n        cart: [...state.cart, action.data],\n      };\n    }\n\n    case LOAD_CART_FAILURE: {\n      return {\n        ...state,\n      };\n    }\n\n    case REMOVE_ITEM_REQUEST: {\n      const items = state.cart.filter((item) => item.id !== action.id);\n      return {\n        ...state,\n        cart: [...items],\n      };\n    }\n\n    case ADD_CART_ITEM_REQUEST: {\n      const newProduct = action.product;\n      const productIndex = state.cart.findIndex((v) => v.id === newProduct.id);\n      if (productIndex !== -1) {\n        const formerProduct = state.cart[productIndex];\n        const finalProduct = {\n          ...formerProduct,\n          quantity: formerProduct.quantity + newProduct.quantity,\n        };\n        const cartList = [...state.cart.filter((v) => v.id !== newProduct.id), finalProduct];\n\n        return {\n          ...state,\n          cart: cartList,\n        };\n      }\n      return {\n        ...state,\n        cart: [...state.cart, newProduct],\n      };\n    }\n\n    case ADD_ITEM_QUANTITY_REQUEST: {\n      const index = state.cart.findIndex((cart) => cart.id == action.data.id);\n      const product = state.cart[index];\n      let quantity = product.quantity;\n      const stock = product.stock;\n      stock > quantity ? (quantity += 1) : stock - 1;\n      const cart = [...state.cart];\n      cart[index] = { ...product, quantity };\n\n      return {\n        ...state,\n        cart,\n      };\n    }\n\n    case SUBSTRACT_ITEM_QUANTITY_REQUEST: {\n      const index = state.cart.findIndex((cart) => cart.id === action.data.id);\n      const product = state.cart[index];\n      let quantity = product.quantity;\n      quantity > 1 ? (quantity -= 1) : 1;\n      const cart = [...state.cart];\n      cart[index] = { ...product, quantity };\n      return {\n        ...state,\n        cart,\n      };\n    }\n\n    case CLEAR_CART_REQUEST: {\n      return {\n        ...state,\n        cart: [],\n      };\n    }\n\n    case GET_SHOP_TABLE_ID: {\n      return {\n        ...state,\n        ShopId: action.data.ShopId,\n        TableId: action.data.TableId,\n      };\n    }\n\n    case SOLD_CART_SUCCESS: {\n      const index = state.cart.findIndex((v) => v.id === action.data.id);\n      const product = state.cart[index];\n      let stock = product.stock;\n      stock = stock - action.data.quantity;\n      const cart = [...state.cart];\n      cart[index] = { ...product, quantity };\n      return { ...state, cart };\n    }\n\n    default: {\n      return { ...state };\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}