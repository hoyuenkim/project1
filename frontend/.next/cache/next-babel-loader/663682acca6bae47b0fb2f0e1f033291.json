{"ast":null,"code":"import axios from \"axios\";\nimport { all, put, fork, call, takeLatest } from \"redux-saga/effects\";\nimport { ADD_PRODUCT_REQUEST, ADD_PRODUCT_SUCCESS, ADD_PRODUCT_FAILURE } from \"../reducers/shop\";\n\nfunction addProductApi(data) {\n  console.log(data);\n  return axios.post(\"/products/add\", data, {\n    withCredentials: true\n  });\n}\n\nfunction* addProduct(action) {\n  try {\n    console.log(action.formData);\n    const result = yield call(addProductApi, action.formData);\n    yield put({\n      type: ADD_PRODUCT_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.log(e);\n    yield put({\n      type: ADD_PRODUCT_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchAddProduct() {\n  yield takeLatest(ADD_PRODUCT_REQUEST, addProduct);\n}\n\nexport default function* productsSaga() {\n  yield all([fork(watchLoadProducts), fork(watchAddProduct)]);\n}","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/sagas/shop.js"],"names":["axios","all","put","fork","call","takeLatest","ADD_PRODUCT_REQUEST","ADD_PRODUCT_SUCCESS","ADD_PRODUCT_FAILURE","addProductApi","data","console","log","post","withCredentials","addProduct","action","formData","result","type","e","error","watchAddProduct","productsSaga","watchLoadProducts"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,UAA/B,QAAiD,oBAAjD;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,EAAmDC,mBAAnD,QAA8E,kBAA9E;;AAEA,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,SAAOV,KAAK,CAACa,IAAN,CAAW,eAAX,EAA4BH,IAA5B,EAAkC;AACvCI,IAAAA,eAAe,EAAE;AADsB,GAAlC,CAAP;AAGD;;AAED,UAAUC,UAAV,CAAqBC,MAArB,EAA6B;AAC3B,MAAI;AACFL,IAAAA,OAAO,CAACC,GAAR,CAAYI,MAAM,CAACC,QAAnB;AACA,UAAMC,MAAM,GAAG,MAAMd,IAAI,CAACK,aAAD,EAAgBO,MAAM,CAACC,QAAvB,CAAzB;AACA,UAAMf,GAAG,CAAC;AAAEiB,MAAAA,IAAI,EAAEZ,mBAAR;AAA6BG,MAAAA,IAAI,EAAEQ,MAAM,CAACR;AAA1C,KAAD,CAAT;AACD,GAJD,CAIE,OAAOU,CAAP,EAAU;AACVT,IAAAA,OAAO,CAACC,GAAR,CAAYQ,CAAZ;AACA,UAAMlB,GAAG,CAAC;AAAEiB,MAAAA,IAAI,EAAEX,mBAAR;AAA6Ba,MAAAA,KAAK,EAAED;AAApC,KAAD,CAAT;AACD;AACF;;AAED,UAAUE,eAAV,GAA4B;AAC1B,QAAMjB,UAAU,CAACC,mBAAD,EAAsBS,UAAtB,CAAhB;AACD;;AAED,eAAe,UAAUQ,YAAV,GAAyB;AACtC,QAAMtB,GAAG,CAAC,CAACE,IAAI,CAACqB,iBAAD,CAAL,EAA0BrB,IAAI,CAACmB,eAAD,CAA9B,CAAD,CAAT;AACD","sourcesContent":["import axios from \"axios\";\r\nimport { all, put, fork, call, takeLatest } from \"redux-saga/effects\";\r\nimport { ADD_PRODUCT_REQUEST, ADD_PRODUCT_SUCCESS, ADD_PRODUCT_FAILURE } from \"../reducers/shop\";\r\n\r\nfunction addProductApi(data) {\r\n  console.log(data);\r\n  return axios.post(\"/products/add\", data, {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* addProduct(action) {\r\n  try {\r\n    console.log(action.formData);\r\n    const result = yield call(addProductApi, action.formData);\r\n    yield put({ type: ADD_PRODUCT_SUCCESS, data: result.data });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({ type: ADD_PRODUCT_FAILURE, error: e });\r\n  }\r\n}\r\n\r\nfunction* watchAddProduct() {\r\n  yield takeLatest(ADD_PRODUCT_REQUEST, addProduct);\r\n}\r\n\r\nexport default function* productsSaga() {\r\n  yield all([fork(watchLoadProducts), fork(watchAddProduct)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}