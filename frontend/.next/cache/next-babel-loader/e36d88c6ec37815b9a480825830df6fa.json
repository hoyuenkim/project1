{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nimport { Menu, Input, Modal, Popover, Space, List, Empty } from \"antd\";\nimport { ArrowLeftOutlined, UserOutlined } from \"@ant-design/icons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Router from \"next/router\";\nimport { LOG_OUT_SUCCESS } from \"../../reducers/user\";\nimport LoginModal from \"../Forms/Login\";\nimport SearchBarModal from \"../Forms/SearchBar\";\nimport ChangePassword from \"../Forms/ChangePassword\";\nimport { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useInput } from \"../Generalui/CustomHooks\";\nimport axios from \"axios\";\nimport { SET_COORDINATES_SUCCESS, SET_SHOPCOORDINATES_SUCCESS } from \"../../reducers/shop\";\nimport { Navbar } from \"antd-mobile\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar NavibarLayout = function NavibarLayout() {\n  _s();\n\n  var router = useRouter();\n  axios.defaults.baseURL = \"\".concat(process.env.BACKEND_IP);\n\n  var _useInput = useInput(),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      username = _useInput2[0],\n      onChangeUsername = _useInput2[1],\n      setUsername = _useInput2[2];\n\n  var _useInput3 = useInput(),\n      _useInput4 = _slicedToArray(_useInput3, 3),\n      password = _useInput4[0],\n      onChangePassword = _useInput4[1],\n      setPassword = _useInput4[2];\n\n  var _useState = useState(false),\n      toggleLogin = _useState[0],\n      setToggleLogin = _useState[1];\n\n  var _useState2 = useState(false),\n      toggleSearch = _useState2[0],\n      setToggleSearch = _useState2[1];\n\n  var _useState3 = useState(false),\n      toggleChangePassword = _useState3[0],\n      setToggleChangePassword = _useState3[1];\n\n  var _useState4 = useState(false),\n      visible = _useState4[0],\n      setVisible = _useState4[1];\n\n  var _useState5 = useState([]),\n      list = _useState5[0],\n      setList = _useState5[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.admin;\n  }),\n      pageInfo = _useSelector.pageInfo;\n\n  var _useState6 = useState(false),\n      show = _useState6[0],\n      setShow = _useState6[1];\n\n  var hideHandler = function hideHandler() {\n    setShow(false);\n  };\n\n  var showHandler = function showHandler(show) {\n    setShow(show);\n  };\n\n  var onToggleChangePassword = function onToggleChangePassword() {\n    hideHandler();\n    setToggleChangePassword(function (prev) {\n      return !prev;\n    });\n  };\n\n  var dispatch = useDispatch();\n\n  var onClickLogout = function onClickLogout() {\n    setPassword(\"\");\n    setUsername(\"\");\n    dispatch({\n      type: LOG_OUT_SUCCESS\n    });\n  };\n\n  var onToggleLogin = function onToggleLogin() {\n    setPassword(\"\");\n    setUsername(\"\");\n    setToggleLogin(function (prev) {\n      return !prev;\n    });\n  };\n\n  var onToggleSearch = function onToggleSearch() {\n    setToggleSearch(function (prev) {\n      return !prev;\n    });\n  };\n\n  var onVisible = function onVisible() {\n    setVisible(function (prev) {\n      return !prev;\n    });\n  };\n\n  var onClickPayments = function onClickPayments() {\n    router.push(\"/payments\");\n    hideHandler();\n  };\n\n  var onClickAdmin = function onClickAdmin() {\n    router.push(\"/shop/admin\");\n    hideHandler();\n  };\n\n  var onClickShopList = function onClickShopList(coordinates) {\n    axios.post(\"/\", {\n      coordinates: {\n        lat: Number(coordinates.x),\n        lng: Number(coordinates.y)\n      }\n    }).then(function (result) {\n      dispatch({\n        type: SET_COORDINATES_SUCCESS,\n        data: [Number(coordinates.x), Number(coordinates.y)]\n      }, []);\n      dispatch({\n        type: SET_SHOPCOORDINATES_SUCCESS,\n        data: result.data\n      }, []);\n      setVisible(false);\n    });\n  };\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.user;\n  }),\n      isLoggedIn = _useSelector2.isLoggedIn,\n      session = _useSelector2.session;\n\n  return /*#__PURE__*/_jsxs(Navbar, {\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      children: \"test\"\n    }), /*#__PURE__*/_jsx(\"div\", {\n      children: \"test\"\n    }), /*#__PURE__*/_jsx(\"div\", {\n      children: \"test\"\n    }), /*#__PURE__*/_jsx(\"div\", {\n      children: \"test\"\n    })]\n  }); // return (\n  //   <>\n  //     <Modal title={\"Login\"} visible={toggleLogin} onCancel={onToggleLogin} footer={null}>\n  //       <LoginModal\n  //         setToggleLogin={setToggleLogin}\n  //         username={username}\n  //         onChangeUsername={onChangeUsername}\n  //         password={password}\n  //         onChangePassword={onChangePassword}\n  //       />\n  //     </Modal>\n  //     <Modal\n  //       title={\"Search\"}\n  //       visible={toggleSearch}\n  //       onCancel={onToggleSearch}\n  //       setVisible={setVisible}\n  //       footer={null}\n  //     >\n  //       <SearchBarModal\n  //         type={pageInfo}\n  //         setToggleSearch={setToggleSearch}\n  //         setVisible={setVisible}\n  //         setList={setList}\n  //       />\n  //     </Modal>\n  //     <Modal title={\"검색결과\"} visible={visible} onCancel={onVisible} footer={null}>\n  //       {list.length > 0 ? (\n  //         <List\n  //           dataSource={list}\n  //           renderItem={(item) => {\n  //             return (\n  //               <List.Item onClick={() => onClickShopList(item)}>\n  //                 <List.Item.Meta title={item.place_name} description={item.road_address_name} />\n  //               </List.Item>\n  //             );\n  //           }}\n  //         />\n  //       ) : (\n  //         <Empty>검색 결과가 존재하지 않습니다.</Empty>\n  //       )}\n  //     </Modal>\n  //     <Modal\n  //       title={\"Change Password\"}\n  //       visible={toggleChangePassword}\n  //       onCancel={onToggleChangePassword}\n  //       footer={null}\n  //     >\n  //       <ChangePassword setToggleChangePassword={setToggleChangePassword} />\n  //     </Modal>\n  //     <div style={{ marginTop: \"10px\", backGroundColor: \"white\" }}>\n  //       <Menu mode=\"horizontal\">\n  //         <Menu.Item key={\"back\"}>\n  //           <ArrowLeftOutlined onClick={() => Router.back()} />\n  //         </Menu.Item>\n  //         <Menu.Item key={\"search\"} style={{ float: \"right\" }}>\n  //           <Input.Search\n  //             enterButton\n  //             style={{ verticalAlign: \"middle\" }}\n  //             onClick={onToggleSearch}\n  //             disabled={pageInfo === (\"store\" || \"menu\" || \"index\") ? false : true}\n  //             readOnly\n  //           />\n  //         </Menu.Item>\n  //         {!isLoggedIn\n  //           ? [\n  //               <Menu.Item key={\"login\"}>\n  //                 <a onClick={onToggleLogin}>로그인</a>\n  //               </Menu.Item>,\n  //             ]\n  //           : [\n  //               <Menu.Item key={\"profile\"}>\n  //                 <Popover\n  //                   trigger={\"click\"}\n  //                   placement={\"bottom\"}\n  //                   title={session.name}\n  //                   visible={show}\n  //                   onVisibleChange={showHandler}\n  //                   content={\n  //                     <>\n  //                       <Space direction={\"vertical\"}>\n  //                         <div style={{ cursor: \"pointer\" }} onClick={onToggleChangePassword}>\n  //                           비밀번호 변경\n  //                         </div>\n  //                         <div style={{ cursor: \"pointer\" }} onClick={onClickPayments}>\n  //                           결제이력\n  //                         </div>\n  //                         {session.division === true && (\n  //                           <div style={{ cursor: \"pointer\" }} onClick={onClickAdmin}>\n  //                             매장관리 페이지\n  //                           </div>\n  //                         )}\n  //                       </Space>\n  //                     </>\n  //                   }\n  //                 >\n  //                   <UserOutlined />\n  //                 </Popover>\n  //               </Menu.Item>,\n  //               <Menu.Item style={{ float: \"right\" }} key={\"logout\"}>\n  //                 <a onClick={onClickLogout}>로그아웃</a>\n  //               </Menu.Item>,\n  //             ]}\n  //       </Menu>\n  //     </div>\n  //   </>\n  // );\n};\n\n_s(NavibarLayout, \"2yDGflpUzJTlHZjI6gnhClh143I=\", false, function () {\n  return [useRouter, useInput, useInput, useSelector, useDispatch, useSelector];\n});\n\n_c = NavibarLayout;\nexport default NavibarLayout;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavibarLayout\");","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/Dev/project1/frontend/components/Layout/NavibarLayout.js"],"names":["Menu","Input","Modal","Popover","Space","List","Empty","ArrowLeftOutlined","UserOutlined","useSelector","useDispatch","Router","LOG_OUT_SUCCESS","LoginModal","SearchBarModal","ChangePassword","useState","useRouter","useInput","axios","SET_COORDINATES_SUCCESS","SET_SHOPCOORDINATES_SUCCESS","Navbar","NavibarLayout","router","defaults","baseURL","process","env","BACKEND_IP","username","onChangeUsername","setUsername","password","onChangePassword","setPassword","toggleLogin","setToggleLogin","toggleSearch","setToggleSearch","toggleChangePassword","setToggleChangePassword","visible","setVisible","list","setList","state","admin","pageInfo","show","setShow","hideHandler","showHandler","onToggleChangePassword","prev","dispatch","onClickLogout","type","onToggleLogin","onToggleSearch","onVisible","onClickPayments","push","onClickAdmin","onClickShopList","coordinates","post","lat","Number","x","lng","y","then","result","data","user","isLoggedIn","session"],"mappings":"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","sourcesContent":["import { Menu, Input, Modal, Popover, Space, List, Empty } from \"antd\";\nimport { ArrowLeftOutlined, UserOutlined } from \"@ant-design/icons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Router from \"next/router\";\nimport { LOG_OUT_SUCCESS } from \"../../reducers/user\";\nimport LoginModal from \"../Forms/Login\";\nimport SearchBarModal from \"../Forms/SearchBar\";\nimport ChangePassword from \"../Forms/ChangePassword\";\nimport { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useInput } from \"../Generalui/CustomHooks\";\nimport axios from \"axios\";\nimport { SET_COORDINATES_SUCCESS, SET_SHOPCOORDINATES_SUCCESS } from \"../../reducers/shop\";\nimport { Navbar } from \"antd-mobile\";\n\nconst NavibarLayout = () => {\n  const router = useRouter();\n  axios.defaults.baseURL = `${process.env.BACKEND_IP}`;\n\n  const [username, onChangeUsername, setUsername] = useInput();\n  const [password, onChangePassword, setPassword] = useInput();\n\n  const [toggleLogin, setToggleLogin] = useState(false);\n  const [toggleSearch, setToggleSearch] = useState(false);\n  const [toggleChangePassword, setToggleChangePassword] = useState(false);\n  const [visible, setVisible] = useState(false);\n  const [list, setList] = useState([]);\n\n  const { pageInfo } = useSelector((state) => state.admin);\n\n  const [show, setShow] = useState(false);\n\n  const hideHandler = () => {\n    setShow(false);\n  };\n\n  const showHandler = (show) => {\n    setShow(show);\n  };\n\n  const onToggleChangePassword = () => {\n    hideHandler();\n    setToggleChangePassword((prev) => !prev);\n  };\n\n  const dispatch = useDispatch();\n  const onClickLogout = () => {\n    setPassword(\"\");\n    setUsername(\"\");\n    dispatch({ type: LOG_OUT_SUCCESS });\n  };\n\n  const onToggleLogin = () => {\n    setPassword(\"\");\n    setUsername(\"\");\n    setToggleLogin((prev) => !prev);\n  };\n\n  const onToggleSearch = () => {\n    setToggleSearch((prev) => !prev);\n  };\n\n  const onVisible = () => {\n    setVisible((prev) => !prev);\n  };\n\n  const onClickPayments = () => {\n    router.push(\"/payments\");\n    hideHandler();\n  };\n\n  const onClickAdmin = () => {\n    router.push(\"/shop/admin\");\n    hideHandler();\n  };\n\n  const onClickShopList = (coordinates) => {\n    axios\n      .post(\"/\", { coordinates: { lat: Number(coordinates.x), lng: Number(coordinates.y) } })\n      .then((result) => {\n        dispatch(\n          {\n            type: SET_COORDINATES_SUCCESS,\n            data: [Number(coordinates.x), Number(coordinates.y)],\n          },\n          [],\n        );\n        dispatch({ type: SET_SHOPCOORDINATES_SUCCESS, data: result.data }, []);\n        setVisible(false);\n      });\n  };\n\n  const { isLoggedIn, session } = useSelector((state) => state.user);\n\n  return (\n    <Navbar>\n      <div>test</div>\n      <div>test</div>\n      <div>test</div>\n      <div>test</div>\n    </Navbar>\n  );\n\n  // return (\n  //   <>\n  //     <Modal title={\"Login\"} visible={toggleLogin} onCancel={onToggleLogin} footer={null}>\n  //       <LoginModal\n  //         setToggleLogin={setToggleLogin}\n  //         username={username}\n  //         onChangeUsername={onChangeUsername}\n  //         password={password}\n  //         onChangePassword={onChangePassword}\n  //       />\n  //     </Modal>\n  //     <Modal\n  //       title={\"Search\"}\n  //       visible={toggleSearch}\n  //       onCancel={onToggleSearch}\n  //       setVisible={setVisible}\n  //       footer={null}\n  //     >\n  //       <SearchBarModal\n  //         type={pageInfo}\n  //         setToggleSearch={setToggleSearch}\n  //         setVisible={setVisible}\n  //         setList={setList}\n  //       />\n  //     </Modal>\n  //     <Modal title={\"검색결과\"} visible={visible} onCancel={onVisible} footer={null}>\n  //       {list.length > 0 ? (\n  //         <List\n  //           dataSource={list}\n  //           renderItem={(item) => {\n  //             return (\n  //               <List.Item onClick={() => onClickShopList(item)}>\n  //                 <List.Item.Meta title={item.place_name} description={item.road_address_name} />\n  //               </List.Item>\n  //             );\n  //           }}\n  //         />\n  //       ) : (\n  //         <Empty>검색 결과가 존재하지 않습니다.</Empty>\n  //       )}\n  //     </Modal>\n  //     <Modal\n  //       title={\"Change Password\"}\n  //       visible={toggleChangePassword}\n  //       onCancel={onToggleChangePassword}\n  //       footer={null}\n  //     >\n  //       <ChangePassword setToggleChangePassword={setToggleChangePassword} />\n  //     </Modal>\n  //     <div style={{ marginTop: \"10px\", backGroundColor: \"white\" }}>\n  //       <Menu mode=\"horizontal\">\n  //         <Menu.Item key={\"back\"}>\n  //           <ArrowLeftOutlined onClick={() => Router.back()} />\n  //         </Menu.Item>\n  //         <Menu.Item key={\"search\"} style={{ float: \"right\" }}>\n  //           <Input.Search\n  //             enterButton\n  //             style={{ verticalAlign: \"middle\" }}\n  //             onClick={onToggleSearch}\n  //             disabled={pageInfo === (\"store\" || \"menu\" || \"index\") ? false : true}\n  //             readOnly\n  //           />\n  //         </Menu.Item>\n\n  //         {!isLoggedIn\n  //           ? [\n  //               <Menu.Item key={\"login\"}>\n  //                 <a onClick={onToggleLogin}>로그인</a>\n  //               </Menu.Item>,\n  //             ]\n  //           : [\n  //               <Menu.Item key={\"profile\"}>\n  //                 <Popover\n  //                   trigger={\"click\"}\n  //                   placement={\"bottom\"}\n  //                   title={session.name}\n  //                   visible={show}\n  //                   onVisibleChange={showHandler}\n  //                   content={\n  //                     <>\n  //                       <Space direction={\"vertical\"}>\n  //                         <div style={{ cursor: \"pointer\" }} onClick={onToggleChangePassword}>\n  //                           비밀번호 변경\n  //                         </div>\n  //                         <div style={{ cursor: \"pointer\" }} onClick={onClickPayments}>\n  //                           결제이력\n  //                         </div>\n  //                         {session.division === true && (\n  //                           <div style={{ cursor: \"pointer\" }} onClick={onClickAdmin}>\n  //                             매장관리 페이지\n  //                           </div>\n  //                         )}\n  //                       </Space>\n  //                     </>\n  //                   }\n  //                 >\n  //                   <UserOutlined />\n  //                 </Popover>\n  //               </Menu.Item>,\n  //               <Menu.Item style={{ float: \"right\" }} key={\"logout\"}>\n  //                 <a onClick={onClickLogout}>로그아웃</a>\n  //               </Menu.Item>,\n  //             ]}\n  //       </Menu>\n  //     </div>\n  //   </>\n  // );\n};\n\nexport default NavibarLayout;\n"]},"metadata":{},"sourceType":"module"}