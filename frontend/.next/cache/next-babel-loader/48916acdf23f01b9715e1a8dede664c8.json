{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst initialState = {\n  store: null,\n  products: [],\n  cart: []\n};\nexport const LOAD_PRODUCTS_REQUEST = \"LOAD_PRODUCTS_REQUEST\";\nexport const LOAD_PRODUCTS_SUCCESS = \"LOAD_PRODUCTS_SUCCESS\";\nexport const LOAD_PRODUCTS_FAILURE = \"LOAD_PRODUCTS_FAILURE\";\nexport const ADD_QUANTITY_REQUEST = \"ADD_QUANTITY_REQUEST\";\nexport const ADD_QUANTITY_SUCCESS = \"ADD_QUANTITY_SUCCESS\";\nexport const ADD_QUANTITY_FAILURE = \"ADD_QUANTITY_FAILURE\";\nexport const SUBSTRACT_QUANTITY_REQUEST = \"SUBSTRACT_QUANTITY_REQUEST\";\nexport const SUBSTRACT_QUANTITY_SUCCESS = \"SUBSTRACT_QUANTITY_SUCCESS\";\nexport const SUBSTRACT_QUANTITY_FAILURE = \"SUBSTRACT_QUANTITY_FAILURE\";\nexport const ADD_PRODUCT_REQUEST = \"ADD_PRODUCT_REQUEST\";\nexport const ADD_PRODUCT_SUCCESS = \"ADD_PRODUCT_SUCCESS\";\nexport const ADD_PRODUCT_FAILURE = \"ADD_PRODUCT_FAILURE\";\nexport const LOAD_CART_REQUEST = \"LOAD_CART_REQUEST\";\nexport const LOAD_CARD_SUCCESS = \"LOAD_CART_SUCCESS\";\nexport const LOAD_CARD_FAILURE = \"LOAD_CART_FAILURE\";\nexport const REMOVE_ITEM_REQUEST = \"REMOVE_ITEM_REQUEST\";\nexport const REMOVE_ITEM_SUCCESS = \"REMOVE_ITEM_SUCCESS\";\nexport const REMOVE_ITEM_FAILURE = \"REMOVE_ITEM_FAILURE\";\nexport const ADD_ITEM_QUANTITY_REQUEST = \"ADD_ITEM_QUANTITY_REQUEST\";\nexport const SUBSTRACT_ITEM_QUANTITY_REQUEST = \"SUBSTRACT_ITEM_QUANTITY_REQUEST\";\nexport const SUBSTRACT_ITEM_QUANTITY_SUCCESS = \"SUBSTRACT_ITEM_QUANTITY_SUCCESS\";\nexport const SUBSTRACT_ITEM_QUANTITY_FAILURE = \"SUBSTRACT_ITEM_QUANTITY_FAILURE\";\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_QUANTITY_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case ADD_QUANTITY_SUCCESS:\n      {\n        const index = state.products.findIndex(product => product.id === action.data.id);\n        const product = state.products[index];\n        let quantity = product.quantity;\n        quantity < 9 ? quantity += 1 : 9;\n        const products = [...state.products];\n        products[index] = _objectSpread(_objectSpread({}, product), {}, {\n          quantity\n        });\n        return _objectSpread(_objectSpread({}, state), {}, {\n          products\n        });\n      }\n\n    case ADD_QUANTITY_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case SUBSTRACT_QUANTITY_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case SUBSTRACT_QUANTITY_SUCCESS:\n      {\n        const index = state.products.findIndex(product => product.id === action.data.id);\n        const product = state.products[index];\n        let quantity = product.quantity;\n        quantity > 1 ? quantity -= 1 : 1;\n        const products = [...state.products];\n        products[index] = _objectSpread(_objectSpread({}, product), {}, {\n          quantity\n        });\n        return _objectSpread(_objectSpread({}, state), {}, {\n          products\n        });\n      }\n\n    case SUBSTRACT_QUANTITY_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_PRODUCTS_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_PRODUCTS_SUCCESS:\n      {\n        console.log(`title ${action.data[0].title}`);\n        return _objectSpread(_objectSpread({}, state), {}, {\n          products: [...action.data]\n        });\n      }\n\n    case LOAD_PRODUCTS_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case ADD_PRODUCT_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case ADD_PRODUCT_SUCCESS:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          products: [action.data, ...state.products]\n        });\n      }\n\n    case ADD_PRODUCT_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_CART_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_CART_SUCCESS:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          cart: [...state.cart, action.data]\n        });\n      }\n\n    case LOAD_CART_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case REMOVE_ITEM_REQUEST:\n      {\n        const items = state.cart.filter(v => v.id !== action.id);\n        return _objectSpread(_objectSpread({}, state), {}, {\n          cart: [...items]\n        });\n      }\n\n    case ADD_ITEM_REQUEST:\n      {\n        let newItem;\n\n        if (state.cart.findIndex(v => v.id !== action.id)) {\n          newItem = state.products.filter(v => v.id === action.id);\n        }\n\n        return _objectSpread(_objectSpread({}, state), {}, {\n          cart: [...state.cart, newItem]\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/reducers/shop.js"],"names":["initialState","store","products","cart","LOAD_PRODUCTS_REQUEST","LOAD_PRODUCTS_SUCCESS","LOAD_PRODUCTS_FAILURE","ADD_QUANTITY_REQUEST","ADD_QUANTITY_SUCCESS","ADD_QUANTITY_FAILURE","SUBSTRACT_QUANTITY_REQUEST","SUBSTRACT_QUANTITY_SUCCESS","SUBSTRACT_QUANTITY_FAILURE","ADD_PRODUCT_REQUEST","ADD_PRODUCT_SUCCESS","ADD_PRODUCT_FAILURE","LOAD_CART_REQUEST","LOAD_CARD_SUCCESS","LOAD_CARD_FAILURE","REMOVE_ITEM_REQUEST","REMOVE_ITEM_SUCCESS","REMOVE_ITEM_FAILURE","ADD_ITEM_QUANTITY_REQUEST","SUBSTRACT_ITEM_QUANTITY_REQUEST","SUBSTRACT_ITEM_QUANTITY_SUCCESS","SUBSTRACT_ITEM_QUANTITY_FAILURE","reducer","state","action","type","index","findIndex","product","id","data","quantity","console","log","title","LOAD_CART_SUCCESS","LOAD_CART_FAILURE","items","filter","v","ADD_ITEM_REQUEST","newItem"],"mappings":";;;;;;AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,IADY;AAEnBC,EAAAA,QAAQ,EAAE,EAFS;AAGnBC,EAAAA,IAAI,EAAE;AAHa,CAArB;AAMA,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AAEP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AAEP,OAAO,MAAMC,0BAA0B,GAAG,4BAAnC;AACP,OAAO,MAAMC,0BAA0B,GAAG,4BAAnC;AACP,OAAO,MAAMC,0BAA0B,GAAG,4BAAnC;AAEP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AAEP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AAEP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AAEP,OAAO,MAAMC,yBAAyB,GAAG,2BAAlC;AAEP,OAAO,MAAMC,+BAA+B,GAAG,iCAAxC;AACP,OAAO,MAAMC,+BAA+B,GAAG,iCAAxC;AACP,OAAO,MAAMC,+BAA+B,GAAG,iCAAxC;;AAEP,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAG3B,YAAT,EAAuB4B,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKtB,oBAAL;AAA2B;AACzB,iCACKoB,KADL;AAGD;;AACD,SAAKnB,oBAAL;AAA2B;AACzB,cAAMsB,KAAK,GAAGH,KAAK,CAACzB,QAAN,CAAe6B,SAAf,CAA0BC,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAeL,MAAM,CAACM,IAAP,CAAYD,EAAjE,CAAd;AACA,cAAMD,OAAO,GAAGL,KAAK,CAACzB,QAAN,CAAe4B,KAAf,CAAhB;AACA,YAAIK,QAAQ,GAAGH,OAAO,CAACG,QAAvB;AACAA,QAAAA,QAAQ,GAAG,CAAX,GAAgBA,QAAQ,IAAI,CAA5B,GAAiC,CAAjC;AACA,cAAMjC,QAAQ,GAAG,CAAC,GAAGyB,KAAK,CAACzB,QAAV,CAAjB;AACAA,QAAAA,QAAQ,CAAC4B,KAAD,CAAR,mCAAuBE,OAAvB;AAAgCG,UAAAA;AAAhC;AAEA,+CACKR,KADL;AAEEzB,UAAAA;AAFF;AAID;;AACD,SAAKO,oBAAL;AAA2B;AACzB,iCACKkB,KADL;AAGD;;AACD,SAAKjB,0BAAL;AAAiC;AAC/B,iCACKiB,KADL;AAGD;;AACD,SAAKhB,0BAAL;AAAiC;AAC/B,cAAMmB,KAAK,GAAGH,KAAK,CAACzB,QAAN,CAAe6B,SAAf,CAA0BC,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAeL,MAAM,CAACM,IAAP,CAAYD,EAAjE,CAAd;AACA,cAAMD,OAAO,GAAGL,KAAK,CAACzB,QAAN,CAAe4B,KAAf,CAAhB;AACA,YAAIK,QAAQ,GAAGH,OAAO,CAACG,QAAvB;AACAA,QAAAA,QAAQ,GAAG,CAAX,GAAgBA,QAAQ,IAAI,CAA5B,GAAiC,CAAjC;AACA,cAAMjC,QAAQ,GAAG,CAAC,GAAGyB,KAAK,CAACzB,QAAV,CAAjB;AACAA,QAAAA,QAAQ,CAAC4B,KAAD,CAAR,mCAAuBE,OAAvB;AAAgCG,UAAAA;AAAhC;AACA,+CACKR,KADL;AAEEzB,UAAAA;AAFF;AAID;;AACD,SAAKU,0BAAL;AAAiC;AAC/B,iCACKe,KADL;AAGD;;AAED,SAAKvB,qBAAL;AAA4B;AAC1B,iCACKuB,KADL;AAGD;;AAED,SAAKtB,qBAAL;AAA4B;AAC1B+B,QAAAA,OAAO,CAACC,GAAR,CAAa,SAAQT,MAAM,CAACM,IAAP,CAAY,CAAZ,EAAeI,KAAM,EAA1C;AACA,+CACKX,KADL;AAEEzB,UAAAA,QAAQ,EAAE,CAAC,GAAG0B,MAAM,CAACM,IAAX;AAFZ;AAID;;AAED,SAAK5B,qBAAL;AAA4B;AAC1B,iCACKqB,KADL;AAGD;;AAED,SAAKd,mBAAL;AAA0B;AACxB,iCACKc,KADL;AAGD;;AAED,SAAKb,mBAAL;AAA0B;AACxB,+CACKa,KADL;AAEEzB,UAAAA,QAAQ,EAAE,CAAC0B,MAAM,CAACM,IAAR,EAAc,GAAGP,KAAK,CAACzB,QAAvB;AAFZ;AAID;;AAED,SAAKa,mBAAL;AAA0B;AACxB,iCACKY,KADL;AAGD;;AAED,SAAKX,iBAAL;AAAwB;AACtB,iCACKW,KADL;AAGD;;AAED,SAAKY,iBAAL;AAAwB;AACtB,+CACKZ,KADL;AAEExB,UAAAA,IAAI,EAAE,CAAC,GAAGwB,KAAK,CAACxB,IAAV,EAAgByB,MAAM,CAACM,IAAvB;AAFR;AAID;;AAED,SAAKM,iBAAL;AAAwB;AACtB,iCACKb,KADL;AAGD;;AAED,SAAKR,mBAAL;AAA0B;AACxB,cAAMsB,KAAK,GAAGd,KAAK,CAACxB,IAAN,CAAWuC,MAAX,CAAmBC,CAAD,IAAOA,CAAC,CAACV,EAAF,KAASL,MAAM,CAACK,EAAzC,CAAd;AACA,+CACKN,KADL;AAEExB,UAAAA,IAAI,EAAE,CAAC,GAAGsC,KAAJ;AAFR;AAID;;AAED,SAAKG,gBAAL;AAAuB;AACrB,YAAIC,OAAJ;;AACA,YAAIlB,KAAK,CAACxB,IAAN,CAAW4B,SAAX,CAAsBY,CAAD,IAAOA,CAAC,CAACV,EAAF,KAASL,MAAM,CAACK,EAA5C,CAAJ,EAAqD;AACnDY,UAAAA,OAAO,GAAGlB,KAAK,CAACzB,QAAN,CAAewC,MAAf,CAAuBC,CAAD,IAAOA,CAAC,CAACV,EAAF,KAASL,MAAM,CAACK,EAA7C,CAAV;AACD;;AAED,+CACKN,KADL;AAEExB,UAAAA,IAAI,EAAE,CAAC,GAAGwB,KAAK,CAACxB,IAAV,EAAgB0C,OAAhB;AAFR;AAID;;AAED;AAAS;AACP,iCACKlB,KADL;AAGD;AAjIH;AAmID,CApID;;AAsIA,eAAeD,OAAf","sourcesContent":["const initialState = {\r\n  store: null,\r\n  products: [],\r\n  cart: [],\r\n};\r\n\r\nexport const LOAD_PRODUCTS_REQUEST = \"LOAD_PRODUCTS_REQUEST\";\r\nexport const LOAD_PRODUCTS_SUCCESS = \"LOAD_PRODUCTS_SUCCESS\";\r\nexport const LOAD_PRODUCTS_FAILURE = \"LOAD_PRODUCTS_FAILURE\";\r\n\r\nexport const ADD_QUANTITY_REQUEST = \"ADD_QUANTITY_REQUEST\";\r\nexport const ADD_QUANTITY_SUCCESS = \"ADD_QUANTITY_SUCCESS\";\r\nexport const ADD_QUANTITY_FAILURE = \"ADD_QUANTITY_FAILURE\";\r\n\r\nexport const SUBSTRACT_QUANTITY_REQUEST = \"SUBSTRACT_QUANTITY_REQUEST\";\r\nexport const SUBSTRACT_QUANTITY_SUCCESS = \"SUBSTRACT_QUANTITY_SUCCESS\";\r\nexport const SUBSTRACT_QUANTITY_FAILURE = \"SUBSTRACT_QUANTITY_FAILURE\";\r\n\r\nexport const ADD_PRODUCT_REQUEST = \"ADD_PRODUCT_REQUEST\";\r\nexport const ADD_PRODUCT_SUCCESS = \"ADD_PRODUCT_SUCCESS\";\r\nexport const ADD_PRODUCT_FAILURE = \"ADD_PRODUCT_FAILURE\";\r\n\r\nexport const LOAD_CART_REQUEST = \"LOAD_CART_REQUEST\";\r\nexport const LOAD_CARD_SUCCESS = \"LOAD_CART_SUCCESS\";\r\nexport const LOAD_CARD_FAILURE = \"LOAD_CART_FAILURE\";\r\n\r\nexport const REMOVE_ITEM_REQUEST = \"REMOVE_ITEM_REQUEST\";\r\nexport const REMOVE_ITEM_SUCCESS = \"REMOVE_ITEM_SUCCESS\";\r\nexport const REMOVE_ITEM_FAILURE = \"REMOVE_ITEM_FAILURE\";\r\n\r\nexport const ADD_ITEM_QUANTITY_REQUEST = \"ADD_ITEM_QUANTITY_REQUEST\";\r\n\r\nexport const SUBSTRACT_ITEM_QUANTITY_REQUEST = \"SUBSTRACT_ITEM_QUANTITY_REQUEST\";\r\nexport const SUBSTRACT_ITEM_QUANTITY_SUCCESS = \"SUBSTRACT_ITEM_QUANTITY_SUCCESS\";\r\nexport const SUBSTRACT_ITEM_QUANTITY_FAILURE = \"SUBSTRACT_ITEM_QUANTITY_FAILURE\";\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_QUANTITY_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case ADD_QUANTITY_SUCCESS: {\r\n      const index = state.products.findIndex((product) => product.id === action.data.id);\r\n      const product = state.products[index];\r\n      let quantity = product.quantity;\r\n      quantity < 9 ? (quantity += 1) : 9;\r\n      const products = [...state.products];\r\n      products[index] = { ...product, quantity };\r\n\r\n      return {\r\n        ...state,\r\n        products,\r\n      };\r\n    }\r\n    case ADD_QUANTITY_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case SUBSTRACT_QUANTITY_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case SUBSTRACT_QUANTITY_SUCCESS: {\r\n      const index = state.products.findIndex((product) => product.id === action.data.id);\r\n      const product = state.products[index];\r\n      let quantity = product.quantity;\r\n      quantity > 1 ? (quantity -= 1) : 1;\r\n      const products = [...state.products];\r\n      products[index] = { ...product, quantity };\r\n      return {\r\n        ...state,\r\n        products,\r\n      };\r\n    }\r\n    case SUBSTRACT_QUANTITY_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n\r\n    case LOAD_PRODUCTS_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n\r\n    case LOAD_PRODUCTS_SUCCESS: {\r\n      console.log(`title ${action.data[0].title}`);\r\n      return {\r\n        ...state,\r\n        products: [...action.data],\r\n      };\r\n    }\r\n\r\n    case LOAD_PRODUCTS_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n\r\n    case ADD_PRODUCT_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n\r\n    case ADD_PRODUCT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        products: [action.data, ...state.products],\r\n      };\r\n    }\r\n\r\n    case ADD_PRODUCT_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n\r\n    case LOAD_CART_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n\r\n    case LOAD_CART_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        cart: [...state.cart, action.data],\r\n      };\r\n    }\r\n\r\n    case LOAD_CART_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n\r\n    case REMOVE_ITEM_REQUEST: {\r\n      const items = state.cart.filter((v) => v.id !== action.id);\r\n      return {\r\n        ...state,\r\n        cart: [...items],\r\n      };\r\n    }\r\n\r\n    case ADD_ITEM_REQUEST: {\r\n      let newItem;\r\n      if (state.cart.findIndex((v) => v.id !== action.id)) {\r\n        newItem = state.products.filter((v) => v.id === action.id);\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        cart: [...state.cart, newItem],\r\n      };\r\n    }\r\n\r\n    default: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}