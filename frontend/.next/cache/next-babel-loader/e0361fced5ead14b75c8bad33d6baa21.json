{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport Head from \"next/head\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { createWrapper } from \"next-redux-wrapper\";\nimport reducer from \"../reducers\";\nimport rootSaga from \"../sagas\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst App = ({\n  Component,\n  store,\n  pageProps\n}) => {\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"NodeBird\"), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://cdnjs.cloudflare.com/ajax/libs/antd/4.2.4/antd.compact.css\"\n  }), __jsx(\"script\", {\n    type: \"text/javascript\",\n    src: \"https://code.jquery.com/jquery-1.12.4.min.js\"\n  }), __jsx(\"script\", {\n    type: \"text/javascript\",\n    src: \"https://cdn.iamport.kr/js/iamport.payment-1.1.5.js\"\n  }), __jsx(\"style\", null, `body {\n            background-color: #EFF2F5!important\n          }`)), __jsx(Component, pageProps));\n};\n\nApp.getInitialProps = context => {\n  let pageProps = {};\n  const {\n    ctx,\n    Component\n  } = context;\n\n  if (Component.getInitialProps) {\n    pageProps = Component.getInitialProps(ctx);\n  }\n\n  return pageProps;\n};\n\nconst configureStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middleWares = [sagaMiddleware];\n  const enhencer = false ? compose(applyMiddleware(...middleWares)) : composeWithDevTools(applyMiddleware(...middleWares));\n  const store = createStore(reducer);\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nexport default createWrapper(configureStore, {\n  debug: true\n}).withRedux(App);","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/pages/_app.js"],"names":["React","Head","createStore","applyMiddleware","compose","createSagaMiddleware","createWrapper","reducer","rootSaga","composeWithDevTools","App","Component","store","pageProps","getInitialProps","context","ctx","configureStore","sagaMiddleware","middleWares","enhencer","run","debug","withRedux"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,mBAAT,QAAoC,0BAApC;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,KAAb;AAAoBC,EAAAA;AAApB,CAAD,KAAqC;AAC/C,SACE,4BACE,MAAC,IAAD,QACE,gCADF,EAEE;AACE,IAAA,GAAG,EAAC,YADN;AAEE,IAAA,IAAI,EAAC;AAFP,IAFF,EAME;AAAQ,IAAA,IAAI,EAAC,iBAAb;AAA+B,IAAA,GAAG,EAAC;AAAnC,IANF,EAOE;AACE,IAAA,IAAI,EAAC,iBADP;AAEE,IAAA,GAAG,EAAC;AAFN,IAPF,EAWE,qBACI;;YADJ,CAXF,CADF,EAkBE,MAAC,SAAD,EAAeA,SAAf,CAlBF,CADF;AAsBD,CAvBD;;AAyBAH,GAAG,CAACI,eAAJ,GAAuBC,OAAD,IAAa;AACjC,MAAIF,SAAS,GAAG,EAAhB;AACA,QAAM;AAAEG,IAAAA,GAAF;AAAOL,IAAAA;AAAP,MAAqBI,OAA3B;;AACA,MAAIJ,SAAS,CAACG,eAAd,EAA+B;AAC7BD,IAAAA,SAAS,GAAGF,SAAS,CAACG,eAAV,CAA0BE,GAA1B,CAAZ;AACD;;AACD,SAAOH,SAAP;AACD,CAPD;;AASA,MAAMI,cAAc,GAAG,MAAM;AAC3B,QAAMC,cAAc,GAAGb,oBAAoB,EAA3C;AAEA,QAAMc,WAAW,GAAG,CAACD,cAAD,CAApB;AACA,QAAME,QAAQ,GACZ,QACIhB,OAAO,CAACD,eAAe,CAAC,GAAGgB,WAAJ,CAAhB,CADX,GAEIV,mBAAmB,CAACN,eAAe,CAAC,GAAGgB,WAAJ,CAAhB,CAHzB;AAIA,QAAMP,KAAK,GAAGV,WAAW,CAACK,OAAD,CAAzB;AACAW,EAAAA,cAAc,CAACG,GAAf,CAAmBb,QAAnB;AACA,SAAOI,KAAP;AACD,CAXD;;AAaA,eAAeN,aAAa,CAACW,cAAD,EAAiB;AAAEK,EAAAA,KAAK,EAAE;AAAT,CAAjB,CAAb,CAA+CC,SAA/C,CAAyDb,GAAzD,CAAf","sourcesContent":["import React from \"react\";\r\nimport Head from \"next/head\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { createWrapper } from \"next-redux-wrapper\";\r\nimport reducer from \"../reducers\";\r\nimport rootSaga from \"../sagas\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nconst App = ({ Component, store, pageProps }) => {\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>NodeBird</title>\r\n        <link\r\n          rel=\"stylesheet\"\r\n          href=\"https://cdnjs.cloudflare.com/ajax/libs/antd/4.2.4/antd.compact.css\"\r\n        />\r\n        <script type=\"text/javascript\" src=\"https://code.jquery.com/jquery-1.12.4.min.js\"></script>\r\n        <script\r\n          type=\"text/javascript\"\r\n          src=\"https://cdn.iamport.kr/js/iamport.payment-1.1.5.js\"\r\n        ></script>\r\n        <style>\r\n          {`body {\r\n            background-color: #EFF2F5!important\r\n          }`}\r\n        </style>\r\n      </Head>\r\n      <Component {...pageProps} />\r\n    </>\r\n  );\r\n};\r\n\r\nApp.getInitialProps = (context) => {\r\n  let pageProps = {};\r\n  const { ctx, Component } = context;\r\n  if (Component.getInitialProps) {\r\n    pageProps = Component.getInitialProps(ctx);\r\n  }\r\n  return pageProps;\r\n};\r\n\r\nconst configureStore = () => {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n\r\n  const middleWares = [sagaMiddleware];\r\n  const enhencer =\r\n    process.env.NODE_ENV === \"production\"\r\n      ? compose(applyMiddleware(...middleWares))\r\n      : composeWithDevTools(applyMiddleware(...middleWares));\r\n  const store = createStore(reducer);\r\n  sagaMiddleware.run(rootSaga);\r\n  return store;\r\n};\r\n\r\nexport default createWrapper(configureStore, { debug: true }).withRedux(App);\r\n"]},"metadata":{},"sourceType":"module"}