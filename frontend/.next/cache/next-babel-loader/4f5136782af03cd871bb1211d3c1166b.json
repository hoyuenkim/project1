{"ast":null,"code":"import { Form, Input, Card } from \"antd\";\nimport { useState } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nconst KakaoAddress = ({\n  setAddress,\n  setCoordinates\n}) => {\n  const {\n    0: addressToggle,\n    1: setAddressToggle\n  } = useState(false);\n\n  const handleComplete = data => {\n    let fullAddress = data.address;\n    let extraAddress = \"\";\n\n    if (data.addressType === \"R\") {\n      if (data.bname !== \"\") {\n        extraAddress += data.bname;\n      }\n\n      if (data.buildingName !== \"\") {\n        extraAddress += extraAddress !== \"\" ? `, ${data.buildingName}` : data.buildingName;\n      }\n\n      fullAddress += extraAddress !== \"\" ? ` (${extraAddress})` : \"\";\n    }\n\n    setAddress(fullAddress);\n    axios.get(`https://dapi.kakao.com/v2/local/search/address.json?query=${fullAddress}`, {\n      headers: {\n        Authorization: `KakaoAK ${process.env.KAKAO_APIKEY}`\n      }\n    }).then(res => {\n      const location = res.data.documents[0];\n      console.log(location.address);\n      setCoordinates([Number(location.address.x), Number(location.address.y)]);\n    });\n    setAddressToggle(false);\n  };\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: addressToggle ? /*#__PURE__*/_jsx(Card, {\n      children: /*#__PURE__*/_jsx(DaumPostcode, {\n        onComplete: handleComplete,\n        autoClose: true,\n        height: \"10\"\n      })\n    }) : /*#__PURE__*/_jsx(Form.Item, {\n      name: \"address\",\n      rules: [{\n        required: true,\n        message: \"주소를 입력해주세요\"\n      }],\n      children: /*#__PURE__*/_jsx(Input, {\n        prefix: \"* \\uC8FC\\uC18C\",\n        name: \"address\",\n        readOnly: true,\n        onClick: () => setAddressToggle(true),\n        size: \"large\"\n      })\n    })\n  });\n};\n\nexport default KakaoAddress;","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/dev/project1/frontend/components/Generalui/KakaoAddress.js"],"names":["Form","Input","Card","useState","KakaoAddress","setAddress","setCoordinates","addressToggle","setAddressToggle","handleComplete","data","fullAddress","address","extraAddress","addressType","bname","buildingName","axios","get","headers","Authorization","process","env","KAKAO_APIKEY","then","res","location","documents","console","log","Number","x","y","required","message"],"mappings":"AAAA,SAASA,IAAT,EAAeC,KAAf,EAAsBC,IAAtB,QAAkC,MAAlC;AACA,SAASC,QAAT,QAAyB,OAAzB;;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KAAoC;AACvD,QAAM;AAAA,OAACC,aAAD;AAAA,OAAgBC;AAAhB,MAAoCL,QAAQ,CAAC,KAAD,CAAlD;;AAEA,QAAMM,cAAc,GAAIC,IAAD,IAAU;AAC/B,QAAIC,WAAW,GAAGD,IAAI,CAACE,OAAvB;AACA,QAAIC,YAAY,GAAG,EAAnB;;AAEA,QAAIH,IAAI,CAACI,WAAL,KAAqB,GAAzB,EAA8B;AAC5B,UAAIJ,IAAI,CAACK,KAAL,KAAe,EAAnB,EAAuB;AACrBF,QAAAA,YAAY,IAAIH,IAAI,CAACK,KAArB;AACD;;AACD,UAAIL,IAAI,CAACM,YAAL,KAAsB,EAA1B,EAA8B;AAC5BH,QAAAA,YAAY,IAAIA,YAAY,KAAK,EAAjB,GAAuB,KAAIH,IAAI,CAACM,YAAa,EAA7C,GAAiDN,IAAI,CAACM,YAAtE;AACD;;AACDL,MAAAA,WAAW,IAAIE,YAAY,KAAK,EAAjB,GAAuB,KAAIA,YAAa,GAAxC,GAA6C,EAA5D;AACD;;AAEDR,IAAAA,UAAU,CAACM,WAAD,CAAV;AAEAM,IAAAA,KAAK,CACFC,GADH,CACQ,6DAA4DP,WAAY,EADhF,EACmF;AAC/EQ,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,WAAUC,OAAO,CAACC,GAAR,CAAYC,YAAa;AAD5C;AADsE,KADnF,EAMGC,IANH,CAMSC,GAAD,IAAS;AACb,YAAMC,QAAQ,GAAGD,GAAG,CAACf,IAAJ,CAASiB,SAAT,CAAmB,CAAnB,CAAjB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACd,OAArB;AACAN,MAAAA,cAAc,CAAC,CAACwB,MAAM,CAACJ,QAAQ,CAACd,OAAT,CAAiBmB,CAAlB,CAAP,EAA6BD,MAAM,CAACJ,QAAQ,CAACd,OAAT,CAAiBoB,CAAlB,CAAnC,CAAD,CAAd;AACD,KAVH;AAYAxB,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD,GA7BD;;AA+BA,sBACE;AAAA,cACGD,aAAa,gBACZ,KAAC,IAAD;AAAA,6BACE,KAAC,YAAD;AAAc,QAAA,UAAU,EAAEE,cAA1B;AAA0C,QAAA,SAAS,EAAE,IAArD;AAA2D,QAAA,MAAM,EAAE;AAAnE;AADF,MADY,gBAKZ,KAAC,IAAD,CAAM,IAAN;AAAW,MAAA,IAAI,EAAC,SAAhB;AAA0B,MAAA,KAAK,EAAE,CAAC;AAAEwB,QAAAA,QAAQ,EAAE,IAAZ;AAAkBC,QAAAA,OAAO,EAAE;AAA3B,OAAD,CAAjC;AAAA,6BACE,KAAC,KAAD;AACE,QAAA,MAAM,EAAC,gBADT;AAEE,QAAA,IAAI,EAAE,SAFR;AAGE,QAAA,QAAQ,MAHV;AAIE,QAAA,OAAO,EAAE,MAAM1B,gBAAgB,CAAC,IAAD,CAJjC;AAKE,QAAA,IAAI,EAAE;AALR;AADF;AANJ,IADF;AAmBD,CArDD;;AAuDA,eAAeJ,YAAf","sourcesContent":["import { Form, Input, Card } from \"antd\";\r\nimport { useState } from \"react\";\r\n\r\nconst KakaoAddress = ({ setAddress, setCoordinates }) => {\r\n  const [addressToggle, setAddressToggle] = useState(false);\r\n\r\n  const handleComplete = (data) => {\r\n    let fullAddress = data.address;\r\n    let extraAddress = \"\";\r\n\r\n    if (data.addressType === \"R\") {\r\n      if (data.bname !== \"\") {\r\n        extraAddress += data.bname;\r\n      }\r\n      if (data.buildingName !== \"\") {\r\n        extraAddress += extraAddress !== \"\" ? `, ${data.buildingName}` : data.buildingName;\r\n      }\r\n      fullAddress += extraAddress !== \"\" ? ` (${extraAddress})` : \"\";\r\n    }\r\n\r\n    setAddress(fullAddress);\r\n\r\n    axios\r\n      .get(`https://dapi.kakao.com/v2/local/search/address.json?query=${fullAddress}`, {\r\n        headers: {\r\n          Authorization: `KakaoAK ${process.env.KAKAO_APIKEY}`,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        const location = res.data.documents[0];\r\n        console.log(location.address);\r\n        setCoordinates([Number(location.address.x), Number(location.address.y)]);\r\n      });\r\n\r\n    setAddressToggle(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {addressToggle ? (\r\n        <Card>\r\n          <DaumPostcode onComplete={handleComplete} autoClose={true} height={\"10\"} />\r\n        </Card>\r\n      ) : (\r\n        <Form.Item name=\"address\" rules={[{ required: true, message: \"주소를 입력해주세요\" }]}>\r\n          <Input\r\n            prefix=\"* 주소\"\r\n            name={\"address\"}\r\n            readOnly\r\n            onClick={() => setAddressToggle(true)}\r\n            size={\"large\"}\r\n          />\r\n        </Form.Item>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default KakaoAddress;\r\n"]},"metadata":{},"sourceType":"module"}