{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\hoyuen\\\\Documents\\\\dev\\\\project1\\\\frontend\\\\components\\\\Generalui\\\\Terms.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState, useMemo } from 'react';\nimport { List, Modal, Col, Row, Card } from 'antd';\nimport { CheckCircleFilled, CheckCircleOutlined } from '@ant-design/icons';\nimport { useChecked } from './CustomHooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar Terms = function Terms(_ref) {\n  _s();\n\n  var setTerms = _ref.setTerms;\n  var CheckCircleStyle = useMemo(function () {\n    return {\n      color: '#40A9FF',\n      marginRight: '3%'\n    };\n  }, []);\n  var terms = [{\n    title: '개인정보동의',\n    content: '개인정보를 동의해주세요'\n  }, {\n    title: '3자정보동의',\n    content: '3자 정보동의를 해주세요'\n  }];\n\n  var _useState = useState(false),\n      allTerms = _useState[0],\n      setAllTerms = _useState[1];\n\n  var _useChecked = useChecked(false),\n      _useChecked2 = _slicedToArray(_useChecked, 2),\n      individualInformationModal = _useChecked2[0],\n      setIndividualInformationModal = _useChecked2[1];\n\n  var _useChecked3 = useChecked(false),\n      _useChecked4 = _slicedToArray(_useChecked3, 2),\n      thirdPartyInformationModal = _useChecked4[0],\n      setThirdPartyInformationModal = _useChecked4[1];\n\n  var setModals = [setIndividualInformationModal, setThirdPartyInformationModal];\n  var modals = [individualInformationModal, thirdPartyInformationModal];\n  var toggleAllTerms = useCallback(function () {\n    setAllTerms(function (prev) {\n      return !prev;\n    });\n\n    if (!allTerms) {\n      setTerms.map(function (term) {\n        term[2](true);\n      });\n    } else {\n      setTerms.map(function (term) {\n        term[2](false);\n      });\n    }\n  }, [allTerms]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      header: '약관동의',\n      bordered: true,\n      itemLayout: 'horizontal',\n      dataSource: terms,\n      renderItem: function renderItem(term, index) {\n        return /*#__PURE__*/_jsxDEV(List.Item, {\n          actions: [/*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: setModals[index],\n            children: \"\\uC790\\uC138\\uD788\\uBCF4\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 46\n          }, _this)],\n          children: [/*#__PURE__*/_jsxDEV(List.Item.Meta, {\n            title: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  span: 2,\n                  children: setTerms[index][0] ? /*#__PURE__*/_jsxDEV(CheckCircleFilled, {\n                    style: CheckCircleStyle,\n                    onClick: setTerms[index][1]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 51,\n                    columnNumber: 27\n                  }, _this) : /*#__PURE__*/_jsxDEV(CheckCircleOutlined, {\n                    style: CheckCircleStyle,\n                    onClick: setTerms[index][1]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 56,\n                    columnNumber: 27\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 23\n                }, _this), /*#__PURE__*/_jsxDEV(Col, {\n                  span: 22,\n                  children: term.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 23\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 21\n              }, _this)\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(Modal, {\n            title: term.title,\n            visible: modals[index],\n            onOk: setModals[index],\n            onCancel: setModals[index],\n            zIndex: 100,\n            style: {\n              overflowY: 'auto'\n            },\n            children: term.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, _this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Card, {\n      bordered: false,\n      children: [allTerms ? /*#__PURE__*/_jsxDEV(CheckCircleFilled, {\n        style: CheckCircleStyle,\n        onClick: toggleAllTerms\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, _this) : /*#__PURE__*/_jsxDEV(CheckCircleOutlined, {\n        style: CheckCircleStyle,\n        onClick: toggleAllTerms\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, _this), \"\\uC804\\uCCB4 \\uB3D9\\uC758\\uD558\\uAE30\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Terms, \"FEywYbFGEWRcS7XfMyWOzXsS/ds=\", false, function () {\n  return [useChecked, useChecked];\n});\n\n_c = Terms;\nexport default Terms;\n\nvar _c;\n\n$RefreshReg$(_c, \"Terms\");","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/dev/project1/frontend/components/Generalui/Terms.js"],"names":["React","useCallback","useState","useMemo","List","Modal","Col","Row","Card","CheckCircleFilled","CheckCircleOutlined","useChecked","Terms","setTerms","CheckCircleStyle","color","marginRight","terms","title","content","allTerms","setAllTerms","individualInformationModal","setIndividualInformationModal","thirdPartyInformationModal","setThirdPartyInformationModal","setModals","modals","toggleAllTerms","prev","map","term","index","overflowY"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useMemo } from 'react';\nimport { List, Modal, Col, Row, Card } from 'antd';\nimport { CheckCircleFilled, CheckCircleOutlined } from '@ant-design/icons';\n\nimport { useChecked } from './CustomHooks';\nconst Terms = ({ setTerms }) => {\n  const CheckCircleStyle = useMemo(() => {\n    return { color: '#40A9FF', marginRight: '3%' };\n  }, []);\n\n  const terms = [\n    { title: '개인정보동의', content: '개인정보를 동의해주세요' },\n    { title: '3자정보동의', content: '3자 정보동의를 해주세요' },\n  ];\n  const [allTerms, setAllTerms] = useState(false);\n  const [individualInformationModal, setIndividualInformationModal] = useChecked(false);\n  const [thirdPartyInformationModal, setThirdPartyInformationModal] = useChecked(false);\n\n  const setModals = [setIndividualInformationModal, setThirdPartyInformationModal];\n  const modals = [individualInformationModal, thirdPartyInformationModal];\n\n  const toggleAllTerms = useCallback(() => {\n    setAllTerms((prev) => !prev);\n    if (!allTerms) {\n      setTerms.map((term) => {\n        term[2](true);\n      });\n    } else {\n      setTerms.map((term) => {\n        term[2](false);\n      });\n    }\n  }, [allTerms]);\n\n  return (\n    <>\n      <List\n        header={'약관동의'}\n        bordered={true}\n        itemLayout={'horizontal'}\n        dataSource={terms}\n        renderItem={(term, index) => {\n          return (\n            <List.Item key={index} actions={[<div onClick={setModals[index]}>자세히보기</div>]}>\n              <List.Item.Meta\n                title={\n                  <>\n                    <Row>\n                      <Col span={2}>\n                        {setTerms[index][0] ? (\n                          <CheckCircleFilled\n                            style={CheckCircleStyle}\n                            onClick={setTerms[index][1]}\n                          />\n                        ) : (\n                          <CheckCircleOutlined\n                            style={CheckCircleStyle}\n                            onClick={setTerms[index][1]}\n                          />\n                        )}\n                      </Col>\n                      <Col span={22}>{term.title}</Col>\n                    </Row>\n                  </>\n                }\n              />\n              <Modal\n                title={term.title}\n                visible={modals[index]}\n                onOk={setModals[index]}\n                onCancel={setModals[index]}\n                zIndex={100}\n                style={{ overflowY: 'auto' }}\n              >\n                {term.content}\n              </Modal>\n            </List.Item>\n          );\n        }}\n      />\n      <Card bordered={false}>\n        {allTerms ? (\n          <CheckCircleFilled style={CheckCircleStyle} onClick={toggleAllTerms} />\n        ) : (\n          <CheckCircleOutlined style={CheckCircleStyle} onClick={toggleAllTerms} />\n        )}\n        전체 동의하기\n      </Card>\n    </>\n  );\n};\n\nexport default Terms;\n"]},"metadata":{},"sourceType":"module"}