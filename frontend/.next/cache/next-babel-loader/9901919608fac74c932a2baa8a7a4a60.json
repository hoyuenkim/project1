{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useRouter, query } from 'next/router';\nimport { Card, Typography, tag } from 'antd';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Certificate = function Certificate() {\n  _s();\n\n  var _useRouter = useRouter(),\n      query = _useRouter.query,\n      push = _useRouter.push;\n\n  var username = query.username;\n  return /*#__PURE__*/_jsxs(Card, {\n    children: [/*#__PURE__*/_jsx(Typography.Title, {\n      type: 'success',\n      children: \"\\uD68C\\uC6D0\\uAC00\\uC785\\uC744 \\uCD95\\uD558\\uB4DC\\uB9BD\\uB2C8\\uB2E4!\"\n    }), /*#__PURE__*/_jsx(Typography.Paragraph, {\n      ellipsis: true,\n      type: 'success',\n      children: username\n    }), \"\\uC73C\\uB85C \\uC774\\uBA54\\uC77C\\uC774 \\uC1A1\\uBD80\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\"]\n  });\n};\n\n_s(Certificate, \"wqdEu0BQ41UUTr1rbst5uEV1v68=\", false, function () {\n  return [useRouter];\n});\n\n_c = Certificate;\nexport default Certificate;\n\nvar _c;\n\n$RefreshReg$(_c, \"Certificate\");","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/dev/project1/frontend/pages/user/certificate/[username].js"],"names":["useRouter","query","Card","Typography","tag","Certificate","push","username"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,KAApB,QAAiC,aAAjC;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,GAA3B,QAAsC,MAAtC;;;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA;;AACxB,mBAAwBL,SAAS,EAAjC;AAAA,MAAQC,KAAR,cAAQA,KAAR;AAAA,MAAeK,IAAf,cAAeA,IAAf;;AACA,MAAQC,QAAR,GAAqBN,KAArB,CAAQM,QAAR;AACA,sBACE,MAAC,IAAD;AAAA,4BACE,KAAC,UAAD,CAAY,KAAZ;AAAkB,MAAA,IAAI,EAAE,SAAxB;AAAA;AAAA,MADF,eAIE,KAAC,UAAD,CAAY,SAAZ;AAAsB,MAAA,QAAQ,EAAE,IAAhC;AAAsC,MAAA,IAAI,EAAE,SAA5C;AAAA,gBACGA;AADH,MAJF;AAAA,IADF;AAWD,CAdD;;GAAMF,W;UACoBL,S;;;KADpBK,W;AAgBN,eAAeA,WAAf","sourcesContent":["import { useRouter, query } from 'next/router';\r\nimport { Card, Typography, tag } from 'antd';\r\n\r\nconst Certificate = () => {\r\n  const { query, push } = useRouter();\r\n  const { username } = query;\r\n  return (\r\n    <Card>\r\n      <Typography.Title type={'success'}>\r\n        회원가입을 축하드립니다!\r\n      </Typography.Title>\r\n      <Typography.Paragraph ellipsis={true} type={'success'}>\r\n        {username}\r\n      </Typography.Paragraph>\r\n      으로 이메일이 송부되었습니다.\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Certificate;\r\n"]},"metadata":{},"sourceType":"module"}