{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { Form, Input, Card } from \"antd\";\nimport { useState } from \"react\";\nimport DaumPostcode from \"react-daum-postcode\";\nimport axios from \"axios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar KakaoAddress = function KakaoAddress(_ref) {\n  _s();\n\n  var address = _ref.address,\n      setAddress = _ref.setAddress,\n      setCoordinates = _ref.setCoordinates;\n  console.log(address);\n  axios.defaults.baseURL = process.env.BACKEND_IP;\n\n  var _useState = useState(false),\n      addressToggle = _useState[0],\n      setAddressToggle = _useState[1];\n\n  var handleComplete = function handleComplete(data) {\n    var fullAddress = data.address;\n    var extraAddress = \"\";\n\n    if (data.addressType === \"R\") {\n      if (data.bname !== \"\") {\n        extraAddress += data.bname;\n      }\n\n      if (data.buildingName !== \"\") {\n        extraAddress += extraAddress !== \"\" ? \", \".concat(data.buildingName) : data.buildingName;\n      }\n\n      fullAddress += extraAddress !== \"\" ? \" (\".concat(extraAddress, \")\") : \"\";\n    }\n\n    setAddress(fullAddress);\n    axios.get(\"https://dapi.kakao.com/v2/local/search/address.json?query=\".concat(fullAddress), {\n      headers: {\n        Authorization: \"KakaoAK \".concat(process.env.KAKAO_APIKEY)\n      }\n    }).then(function (res) {\n      var location = res.data.documents[0];\n      console.log(location.address);\n      setCoordinates([Number(location.address.x), Number(location.address.y)]);\n    });\n    setAddressToggle(false);\n  };\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: addressToggle ? /*#__PURE__*/_jsx(Card, {\n      children: /*#__PURE__*/_jsx(DaumPostcode, {\n        onComplete: handleComplete,\n        autoClose: true,\n        height: \"10\"\n      })\n    }) : /*#__PURE__*/_jsx(Form.Item, {\n      name: \"address\",\n      initialValue: address,\n      rules: [{\n        required: true,\n        message: \"주소를 입력해주세요\"\n      }],\n      children: /*#__PURE__*/_jsx(Input, {\n        prefix: \"* \\uC8FC\\uC18C\",\n        name: \"address\",\n        value: address,\n        readOnly: true,\n        onClick: function onClick() {\n          return setAddressToggle(true);\n        },\n        size: \"large\"\n      })\n    })\n  });\n};\n\n_s(KakaoAddress, \"ypSH+kA9dqCALtjKqDYrXK9BPuY=\");\n\n_c = KakaoAddress;\nexport default KakaoAddress;\n\nvar _c;\n\n$RefreshReg$(_c, \"KakaoAddress\");","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/dev/project1/frontend/components/Generalui/KakaoAddress.js"],"names":["Form","Input","Card","useState","DaumPostcode","axios","KakaoAddress","address","setAddress","setCoordinates","console","log","defaults","baseURL","process","env","BACKEND_IP","addressToggle","setAddressToggle","handleComplete","data","fullAddress","extraAddress","addressType","bname","buildingName","get","headers","Authorization","KAKAO_APIKEY","then","res","location","documents","Number","x","y","required","message"],"mappings":"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","sourcesContent":["import { Form, Input, Card } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport DaumPostcode from \"react-daum-postcode\";\r\nimport axios from \"axios\";\r\n\r\nconst KakaoAddress = ({ address, setAddress, setCoordinates }) => {\r\n  console.log(address);\r\n  axios.defaults.baseURL = process.env.BACKEND_IP;\r\n  const [addressToggle, setAddressToggle] = useState(false);\r\n\r\n  const handleComplete = (data) => {\r\n    let fullAddress = data.address;\r\n    let extraAddress = \"\";\r\n\r\n    if (data.addressType === \"R\") {\r\n      if (data.bname !== \"\") {\r\n        extraAddress += data.bname;\r\n      }\r\n      if (data.buildingName !== \"\") {\r\n        extraAddress += extraAddress !== \"\" ? `, ${data.buildingName}` : data.buildingName;\r\n      }\r\n      fullAddress += extraAddress !== \"\" ? ` (${extraAddress})` : \"\";\r\n    }\r\n\r\n    setAddress(fullAddress);\r\n\r\n    axios\r\n      .get(`https://dapi.kakao.com/v2/local/search/address.json?query=${fullAddress}`, {\r\n        headers: {\r\n          Authorization: `KakaoAK ${process.env.KAKAO_APIKEY}`,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        const location = res.data.documents[0];\r\n        console.log(location.address);\r\n        setCoordinates([Number(location.address.x), Number(location.address.y)]);\r\n      });\r\n\r\n    setAddressToggle(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {addressToggle ? (\r\n        <Card>\r\n          <DaumPostcode onComplete={handleComplete} autoClose={true} height={\"10\"} />\r\n        </Card>\r\n      ) : (\r\n        <Form.Item\r\n          name=\"address\"\r\n          initialValue={address}\r\n          rules={[{ required: true, message: \"주소를 입력해주세요\" }]}\r\n        >\r\n          <Input\r\n            prefix=\"* 주소\"\r\n            name={\"address\"}\r\n            value={address}\r\n            readOnly\r\n            onClick={() => setAddressToggle(true)}\r\n            size={\"large\"}\r\n          />\r\n        </Form.Item>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default KakaoAddress;\r\n"]},"metadata":{},"sourceType":"module"}