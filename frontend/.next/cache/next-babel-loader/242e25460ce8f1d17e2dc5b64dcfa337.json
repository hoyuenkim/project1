{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { Card, Carousel, Image, List, Switch } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { useRouter } from \"next/router\";\nimport { LOAD_EVENTS_REQUEST, PAGE_CHANGE_SUCCESS } from \"../reducers/admin\";\nimport { CLEAR_CART_REQUEST } from \"../reducers/cart\";\nimport MapComponent from \"../components/Generalui/MapComponent\";\nimport { SET_SHOPCOORDINATES_SUCCESS } from \"../reducers/shop\";\nimport { onClickPayment } from \"../components/Generalui/Payment\";\nimport ModalInterface from \"../components/Generalui/Modal\";\nimport StockList from \"../components/Generalui/StockList\";\nimport { LOAD_LIST_SUCCESS } from \"../reducers/stock\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Index = function Index() {\n  _s();\n\n  axios.defaults.baseURL = \"\".concat(process.env.BACKEND_IP);\n  var dispatch = useDispatch();\n  var router = useRouter();\n\n  var _useState = useState(true),\n      toggle = _useState[0],\n      setToggle = _useState[1];\n\n  var onChangeToggle = function onChangeToggle() {\n    setToggle(function (prev) {\n      return !prev;\n    });\n  };\n\n  var _useState2 = useState(false),\n      toggleModal = _useState2[0],\n      setToggleModal = _useState2[1];\n\n  var onChangeToggleModal = function onChangeToggleModal() {\n    return setToggleModal(function (prev) {\n      return !prev;\n    });\n  };\n\n  var _useSelector = useSelector(function (state) {\n    return state.shop;\n  }),\n      shopCoordinates = _useSelector.shopCoordinates;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.stock;\n  }),\n      stocks = _useSelector2.stocks;\n\n  useEffect(function () {\n    dispatch({\n      type: LOAD_EVENTS_REQUEST\n    });\n  }, []);\n  useEffect(function () {\n    dispatch({\n      type: PAGE_CHANGE_SUCCESS,\n      data: \"index\"\n    });\n  }, []);\n\n  var _useSelector3 = useSelector(function (state) {\n    return state.admin;\n  }),\n      events = _useSelector3.events;\n\n  var _useSelector4 = useSelector(function (state) {\n    return state.user;\n  }),\n      isLoggedIn = _useSelector4.isLoggedIn,\n      session = _useSelector4.session;\n\n  useEffect(function () {\n    if (session && shopCoordinates === undefined) {\n      console.log(\"start\");\n      axios.post(\"/stock\", {\n        id: session.id\n      }).then(function (result) {\n        console.log(result);\n        dispatch({\n          type: SET_SHOPCOORDINATES_SUCCESS,\n          data: result.data\n        });\n        dispatch({\n          type: LOAD_LIST_SUCCESS,\n          data: result.data\n        });\n      })[\"catch\"](function (err) {\n        return console.error(err);\n      });\n    }\n  }, [session, shopCoordinates]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(ModalInterface, {\n      content: \"로그인을 하셔야 합니다.\",\n      toggleModal: toggleModal,\n      onChangeToggleModal: onChangeToggleModal,\n      title: \"경고\"\n    }), isLoggedIn && session ? /*#__PURE__*/_jsx(Card, {\n      title: toggle ? \"주변 가게\" : \"추천 메뉴\",\n      extra: /*#__PURE__*/_jsx(Switch, {\n        onClick: onChangeToggle\n      }),\n      children: toggle ? /*#__PURE__*/_jsx(MapComponent, {\n        session: session,\n        shopCoordinates: shopCoordinates\n      }) : /*#__PURE__*/_jsx(List, {\n        dataSource: stocks,\n        renderItem: function renderItem(item) {\n          var id = item.id,\n              stock = item.stock,\n              Product = item.Product,\n              quantity = item.quantity,\n              Shop = item.Shop,\n              discount = item.discount;\n          return /*#__PURE__*/_jsx(StockList, {\n            id: id,\n            product: Product,\n            price: Product.price,\n            shop: Shop,\n            discount: discount,\n            quantity: quantity\n          });\n        }\n      })\n    }) : /*#__PURE__*/_jsx(Card, {\n      children: /*#__PURE__*/_jsx(Card.Meta, {\n        description: /*#__PURE__*/_jsx(\"div\", {\n          style: {\n            height: \"100vh\",\n            width: \"100%\"\n          },\n          children: /*#__PURE__*/_jsx(Carousel, {\n            autoplay: true,\n            dots: false,\n            children: events.map(function (event) {\n              return /*#__PURE__*/_jsx(Image, {\n                onClick: router.push(\"/event/\".concat(event.id)),\n                style: {\n                  height: \"100vh\",\n                  width: \"100%\"\n                },\n                src: \"\".concat(process.env.BACKEND_IP, \"/uploads/\").concat(event.Images[0].url)\n              });\n            })\n          })\n        })\n      })\n    })]\n  });\n};\n\n_s(Index, \"plwxIQHDznPkHW1T+90gIsD4/Dw=\", false, function () {\n  return [useDispatch, useRouter, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/Dev/project1/frontend/pages/index.js"],"names":["Card","Carousel","Image","List","Switch","useEffect","useState","useDispatch","useSelector","axios","useRouter","LOAD_EVENTS_REQUEST","PAGE_CHANGE_SUCCESS","CLEAR_CART_REQUEST","MapComponent","SET_SHOPCOORDINATES_SUCCESS","onClickPayment","ModalInterface","StockList","LOAD_LIST_SUCCESS","Index","defaults","baseURL","process","env","BACKEND_IP","dispatch","router","toggle","setToggle","onChangeToggle","prev","toggleModal","setToggleModal","onChangeToggleModal","state","shop","shopCoordinates","stock","stocks","type","data","admin","events","user","isLoggedIn","session","undefined","console","log","post","id","then","result","err","error","item","Product","quantity","Shop","discount","price","height","width","map","event","push","Images","url"],"mappings":"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","sourcesContent":["import { Card, Carousel, Image, List, Switch } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { useRouter } from \"next/router\";\nimport { LOAD_EVENTS_REQUEST, PAGE_CHANGE_SUCCESS } from \"../reducers/admin\";\nimport { CLEAR_CART_REQUEST } from \"../reducers/cart\";\nimport MapComponent from \"../components/Generalui/MapComponent\";\nimport { SET_SHOPCOORDINATES_SUCCESS } from \"../reducers/shop\";\nimport { onClickPayment } from \"../components/Generalui/Payment\";\nimport ModalInterface from \"../components/Generalui/Modal\";\nimport StockList from \"../components/Generalui/StockList\";\nimport { LOAD_LIST_SUCCESS } from \"../reducers/stock\";\n\nconst Index = () => {\n  axios.defaults.baseURL = `${process.env.BACKEND_IP}`;\n\n  const dispatch = useDispatch();\n  const router = useRouter();\n\n  const [toggle, setToggle] = useState(true);\n  const onChangeToggle = () => {\n    setToggle((prev) => !prev);\n  };\n\n  const [toggleModal, setToggleModal] = useState(false);\n\n  const onChangeToggleModal = () => setToggleModal((prev) => !prev);\n\n  const { shopCoordinates } = useSelector((state) => state.shop);\n  const { stocks } = useSelector((state) => state.stock);\n\n  useEffect(() => {\n    dispatch({ type: LOAD_EVENTS_REQUEST });\n  }, []);\n\n  useEffect(() => {\n    dispatch({ type: PAGE_CHANGE_SUCCESS, data: \"index\" });\n  }, []);\n\n  const { events } = useSelector((state) => state.admin);\n  const { isLoggedIn, session } = useSelector((state) => state.user);\n\n  useEffect(() => {\n    if (session && shopCoordinates === undefined) {\n      console.log(\"start\");\n      axios\n        .post(\"/stock\", { id: session.id })\n        .then((result) => {\n          console.log(result);\n          dispatch({ type: SET_SHOPCOORDINATES_SUCCESS, data: result.data });\n          dispatch({ type: LOAD_LIST_SUCCESS, data: result.data });\n        })\n        .catch((err) => console.error(err));\n    }\n  }, [session, shopCoordinates]);\n\n  return (\n    <>\n      <ModalInterface\n        content={\"로그인을 하셔야 합니다.\"}\n        toggleModal={toggleModal}\n        onChangeToggleModal={onChangeToggleModal}\n        title={\"경고\"}\n      />\n      {isLoggedIn && session ? (\n        <Card\n          title={toggle ? \"주변 가게\" : \"추천 메뉴\"}\n          extra={<Switch onClick={onChangeToggle} />}\n        >\n          {toggle ? (\n            <MapComponent session={session} shopCoordinates={shopCoordinates} />\n          ) : (\n            <List\n              dataSource={stocks}\n              renderItem={(item) => {\n                const { id, stock, Product, quantity, Shop, discount } = item;\n                return (\n                  <StockList\n                    id={id}\n                    product={Product}\n                    price={Product.price}\n                    shop={Shop}\n                    discount={discount}\n                    quantity={quantity}\n                  />\n                );\n              }}\n            />\n          )}\n        </Card>\n      ) : (\n        <Card>\n          <Card.Meta\n            description={\n              <div style={{ height: \"100vh\", width: \"100%\" }}>\n                <Carousel autoplay dots={false}>\n                  {events.map((event) => (\n                    <Image\n                      onClick={router.push(`/event/${event.id}`)}\n                      style={{ height: \"100vh\", width: \"100%\" }}\n                      src={`${process.env.BACKEND_IP}/uploads/${event.Images[0].url}`}\n                    />\n                  ))}\n                </Carousel>\n              </div>\n            }\n          />\n        </Card>\n      )}\n    </>\n  );\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}