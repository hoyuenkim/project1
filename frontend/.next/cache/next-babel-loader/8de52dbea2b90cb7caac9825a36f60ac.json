{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { Card, Col, Space, Row, Divider, message, Typography, Modal, Tag } from \"antd\";\nimport NumberFormat from \"react-number-format\";\nimport ListToggle from \"./Generalui/ListToggle\";\nimport { useDispatch } from \"react-redux\";\nimport { ADD_CART_ITEM_REQUEST, CLEAR_CART_REQUEST } from \"../reducers/cart\";\nimport { INITIATE_QUANTITY_REQUEST } from \"../reducers/menu\";\nimport { useSelector } from \"react-redux\";\nimport { useState, useEffect } from \"react\";\nimport OneSignal from \"react-onesignal\";\nimport { onClickPayment } from \"./Generalui/Payment\";\nimport ModalInterface from \"./Generalui/Modal\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar Product = function Product(_ref) {\n  _s();\n\n  var product = _ref.product,\n      quantity = _ref.quantity,\n      discount = _ref.discount,\n      stock = _ref.stock,\n      id = _ref.id;\n  console.log(quantity);\n\n  var _useState = useState(false),\n      toggleModal = _useState[0],\n      setToggleModal = _useState[1];\n\n  var _useState2 = useState(),\n      IMP = _useState2[0],\n      setIMP = _useState2[1];\n\n  var onChangeToggleModal = function onChangeToggleModal() {\n    return setToggleModal(function (prev) {\n      return !prev;\n    });\n  };\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      isLoggedIn = _useSelector.isLoggedIn,\n      session = _useSelector.session;\n\n  useEffect(function () {\n    var _window = window,\n        IMP = _window.IMP;\n    setIMP(IMP);\n  }, []);\n\n  var onClickAddCart = function onClickAddCart() {\n    var discountedProduct = _objectSpread(_objectSpread({}, product), {}, {\n      price: product.price * discount,\n      amount: product.price * discount * quantity\n    });\n\n    dispatch({\n      type: ADD_CART_ITEM_REQUEST,\n      product: discountedProduct\n    });\n    dispatch({\n      type: INITIATE_QUANTITY_REQUEST,\n      data: product\n    });\n  };\n\n  var paymentStart = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return dispatch({\n                type: CLEAR_CART_REQUEST\n              });\n\n            case 2:\n              return _context.abrupt(\"return\", onClickPayment(\"single\", product, isLoggedIn, session, onChangeToggleModal));\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function paymentStart() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(ModalInterface, {\n      content: \"로그인을 하셔야 합니다.\",\n      toggleModal: toggleModal,\n      onChangeToggleModal: onChangeToggleModal,\n      title: \"경고\"\n    }), /*#__PURE__*/_jsx(Card, {\n      title: /*#__PURE__*/_jsxs(Space, {\n        children: [/*#__PURE__*/_jsx(Typography.Title, {\n          level: 3,\n          children: product.title\n        }), \" \", /*#__PURE__*/_jsxs(Tag, {\n          color: \"magenta\",\n          children: [\"-\", discount * 100, \"%\"]\n        })]\n      }),\n      actions: [/*#__PURE__*/_jsx(\"div\", {\n        onClick: paymentStart,\n        children: \"\\uC989\\uC2DC \\uAD6C\\uB9E4\"\n      }), /*#__PURE__*/_jsx(\"div\", {\n        onClick: onClickAddCart,\n        children: \"\\uC7A5\\uBC14\\uAD6C\\uB2C8\"\n      })],\n      cover: /*#__PURE__*/_jsx(\"img\", {\n        style: {\n          border: \"1px solid #EFF2F5\"\n        },\n        src: product && product.Images[0] && \"\".concat(process.env.BACKEND_IP, \"/uploads/\").concat(product.Images[0].url)\n      }),\n      hoverable: true,\n      children: /*#__PURE__*/_jsx(Card.Meta, {\n        description: /*#__PURE__*/_jsxs(_Fragment, {\n          children: [/*#__PURE__*/_jsxs(Row, {\n            gutter: [16, 16],\n            align: \"middle\",\n            justify: \"end\",\n            children: [/*#__PURE__*/_jsx(Col, {\n              md: 16,\n              xs: 16,\n              style: {\n                display: \"inline-block\"\n              },\n              children: /*#__PURE__*/_jsxs(_Fragment, {\n                children: [/*#__PURE__*/_jsx(\"h5\", {\n                  children: \"\\uAC00\\uACA9\"\n                }), /*#__PURE__*/_jsxs(Space, {\n                  align: \"center\",\n                  children: [/*#__PURE__*/_jsxs(\"h1\", {\n                    style: {\n                      color: \"#FF5733\",\n                      fontWeight: \"bold\"\n                    },\n                    children: [/*#__PURE__*/_jsx(NumberFormat, {\n                      value: product.price * (1 - discount),\n                      displayType: \"text\",\n                      thousandSeparator: true\n                    }), \"\\uC6D0\"]\n                  }), /*#__PURE__*/_jsxs(Tag, {\n                    children: [/*#__PURE__*/_jsx(NumberFormat, {\n                      value: product.price,\n                      displayType: \"text\",\n                      thousandSeparator: true\n                    }), \"\\uC6D0\"]\n                  }), \"  \"]\n                })]\n              })\n            }), /*#__PURE__*/_jsx(Col, {\n              md: 8,\n              xs: 8,\n              children: /*#__PURE__*/_jsx(ListToggle, {\n                id: id,\n                quantity: quantity,\n                stock: stock\n              })\n            })]\n          }), /*#__PURE__*/_jsx(Divider, {}), /*#__PURE__*/_jsxs(Row, {\n            align: \"middle\",\n            justify: \"center\",\n            children: [/*#__PURE__*/_jsx(Col, {\n              span: 8,\n              xs: 8,\n              children: /*#__PURE__*/_jsx(\"div\", {\n                children: \"\\uCD1D \\uC8FC\\uBB38\\uAE08\\uC561\"\n              })\n            }), /*#__PURE__*/_jsx(Col, {\n              span: 16,\n              xs: 16,\n              children: /*#__PURE__*/_jsx(\"div\", {\n                style: {\n                  textAlign: \"right\"\n                },\n                children: /*#__PURE__*/_jsxs(\"h1\", {\n                  children: [/*#__PURE__*/_jsx(NumberFormat, {\n                    value: product.price * (1 - discount) * quantity,\n                    displayType: \"text\",\n                    thousandSeparator: true\n                  }), \"\\uC6D0\"]\n                })\n              })\n            })]\n          })]\n        })\n      })\n    }, product.id)]\n  });\n};\n\n_s(Product, \"WKrdUE87Ajm0j9G2ETffWYAWzBY=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Product;\nexport default Product;\n\nvar _c;\n\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/dev/project1/frontend/components/Product.js"],"names":["Card","Col","Space","Row","Divider","message","Typography","Modal","Tag","NumberFormat","ListToggle","useDispatch","ADD_CART_ITEM_REQUEST","CLEAR_CART_REQUEST","INITIATE_QUANTITY_REQUEST","useSelector","useState","useEffect","OneSignal","onClickPayment","ModalInterface","Product","product","quantity","discount","stock","id","console","log","toggleModal","setToggleModal","IMP","setIMP","onChangeToggleModal","prev","dispatch","state","user","isLoggedIn","session","window","onClickAddCart","discountedProduct","price","amount","type","data","paymentStart","title","border","Images","process","env","BACKEND_IP","url","display","color","fontWeight","textAlign"],"mappings":"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","sourcesContent":["import { Card, Col, Space, Row, Divider, message, Typography, Modal, Tag } from \"antd\";\nimport NumberFormat from \"react-number-format\";\nimport ListToggle from \"./Generalui/ListToggle\";\nimport { useDispatch } from \"react-redux\";\nimport { ADD_CART_ITEM_REQUEST, CLEAR_CART_REQUEST } from \"../reducers/cart\";\nimport { INITIATE_QUANTITY_REQUEST } from \"../reducers/menu\";\nimport { useSelector } from \"react-redux\";\nimport { useState, useEffect } from \"react\";\nimport OneSignal from \"react-onesignal\";\nimport { onClickPayment } from \"./Generalui/Payment\";\nimport ModalInterface from \"./Generalui/Modal\";\n\nconst Product = ({ product, quantity, discount, stock, id }) => {\n  console.log(quantity);\n  const [toggleModal, setToggleModal] = useState(false);\n  const [IMP, setIMP] = useState();\n  const onChangeToggleModal = () => setToggleModal((prev) => !prev);\n  const dispatch = useDispatch();\n\n  const { isLoggedIn, session } = useSelector((state) => state.user);\n\n  useEffect(() => {\n    const { IMP } = window;\n    setIMP(IMP);\n  }, []);\n\n  const onClickAddCart = () => {\n    const discountedProduct = {\n      ...product,\n      price: product.price * discount,\n      amount: product.price * discount * quantity,\n    };\n    dispatch({\n      type: ADD_CART_ITEM_REQUEST,\n      product: discountedProduct,\n    });\n    dispatch({ type: INITIATE_QUANTITY_REQUEST, data: product });\n  };\n\n  const paymentStart = async () => {\n    await dispatch({ type: CLEAR_CART_REQUEST });\n    return onClickPayment(\"single\", product, isLoggedIn, session, onChangeToggleModal);\n  };\n\n  return (\n    <>\n      <ModalInterface\n        content={\"로그인을 하셔야 합니다.\"}\n        toggleModal={toggleModal}\n        onChangeToggleModal={onChangeToggleModal}\n        title={\"경고\"}\n      />\n      <Card\n        key={product.id}\n        title={\n          <Space>\n            <Typography.Title level={3}>{product.title}</Typography.Title>{\" \"}\n            <Tag color={\"magenta\"}>-{discount * 100}%</Tag>\n          </Space>\n        }\n        actions={[\n          <div onClick={paymentStart}>즉시 구매</div>,\n          <div onClick={onClickAddCart}>장바구니</div>,\n        ]}\n        cover={\n          <img\n            style={{ border: `1px solid #EFF2F5` }}\n            src={\n              product &&\n              product.Images[0] &&\n              `${process.env.BACKEND_IP}/uploads/${product.Images[0].url}`\n            }\n          />\n        }\n        hoverable\n      >\n        <Card.Meta\n          description={\n            <>\n              <Row gutter={[16, 16]} align={\"middle\"} justify={\"end\"}>\n                <Col md={16} xs={16} style={{ display: \"inline-block\" }}>\n                  <>\n                    <h5>가격</h5>\n                    <Space align=\"center\">\n                      <h1 style={{ color: \"#FF5733\", fontWeight: \"bold\" }}>\n                        <NumberFormat\n                          value={product.price * (1 - discount)}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                        원\n                      </h1>\n                      <Tag>\n                        <NumberFormat\n                          value={product.price}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                        원\n                      </Tag>\n                      {\"  \"}\n                    </Space>\n                  </>\n                </Col>\n                <Col md={8} xs={8}>\n                  <ListToggle id={id} quantity={quantity} stock={stock} />\n                </Col>\n              </Row>\n              <Divider />\n              <Row align={\"middle\"} justify={\"center\"}>\n                <Col span={8} xs={8}>\n                  <div>총 주문금액</div>\n                </Col>\n                <Col span={16} xs={16}>\n                  <div style={{ textAlign: \"right\" }}>\n                    <h1>\n                      <NumberFormat\n                        value={product.price * (1 - discount) * quantity}\n                        displayType={\"text\"}\n                        thousandSeparator={true}\n                      />\n                      원\n                    </h1>\n                  </div>\n                </Col>\n              </Row>\n            </>\n          }\n        />\n      </Card>\n    </>\n  );\n};\n\nexport default Product;\n"]},"metadata":{},"sourceType":"module"}