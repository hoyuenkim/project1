{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { Form, Input } from \"antd\";\nimport { useState } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar KakaoAddress = function KakaoAddress(_ref) {\n  _s();\n\n  var address = _ref.address,\n      setAddress = _ref.setAddress,\n      addressDetail = _ref.addressDetail,\n      onChangeAddressDetail = _ref.onChangeAddressDetail,\n      coordinates = _ref.coordinates,\n      setCoordinates = _ref.setCoordinates;\n\n  var _useState = useState(false),\n      addressToggle = _useState[0],\n      setAddressToggle = _useState[1];\n\n  var handleComplete = function handleComplete(data) {\n    var fullAddress = data.address;\n    var extraAddress = \"\";\n\n    if (data.addressType === \"R\") {\n      if (data.bname !== \"\") {\n        extraAddress += data.bname;\n      }\n\n      if (data.buildingName !== \"\") {\n        extraAddress += extraAddress !== \"\" ? \", \".concat(data.buildingName) : data.buildingName;\n      }\n\n      fullAddress += extraAddress !== \"\" ? \" (\".concat(extraAddress, \")\") : \"\";\n    }\n\n    setAddress(fullAddress);\n    axios.get(\"https://dapi.kakao.com/v2/local/search/address.json?query=\".concat(fullAddress), {\n      headers: {\n        Authorization: \"KakaoAK \".concat(process.env.KAKAO_APIKEY)\n      }\n    }).then(function (res) {\n      var location = res.data.documents[0];\n      console.log(location.address);\n      setCoordinates([Number(location.address.x), Number(location.address.y)]);\n    });\n    setAddressToggle(false);\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [addressToggle ? /*#__PURE__*/_jsx(Card, {\n      children: /*#__PURE__*/_jsx(DaumPostcode, {\n        onComplete: handleComplete,\n        autoClose: true,\n        height: \"10\"\n      })\n    }) : /*#__PURE__*/_jsx(Form.Item, {\n      name: \"address\",\n      initialValue: address,\n      rules: [{\n        required: true,\n        message: \"주소를 입력해주세요\"\n      }],\n      children: /*#__PURE__*/_jsx(Input, {\n        prefix: \"* \\uC8FC\\uC18C\",\n        name: \"address\",\n        readOnly: true,\n        onClick: function onClick() {\n          return setAddressToggle(true);\n        },\n        size: \"large\"\n      })\n    }), /*#__PURE__*/_jsx(Form.Item, {\n      children: /*#__PURE__*/_jsx(Input, {\n        prefix: \"* \\uC0C1\\uC138\\uC8FC\\uC18C\",\n        name: \"addressDetail\",\n        onChange: onChangeAddressDetail,\n        size: \"large\"\n      })\n    })]\n  });\n};\n\n_s(KakaoAddress, \"ypSH+kA9dqCALtjKqDYrXK9BPuY=\");\n\n_c = KakaoAddress;\nexport default KakaoAddress;\n\nvar _c;\n\n$RefreshReg$(_c, \"KakaoAddress\");","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/dev/project1/frontend/components/Generalui/KakaoAddress.js"],"names":["Form","Input","useState","KakaoAddress","address","setAddress","addressDetail","onChangeAddressDetail","coordinates","setCoordinates","addressToggle","setAddressToggle","handleComplete","data","fullAddress","extraAddress","addressType","bname","buildingName","axios","get","headers","Authorization","process","env","KAKAO_APIKEY","then","res","location","documents","console","log","Number","x","y","required","message"],"mappings":"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","sourcesContent":["import { Form, Input } from \"antd\";\r\nimport { useState } from \"react\";\r\n\r\nconst KakaoAddress = ({\r\n  address,\r\n  setAddress,\r\n  addressDetail,\r\n  onChangeAddressDetail,\r\n  coordinates,\r\n  setCoordinates,\r\n}) => {\r\n  const [addressToggle, setAddressToggle] = useState(false);\r\n\r\n  const handleComplete = (data) => {\r\n    let fullAddress = data.address;\r\n    let extraAddress = \"\";\r\n\r\n    if (data.addressType === \"R\") {\r\n      if (data.bname !== \"\") {\r\n        extraAddress += data.bname;\r\n      }\r\n      if (data.buildingName !== \"\") {\r\n        extraAddress += extraAddress !== \"\" ? `, ${data.buildingName}` : data.buildingName;\r\n      }\r\n      fullAddress += extraAddress !== \"\" ? ` (${extraAddress})` : \"\";\r\n    }\r\n\r\n    setAddress(fullAddress);\r\n\r\n    axios\r\n      .get(`https://dapi.kakao.com/v2/local/search/address.json?query=${fullAddress}`, {\r\n        headers: {\r\n          Authorization: `KakaoAK ${process.env.KAKAO_APIKEY}`,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        const location = res.data.documents[0];\r\n        console.log(location.address);\r\n        setCoordinates([Number(location.address.x), Number(location.address.y)]);\r\n      });\r\n\r\n    setAddressToggle(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {addressToggle ? (\r\n        <Card>\r\n          <DaumPostcode onComplete={handleComplete} autoClose={true} height={\"10\"} />\r\n        </Card>\r\n      ) : (\r\n        <Form.Item\r\n          name=\"address\"\r\n          initialValue={address}\r\n          rules={[{ required: true, message: \"주소를 입력해주세요\" }]}\r\n        >\r\n          <Input\r\n            prefix=\"* 주소\"\r\n            name={\"address\"}\r\n            readOnly\r\n            onClick={() => setAddressToggle(true)}\r\n            size={\"large\"}\r\n          />\r\n        </Form.Item>\r\n      )}\r\n      <Form.Item>\r\n        <Input\r\n          prefix=\"* 상세주소\"\r\n          name={\"addressDetail\"}\r\n          onChange={onChangeAddressDetail}\r\n          size={\"large\"}\r\n        />\r\n      </Form.Item>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default KakaoAddress;\r\n"]},"metadata":{},"sourceType":"module"}