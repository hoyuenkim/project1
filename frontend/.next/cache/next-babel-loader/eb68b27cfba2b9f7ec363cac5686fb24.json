{"ast":null,"code":"import { Input, Modal, List } from \"antd\";\nimport { useDispatch } from \"react-redux\";\nimport { SEARCH_PRODUCT_SUCCESS } from \"../../reducers/menu\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { SET_COORDINATES_SUCCESS } from \"../../reducers/user\";\nimport { useSelector } from \"react-redux\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst SearchBar = ({\n  setToggleSearch,\n  setVisible,\n  setList\n}) => {\n  const dispatch = useDispatch();\n  const {\n    0: text,\n    1: setText\n  } = useState();\n\n  const onChangeText = e => setText(e.target.value);\n\n  const {\n    type\n  } = useSelector(state => state.admin);\n\n  const onSearch = () => {\n    if (type == \"menu\") {\n      dispatch({\n        type: SEARCH_PRODUCT_SUCCESS,\n        data: {\n          text\n        }\n      });\n    } else if (type == \"index\") {\n      axios.get(`https://dapi.kakao.com/v2/local/search/keyword?query=${text}&size=15`, {\n        headers: {\n          Authorization: `KakaoAK ${process.env.KAKAO_APIKEY}`\n        }\n      }).then(res => {\n        const location = res.data.documents;\n\n        if (location.length === 1) {\n          dispatch({\n            type: SET_COORDINATES_SUCCESS,\n            data: {\n              lat: Number(location[0].address.x),\n              lng: Number(location[0].address.y)\n            }\n          });\n          setVisible(false);\n        } else {\n          setList(location);\n          setVisible(false);\n        }\n      });\n    }\n\n    setText();\n    setToggleSearch(false);\n  };\n\n  return /*#__PURE__*/_jsx(Input.Search, {\n    size: \"large\",\n    value: text,\n    onChange: onChangeText,\n    enterButton: true,\n    onSearch: onSearch\n  });\n};\n\nexport default SearchBar;","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/dev/project1/frontend/components/Forms/SearchBar.js"],"names":["Input","Modal","List","useDispatch","SEARCH_PRODUCT_SUCCESS","useState","axios","SET_COORDINATES_SUCCESS","useSelector","SearchBar","setToggleSearch","setVisible","setList","dispatch","text","setText","onChangeText","e","target","value","type","state","admin","onSearch","data","get","headers","Authorization","process","env","KAKAO_APIKEY","then","res","location","documents","length","lat","Number","address","x","lng","y"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,KAAhB,EAAuBC,IAAvB,QAAmC,MAAnC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,sBAAT,QAAuC,qBAAvC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,uBAAT,QAAwC,qBAAxC;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,eAAF;AAAmBC,EAAAA,UAAnB;AAA+BC,EAAAA;AAA/B,CAAD,KAA8C;AAC9D,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAM;AAAA,OAACW,IAAD;AAAA,OAAOC;AAAP,MAAkBV,QAAQ,EAAhC;;AACA,QAAMW,YAAY,GAAIC,CAAD,IAAOF,OAAO,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAnC;;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAWZ,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACC,KAAlB,CAA5B;;AAEA,QAAMC,QAAQ,GAAG,MAAM;AACrB,QAAIH,IAAI,IAAI,MAAZ,EAAoB;AAClBP,MAAAA,QAAQ,CAAC;AACPO,QAAAA,IAAI,EAAEhB,sBADC;AAEPoB,QAAAA,IAAI,EAAE;AAAEV,UAAAA;AAAF;AAFC,OAAD,CAAR;AAID,KALD,MAKO,IAAIM,IAAI,IAAI,OAAZ,EAAqB;AAC1Bd,MAAAA,KAAK,CACFmB,GADH,CACQ,wDAAuDX,IAAK,UADpE,EAC+E;AAC3EY,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAG,WAAUC,OAAO,CAACC,GAAR,CAAYC,YAAa;AAD5C;AADkE,OAD/E,EAMGC,IANH,CAMSC,GAAD,IAAS;AACb,cAAMC,QAAQ,GAAGD,GAAG,CAACR,IAAJ,CAASU,SAA1B;;AAEA,YAAID,QAAQ,CAACE,MAAT,KAAoB,CAAxB,EAA2B;AACzBtB,UAAAA,QAAQ,CAAC;AACPO,YAAAA,IAAI,EAAEb,uBADC;AAEPiB,YAAAA,IAAI,EAAE;AACJY,cAAAA,GAAG,EAAEC,MAAM,CAACJ,QAAQ,CAAC,CAAD,CAAR,CAAYK,OAAZ,CAAoBC,CAArB,CADP;AAEJC,cAAAA,GAAG,EAAEH,MAAM,CAACJ,QAAQ,CAAC,CAAD,CAAR,CAAYK,OAAZ,CAAoBG,CAArB;AAFP;AAFC,WAAD,CAAR;AAOA9B,UAAAA,UAAU,CAAC,KAAD,CAAV;AACD,SATD,MASO;AACLC,UAAAA,OAAO,CAACqB,QAAD,CAAP;AACAtB,UAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,OAtBH;AAuBD;;AACDI,IAAAA,OAAO;AACPL,IAAAA,eAAe,CAAC,KAAD,CAAf;AACD,GAjCD;;AAmCA,sBACE,KAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAE,OADR;AAEE,IAAA,KAAK,EAAEI,IAFT;AAGE,IAAA,QAAQ,EAAEE,YAHZ;AAIE,IAAA,WAAW,MAJb;AAKE,IAAA,QAAQ,EAAEO;AALZ,IADF;AASD,CAnDD;;AAqDA,eAAed,SAAf","sourcesContent":["import { Input, Modal, List } from \"antd\";\nimport { useDispatch } from \"react-redux\";\nimport { SEARCH_PRODUCT_SUCCESS } from \"../../reducers/menu\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { SET_COORDINATES_SUCCESS } from \"../../reducers/user\";\nimport { useSelector } from \"react-redux\";\n\nconst SearchBar = ({ setToggleSearch, setVisible, setList }) => {\n  const dispatch = useDispatch();\n  const [text, setText] = useState();\n  const onChangeText = (e) => setText(e.target.value);\n\n  const { type } = useSelector((state) => state.admin);\n\n  const onSearch = () => {\n    if (type == \"menu\") {\n      dispatch({\n        type: SEARCH_PRODUCT_SUCCESS,\n        data: { text },\n      });\n    } else if (type == \"index\") {\n      axios\n        .get(`https://dapi.kakao.com/v2/local/search/keyword?query=${text}&size=15`, {\n          headers: {\n            Authorization: `KakaoAK ${process.env.KAKAO_APIKEY}`,\n          },\n        })\n        .then((res) => {\n          const location = res.data.documents;\n\n          if (location.length === 1) {\n            dispatch({\n              type: SET_COORDINATES_SUCCESS,\n              data: {\n                lat: Number(location[0].address.x),\n                lng: Number(location[0].address.y),\n              },\n            });\n            setVisible(false);\n          } else {\n            setList(location);\n            setVisible(false);\n          }\n        });\n    }\n    setText();\n    setToggleSearch(false);\n  };\n\n  return (\n    <Input.Search\n      size={\"large\"}\n      value={text}\n      onChange={onChangeText}\n      enterButton\n      onSearch={onSearch}\n    />\n  );\n};\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}