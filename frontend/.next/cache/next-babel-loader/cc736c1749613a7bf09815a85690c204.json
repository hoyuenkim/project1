{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport { Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux'; // import { PAYMENT_REQUEST } from \"../reducers/payment\";\n\nimport axios from 'axios';\n\nconst Import = () => {\n  const dispatch = useDispatch();\n\n  () => {\n    if (IMP !== null) {\n      IMP.init('imp37098043');\n      IMP.request_pay({\n        pg: 'kakao',\n        // version 1.1.0부터 지원.\n        pay_method: 'card',\n        merchant_uid: 'shopId' + new Date().getTime(),\n        name: 'shopId' + new Date().getTime(),\n        amount: 1,\n        buyer_email: 'session.email',\n        buyer_name: 'session.name',\n        buyer_tel: 'session.phone',\n        buyer_addr: '서울특별시 강남구 삼성동',\n        buyer_postcode: '123-456'\n      }, callback);\n    }\n  };\n\n  const callback = async response => {\n    const {\n      success,\n      merchant_uid,\n      error_msg\n    } = response;\n\n    if (success) {\n      axios // .post(`${hostIp}/payments/complete`, { data: response })\n      .post('http://127.0.0.1:3065/payments/complete', {\n        data: response\n      }).then(() => {\n        dispatch({\n          type: PAYMENT_SUCCESS\n        }, {\n          data: response\n        });\n      }).catch(e => {\n        dispatch({\n          type: PAYMENT_FAILURE\n        }, {\n          error: error_msg\n        });\n        console.log(e);\n      });\n    } else {\n      alert(`결제 실패: ${error_msg}`);\n    }\n  };\n\n  onClickPayment();\n};\n\nexport default Import;","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/components/Generalui/Payment.js"],"names":["useState","useEffect","Button","useDispatch","useSelector","axios","Import","dispatch","IMP","init","request_pay","pg","pay_method","merchant_uid","Date","getTime","name","amount","buyer_email","buyer_name","buyer_tel","buyer_addr","buyer_postcode","callback","response","success","error_msg","post","data","then","type","PAYMENT_SUCCESS","catch","e","PAYMENT_FAILURE","error","console","log","alert","onClickPayment"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;;AAEC,QAAM;AACL,QAAIK,GAAG,KAAK,IAAZ,EAAkB;AAChBA,MAAAA,GAAG,CAACC,IAAJ,CAAS,aAAT;AACAD,MAAAA,GAAG,CAACE,WAAJ,CACE;AACEC,QAAAA,EAAE,EAAE,OADN;AACe;AACbC,QAAAA,UAAU,EAAE,MAFd;AAGEC,QAAAA,YAAY,EAAE,WAAW,IAAIC,IAAJ,GAAWC,OAAX,EAH3B;AAIEC,QAAAA,IAAI,EAAE,WAAW,IAAIF,IAAJ,GAAWC,OAAX,EAJnB;AAKEE,QAAAA,MAAM,EAAE,CALV;AAMEC,QAAAA,WAAW,EAAE,eANf;AAOEC,QAAAA,UAAU,EAAE,cAPd;AAQEC,QAAAA,SAAS,EAAE,eARb;AASEC,QAAAA,UAAU,EAAE,eATd;AAUEC,QAAAA,cAAc,EAAE;AAVlB,OADF,EAaEC,QAbF;AAeD;AACF,GAnBA;;AAqBD,QAAMA,QAAQ,GAAG,MAAOC,QAAP,IAAoB;AACnC,UAAM;AAAEC,MAAAA,OAAF;AAAWZ,MAAAA,YAAX;AAAyBa,MAAAA;AAAzB,QAAuCF,QAA7C;;AACA,QAAIC,OAAJ,EAAa;AACXpB,MAAAA,KAAK,CACH;AADG,OAEFsB,IAFH,CAEQ,yCAFR,EAEmD;AAAEC,QAAAA,IAAI,EAAEJ;AAAR,OAFnD,EAGGK,IAHH,CAGQ,MAAM;AACVtB,QAAAA,QAAQ,CAAC;AAAEuB,UAAAA,IAAI,EAAEC;AAAR,SAAD,EAA4B;AAAEH,UAAAA,IAAI,EAAEJ;AAAR,SAA5B,CAAR;AACD,OALH,EAMGQ,KANH,CAMUC,CAAD,IAAO;AACZ1B,QAAAA,QAAQ,CAAC;AAAEuB,UAAAA,IAAI,EAAEI;AAAR,SAAD,EAA4B;AAAEC,UAAAA,KAAK,EAAET;AAAT,SAA5B,CAAR;AACAU,QAAAA,OAAO,CAACC,GAAR,CAAYJ,CAAZ;AACD,OATH;AAUD,KAXD,MAWO;AACLK,MAAAA,KAAK,CAAE,UAASZ,SAAU,EAArB,CAAL;AACD;AACF,GAhBD;;AAkBAa,EAAAA,cAAc;AACf,CA3CD;;AA6CA,eAAejC,MAAf","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { Button } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// import { PAYMENT_REQUEST } from \"../reducers/payment\";\r\nimport axios from 'axios';\r\n\r\nconst Import = () => {\r\n  const dispatch = useDispatch();\r\n\r\n   () => {\r\n    if (IMP !== null) {\r\n      IMP.init('imp37098043');\r\n      IMP.request_pay(\r\n        {\r\n          pg: 'kakao', // version 1.1.0부터 지원.\r\n          pay_method: 'card',\r\n          merchant_uid: 'shopId' + new Date().getTime(),\r\n          name: 'shopId' + new Date().getTime(),\r\n          amount: 1,\r\n          buyer_email: 'session.email',\r\n          buyer_name: 'session.name',\r\n          buyer_tel: 'session.phone',\r\n          buyer_addr: '서울특별시 강남구 삼성동',\r\n          buyer_postcode: '123-456',\r\n        },\r\n        callback,\r\n      );\r\n    }\r\n  };\r\n\r\n  const callback = async (response) => {\r\n    const { success, merchant_uid, error_msg } = response;\r\n    if (success) {\r\n      axios\r\n        // .post(`${hostIp}/payments/complete`, { data: response })\r\n        .post('http://127.0.0.1:3065/payments/complete', { data: response })\r\n        .then(() => {\r\n          dispatch({ type: PAYMENT_SUCCESS }, { data: response });\r\n        })\r\n        .catch((e) => {\r\n          dispatch({ type: PAYMENT_FAILURE }, { error: error_msg });\r\n          console.log(e);\r\n        });\r\n    } else {\r\n      alert(`결제 실패: ${error_msg}`);\r\n    }\r\n  };\r\n\r\n  onClickPayment();\r\n};\r\n\r\nexport default Import;\r\n"]},"metadata":{},"sourceType":"module"}