{"ast":null,"code":"import { all, put, fork, call, takeLatest } from \"redux/effects\";\nimport { LOAD_PRODUCTS_SUCCESS } from \"../reducers/products\";\n\nfunction loadProductApi(loadData) {\n  return axios.post(\"/products/load\", loadData);\n}\n\nfunction* loadProducts(action) {\n  try {\n    const result = yield call(loadProductsApi, action.data);\n    yield put({\n      type: LOAD_PRODUCTS_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.log(e);\n    yield put({\n      type: LOAD_PRODUCTS_FAILURE\n    });\n  }\n}\n\nexport default function* productsSaga() {\n  all([fork()]);\n}","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/sagas/products.js"],"names":["all","put","fork","call","takeLatest","LOAD_PRODUCTS_SUCCESS","loadProductApi","loadData","axios","post","loadProducts","action","result","loadProductsApi","data","type","e","console","log","LOAD_PRODUCTS_FAILURE","productsSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,UAA/B,QAAiD,eAAjD;AACA,SAASC,qBAAT,QAAsC,sBAAtC;;AAEA,SAASC,cAAT,CAAwBC,QAAxB,EAAkC;AAChC,SAAOC,KAAK,CAACC,IAAN,CAAW,gBAAX,EAA6BF,QAA7B,CAAP;AACD;;AAED,UAAUG,YAAV,CAAuBC,MAAvB,EAA+B;AAC7B,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMT,IAAI,CAACU,eAAD,EAAkBF,MAAM,CAACG,IAAzB,CAAzB;AACA,UAAMb,GAAG,CAAC;AACRc,MAAAA,IAAI,EAAEV,qBADE;AAERS,MAAAA,IAAI,EAAEF,MAAM,CAACE;AAFL,KAAD,CAAT;AAID,GAND,CAME,OAAOE,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,UAAMf,GAAG,CAAC;AACRc,MAAAA,IAAI,EAAEI;AADE,KAAD,CAAT;AAGD;AACF;;AAED,eAAe,UAAUC,YAAV,GAAyB;AACtCpB,EAAAA,GAAG,CAAC,CAACE,IAAI,EAAL,CAAD,CAAH;AACD","sourcesContent":["import { all, put, fork, call, takeLatest } from \"redux/effects\";\r\nimport { LOAD_PRODUCTS_SUCCESS } from \"../reducers/products\";\r\n\r\nfunction loadProductApi(loadData) {\r\n  return axios.post(\"/products/load\", loadData);\r\n}\r\n\r\nfunction* loadProducts(action) {\r\n  try {\r\n    const result = yield call(loadProductsApi, action.data);\r\n    yield put({\r\n      type: LOAD_PRODUCTS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({\r\n      type: LOAD_PRODUCTS_FAILURE,\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* productsSaga() {\r\n  all([fork()]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}