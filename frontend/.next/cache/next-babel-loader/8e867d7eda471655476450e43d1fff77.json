{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hoyuen\\\\Documents\\\\project\\\\project1\\\\frontend\\\\pages\\\\shop\\\\admin\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport { Empty, Card, Space, Tag, Button } from 'antd';\nimport { ADMIN_PRODUCTS_REQUEST } from '../../../reducers/shop';\n\nconst Index = () => {\n  const dispatch = useDispatch();\n  const {\n    session,\n    division\n  } = useSelector(state => state.user);\n\n  if (!session || session.division === false) {\n    return router.back();\n  } else {\n    useEffect(() => {\n      dispatch({\n        type: ADMIN_PRODUCTS_REQUEST,\n        ShopId: session.Shops[0].id\n      });\n    }, []);\n  }\n\n  const {\n    products,\n    categories\n  } = useSelector(state => state.shop);\n  const router = useRouter();\n\n  if (division === false || session === undefined) {\n    router.back();\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Space, {\n    direction: 'vertical',\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, products.length > 0 && __jsx(Card, {\n    title: '상품정보',\n    onClick: () => router.push('/shop/admin/product'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, __jsx(Card.Meta, {\n    description: products.length > 1 ? `${products[0].title} 외 ${products.length - 1}개의 상품이 존재하고 있습니다.` : `${products[0].title} 상품이 존재하고 있습니다.`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/pages/shop/admin/index.js"],"names":["useEffect","useSelector","useDispatch","useRouter","Empty","Card","Space","Tag","Button","ADMIN_PRODUCTS_REQUEST","Index","dispatch","session","division","state","user","router","back","type","ShopId","Shops","id","products","categories","shop","undefined","width","length","push","title"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,KAAtB,EAA6BC,GAA7B,EAAkCC,MAAlC,QAAgD,MAAhD;AACA,SAASC,sBAAT,QAAuC,wBAAvC;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAM;AAAEU,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAwBZ,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAzC;;AAEA,MAAI,CAACH,OAAD,IAAYA,OAAO,CAACC,QAAR,KAAqB,KAArC,EAA4C;AAC1C,WAAOG,MAAM,CAACC,IAAP,EAAP;AACD,GAFD,MAEO;AACLjB,IAAAA,SAAS,CAAC,MAAM;AACdW,MAAAA,QAAQ,CAAC;AAAEO,QAAAA,IAAI,EAAET,sBAAR;AAAgCU,QAAAA,MAAM,EAAEP,OAAO,CAACQ,KAAR,CAAc,CAAd,EAAiBC;AAAzD,OAAD,CAAR;AACD,KAFQ,EAEN,EAFM,CAAT;AAGD;;AAED,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA2BtB,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACU,IAAlB,CAA5C;AAEA,QAAMR,MAAM,GAAGb,SAAS,EAAxB;;AAEA,MAAIU,QAAQ,KAAK,KAAb,IAAsBD,OAAO,KAAKa,SAAtC,EAAiD;AAC/CT,IAAAA,MAAM,CAACC,IAAP;AACD;;AAED,SACE,4BACE,MAAC,KAAD;AAAO,IAAA,SAAS,EAAE,UAAlB;AAA8B,IAAA,KAAK,EAAE;AAAES,MAAAA,KAAK,EAAE;AAAT,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaGJ,QAAQ,CAACK,MAAT,GAAkB,CAAlB,IACC,MAAC,IAAD;AAAM,IAAA,KAAK,EAAE,MAAb;AAAqB,IAAA,OAAO,EAAE,MAAMX,MAAM,CAACY,IAAP,CAAY,qBAAZ,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,WAAW,EACTN,QAAQ,CAACK,MAAT,GAAkB,CAAlB,GACK,GAAEL,QAAQ,CAAC,CAAD,CAAR,CAAYO,KAAM,MAAKP,QAAQ,CAACK,MAAT,GAAkB,CAAE,mBADlD,GAEK,GAAEL,QAAQ,CAAC,CAAD,CAAR,CAAYO,KAAM,iBAJ7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAdJ,CADF,CADF;AA6BD,CAjDD;;AAmDA,eAAenB,KAAf","sourcesContent":["import { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useRouter } from 'next/router';\r\n\r\nimport { Empty, Card, Space, Tag, Button } from 'antd';\r\nimport { ADMIN_PRODUCTS_REQUEST } from '../../../reducers/shop';\r\n\r\nconst Index = () => {\r\n  const dispatch = useDispatch();\r\n  const { session, division } = useSelector((state) => state.user);\r\n\r\n  if (!session || session.division === false) {\r\n    return router.back();\r\n  } else {\r\n    useEffect(() => {\r\n      dispatch({ type: ADMIN_PRODUCTS_REQUEST, ShopId: session.Shops[0].id });\r\n    }, []);\r\n  }\r\n\r\n  const { products, categories } = useSelector((state) => state.shop);\r\n\r\n  const router = useRouter();\r\n\r\n  if (division === false || session === undefined) {\r\n    router.back();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Space direction={'vertical'} style={{ width: '100%' }}>\r\n        {/* <Card\r\n          title={'카테고리 관리'}\r\n          extra={\r\n            categories && categories.length < 6 ? (\r\n              <Button>카테고리 추가</Button>\r\n            ) : (\r\n              <div>카테고리는 최대 5개까지 설정하실 수 있습니다.</div>\r\n            )\r\n          }\r\n        >\r\n          {categories.length > 0 ? <Empty></Empty> : categories.map((v) => <Tag>{v.name}</Tag>)}\r\n        </Card> */}\r\n        {products.length > 0 && (\r\n          <Card title={'상품정보'} onClick={() => router.push('/shop/admin/product')}>\r\n            <Card.Meta\r\n              description={\r\n                products.length > 1\r\n                  ? `${products[0].title} 외 ${products.length - 1}개의 상품이 존재하고 있습니다.`\r\n                  : `${products[0].title} 상품이 존재하고 있습니다.`\r\n              }\r\n            />\r\n          </Card>\r\n        )}\r\n      </Space>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}