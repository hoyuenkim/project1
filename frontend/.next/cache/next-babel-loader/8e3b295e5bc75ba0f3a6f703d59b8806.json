{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { Input, Card, Button, Space, Form, PageHeader } from \"antd\";\nimport { useInput } from \"../../components/Generalui/CustomHooks\";\nimport { useDispatch } from \"react-redux\";\nimport { useCallback } from \"react\";\nimport { LOG_IN_REQUEST } from \"../../reducers/user\";\nimport Router from \"next/router\";\n\nconst Login = () => {\n  const [username, onChangeUsername] = useInput();\n  const [password, onChangePassword] = useInput();\n  const dispatch = useDispatch();\n  const onFinish = useCallback(() => {\n    dispatch({\n      type: LOG_IN_REQUEST,\n      data: {\n        username,\n        password\n      }\n    });\n  }, [username, password]);\n  return __jsx(React.Fragment, null, __jsx(Card, {\n    style: {\n      height: `100vh`,\n      verticalAlign: `middle`\n    }\n  }, __jsx(Form, {\n    onFinish: onFinish\n  }, __jsx(Space, {\n    direction: \"vertical\",\n    size: \"large\",\n    style: {\n      width: \"100%\"\n    }\n  }, __jsx(\"h1\", null, \"Login\"), __jsx(Form.Item, {\n    rules: [{\n      required: true,\n      message: \"이메일을 입력해주세요\"\n    }, {\n      type: \"email\",\n      message: \"형식에 맞지 않는 아이디입니다\"\n    }]\n  }, __jsx(Input, {\n    prefix: `email`,\n    size: `large`,\n    onChange: onChangeUsername\n  })), __jsx(Input.Password, {\n    prefix: `비밀번호`,\n    size: `large`,\n    onChange: onChangePassword\n  }), __jsx(Button, {\n    type: `primary`,\n    htmlType: `submit`,\n    style: {\n      width: `100%`\n    }\n  }, \"Login\")))));\n};\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/pages/user/login.js"],"names":["Input","Card","Button","Space","Form","PageHeader","useInput","useDispatch","useCallback","LOG_IN_REQUEST","Router","Login","username","onChangeUsername","password","onChangePassword","dispatch","onFinish","type","data","height","verticalAlign","width","required","message"],"mappings":";;AAAA,SAASA,KAAT,EAAgBC,IAAhB,EAAsBC,MAAtB,EAA8BC,KAA9B,EAAqCC,IAArC,EAA2CC,UAA3C,QAA6D,MAA7D;AACA,SAASC,QAAT,QAAyB,wCAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM,CAACC,QAAD,EAAWC,gBAAX,IAA+BP,QAAQ,EAA7C;AACA,QAAM,CAACQ,QAAD,EAAWC,gBAAX,IAA+BT,QAAQ,EAA7C;AACA,QAAMU,QAAQ,GAAGT,WAAW,EAA5B;AAEA,QAAMU,QAAQ,GAAGT,WAAW,CAAC,MAAM;AACjCQ,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAET,cADC;AAEPU,MAAAA,IAAI,EAAE;AACJP,QAAAA,QADI;AAEJE,QAAAA;AAFI;AAFC,KAAD,CAAR;AAOD,GAR2B,EAQzB,CAACF,QAAD,EAAWE,QAAX,CARyB,CAA5B;AAUA,SACE,4BACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEM,MAAAA,MAAM,EAAG,OAAX;AAAmBC,MAAAA,aAAa,EAAG;AAAnC;AAAb,KACE,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEJ;AAAhB,KACE,MAAC,KAAD;AAAO,IAAA,SAAS,EAAC,UAAjB;AAA4B,IAAA,IAAI,EAAE,OAAlC;AAA2C,IAAA,KAAK,EAAE;AAAEK,MAAAA,KAAK,EAAE;AAAT;AAAlD,KACE,0BADF,EAEE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,KAAK,EAAE,CACL;AAAEC,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KADK,EAEL;AAAEN,MAAAA,IAAI,EAAE,OAAR;AAAiBM,MAAAA,OAAO,EAAE;AAA1B,KAFK;AADT,KAME,MAAC,KAAD;AAAO,IAAA,MAAM,EAAG,OAAhB;AAAwB,IAAA,IAAI,EAAG,OAA/B;AAAuC,IAAA,QAAQ,EAAEX;AAAjD,IANF,CAFF,EAUE,MAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,MAAM,EAAG,MAAzB;AAAgC,IAAA,IAAI,EAAG,OAAvC;AAA+C,IAAA,QAAQ,EAAEE;AAAzD,IAVF,EAWE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAG,SAAf;AAAyB,IAAA,QAAQ,EAAG,QAApC;AAA6C,IAAA,KAAK,EAAE;AAAEO,MAAAA,KAAK,EAAG;AAAV;AAApD,aAXF,CADF,CADF,CADF,CADF;AAuBD,CAtCD;;AAwCA,eAAeX,KAAf","sourcesContent":["import { Input, Card, Button, Space, Form, PageHeader } from \"antd\";\r\nimport { useInput } from \"../../components/Generalui/CustomHooks\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useCallback } from \"react\";\r\nimport { LOG_IN_REQUEST } from \"../../reducers/user\";\r\nimport Router from \"next/router\";\r\n\r\nconst Login = () => {\r\n  const [username, onChangeUsername] = useInput();\r\n  const [password, onChangePassword] = useInput();\r\n  const dispatch = useDispatch();\r\n\r\n  const onFinish = useCallback(() => {\r\n    dispatch({\r\n      type: LOG_IN_REQUEST,\r\n      data: {\r\n        username,\r\n        password,\r\n      },\r\n    });\r\n  }, [username, password]);\r\n\r\n  return (\r\n    <>\r\n      <Card style={{ height: `100vh`, verticalAlign: `middle` }}>\r\n        <Form onFinish={onFinish}>\r\n          <Space direction=\"vertical\" size={\"large\"} style={{ width: \"100%\" }}>\r\n            <h1>Login</h1>\r\n            <Form.Item\r\n              rules={[\r\n                { required: true, message: \"이메일을 입력해주세요\" },\r\n                { type: \"email\", message: \"형식에 맞지 않는 아이디입니다\" },\r\n              ]}\r\n            >\r\n              <Input prefix={`email`} size={`large`} onChange={onChangeUsername} />\r\n            </Form.Item>\r\n            <Input.Password prefix={`비밀번호`} size={`large`} onChange={onChangePassword} />\r\n            <Button type={`primary`} htmlType={`submit`} style={{ width: `100%` }}>\r\n              Login\r\n            </Button>\r\n          </Space>\r\n        </Form>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}