{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hoyuen\\\\Documents\\\\project\\\\project1\\\\frontend\\\\pages\\\\user\\\\signup.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Button, Form, Input, Descriptions, Checkbox, Card, Space, Switch } from \"antd\";\nimport { useState, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useInput } from \"../../components/Generalui/CustomHooks\";\nimport DaumPostcode from \"react-daum-postcode\";\nimport wrapper from \"../../store/configureStore\";\nimport axios from \"axios\";\nimport { END } from \"redux-saga\";\nimport { SIGN_UP_REQUEST } from \"../../reducers/user\";\naxios.defaults.baseURL = \"http://127.0.0.1:3065\";\n\nconst Signup = () => {\n  const [email, onChangeEmail] = useInput();\n  const [password, onChangePassword] = useInput();\n  const [passwordCheck, onChangePasswordCheck] = useInput();\n  const [name, onChangeName] = useInput();\n  const {\n    0: bizcode,\n    1: setBizcode\n  } = useState();\n  const {\n    0: address,\n    1: setAddress\n  } = useState();\n  const [addressDetail, onChangeAddressDetail] = useInput();\n  const {\n    0: termToggle,\n    1: setTermToggle\n  } = useState(false);\n  const {\n    0: termError,\n    1: setTermError\n  } = useState(false);\n  const {\n    0: divisionToggle,\n    1: setDivisionToggle\n  } = useState(false);\n  const {\n    0: addressToggle,\n    1: setAddressToggle\n  } = useState(false);\n  const {\n    0: formHeight,\n    1: setFormHeight\n  } = useState(\"100vh\");\n  const dispatch = useDispatch();\n\n  const onClickTermToggle = () => {\n    return setTermToggle(!termToggle);\n  };\n\n  const handleComplete = data => {\n    let fullAddress = data.address;\n    let extraAddress = \"\";\n\n    if (data.addressType === \"R\") {\n      if (data.bname !== \"\") {\n        extraAddress += data.bname;\n      }\n\n      if (data.buildingName !== \"\") {\n        extraAddress += extraAddress !== \"\" ? `, ${data.buildingName}` : data.buildingName;\n      }\n\n      fullAddress += extraAddress !== \"\" ? ` (${extraAddress})` : \"\";\n    }\n\n    setAddress(fullAddress);\n    setAddressToggle(false);\n  };\n\n  const onFinish = () => {\n    const data = {};\n    dispatch({\n      type: SIGN_UP_REQUEST,\n      data: {\n        username: email,\n        password,\n        name,\n        bizcode,\n        address,\n        addressDetail,\n        division: divisionToggle\n      }\n    });\n  };\n\n  const onChangeDivisionToggle = () => {\n    setFormHeight(formHeight ? undefined : \"100vh\");\n    setDivisionToggle(!divisionToggle);\n  };\n\n  const onChangeBizcode = e => {\n    setBizcode(e.target.value);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Card, {\n    title: __jsx(Space, {\n      direction: \"horizental\",\n      align: `baseline`,\n      size: `large`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, divisionToggle ? __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 31\n      }\n    }, \"\\uAC00\\uB9F9\\uC810\") : __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 46\n      }\n    }, \"\\uC77C\\uBC18\\uD68C\\uC6D0\"), __jsx(Switch, {\n      onClick: onChangeDivisionToggle,\n      checkedChildren: `가맹점`,\n      unCheckedChildren: `일반회원`,\n      size: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, __jsx(Form, {\n    onFinish: onFinish,\n    encType: \"multipart/form-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, __jsx(Space, {\n    direction: \"vertical\",\n    size: \"large\",\n    style: {\n      width: \"100%\",\n      height: formHeight\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, !termToggle && __jsx(Descriptions, {\n    bordered: true,\n    column: 24,\n    layout: `vertical`,\n    size: `large`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, __jsx(Descriptions.Item, {\n    label: \"\\uD544\\uC218\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, \"\\uAC1C\\uC778(\\uC2E0\\uC6A9)\\uC815\\uBCF4\\uC218\\uC9D1/\\uC774\\uC6A9\"), __jsx(Descriptions.Item, {\n    label: \"\\uD544\\uC218\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, \"\\uACE0\\uC720\\uC2DD\\uBCC4\\uC815\\uBCF4\\uC758 \\uCC98\\uB9AC\"), __jsx(Descriptions.Item, {\n    label: \"\\uD544\\uC218\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, \"\\uD1B5\\uC2E0\\uC0AC \\uC774\\uC6A9\\uC57D\\uAD00\"), __jsx(Descriptions.Item, {\n    label: \"\\uD544\\uC218\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, \"\\uC11C\\uBE44\\uC2A4 \\uC774\\uC6A9\\uC57D\\uAD00\")), __jsx(\"div\", {\n    style: {\n      textAlign: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, __jsx(Checkbox, {\n    onChange: onClickTermToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, \"\\uC804\\uCCB4\\uB3D9\\uC758\")), __jsx(Form.Item, {\n    name: \"email\",\n    validateTrigger: \"onBlur\",\n    rules: [{\n      required: true,\n      message: \"이메일를 입력해 주세요!\"\n    }, () => ({\n      async validator(rule, value) {\n        const regex = new RegExp(/^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i);\n\n        if (value && value.match(regex)) {\n          const result = await axios.post(\"/user/confirm/email\", {\n            email: value\n          });\n\n          if (result.data) {\n            return Promise.reject(\"이미 존재하는 이메일입니다\");\n          } else {\n            return Promise.resolve();\n          }\n        } else {\n          return Promise.reject(\"형식에 맞지 않는 이메일입니다\");\n        }\n      }\n\n    })],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, __jsx(Input, {\n    size: `large`,\n    prefix: `* Email`,\n    value: email,\n    onChange: onChangeEmail,\n    placeholder: \"Email\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  })), __jsx(Form.Item, {\n    name: \"password\",\n    rules: [{\n      required: true,\n      message: \"비밀번호를 확인해주세요\"\n    }, {\n      pattern: /^[A-Za-z0-9]{6,12}$/,\n      message: \"비밀번호가 형식에 맞지 않습니다\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, __jsx(Input.Password, {\n    prefix: `* 비밀번호`,\n    size: `large`,\n    value: password,\n    onChange: onChangePassword,\n    placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }\n  })), __jsx(Form.Item, {\n    name: \"passwordCheck\",\n    dependencies: [\"password\"],\n    rules: [{\n      required: true,\n      message: \"비밀번호를 확인해 주세요\"\n    }, ({\n      getFieldValue\n    }) => ({\n      validator(rule, value) {\n        if (!value || getFieldValue(\"password\") === value) {\n          return Promise.resolve();\n        }\n\n        return Promise.reject(\"비밀번호가 일치하지 않습니다.\");\n      }\n\n    })],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }, __jsx(Input.Password, {\n    prefix: `* 비밀번호 확인`,\n    size: `large`,\n    value: passwordCheck,\n    onChange: onChangePasswordCheck,\n    placeholder: \"\\uB2E4\\uC2DC \\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  })), __jsx(Form.Item, {\n    name: \"name\",\n    rules: [{\n      required: true,\n      message: \"이름을 입력해주세요\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  }, __jsx(Input, {\n    prefix: divisionToggle ? \"* 가게명\" : \"* 이름\",\n    size: `large`,\n    onChange: onChangeName,\n    value: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 15\n    }\n  })), divisionToggle && __jsx(React.Fragment, null, __jsx(Form.Item, {\n    name: \"bizcode\",\n    validateTrigger: \"onBlur\",\n    rules: [{\n      required: true,\n      message: \"사업자 등록번호를 입력해주세요\"\n    }, () => ({\n      async validator(rule, value) {\n        if (!value || !value.match(/\\d{1}/g) || !value.length === 10) {\n          return Promise.reject(\"형식에 맞지 않은 사업자 등록번호입니다\");\n        } else {\n          function checkBizID(bizID) {\n            var checkID = new Array(1, 3, 7, 1, 3, 7, 1, 3, 5, 1);\n            var tmpBizID,\n                i,\n                chkSum = 0,\n                c2,\n                remander;\n            bizID = bizID.replace(/-/gi, \"\");\n\n            for (i = 0; i <= 7; i++) chkSum += checkID[i] * bizID.charAt(i);\n\n            c2 = \"0\" + checkID[8] * bizID.charAt(8);\n            c2 = c2.substring(c2.length - 2, c2.length);\n            chkSum += Math.floor(c2.charAt(0)) + Math.floor(c2.charAt(1));\n            remander = (10 - chkSum % 10) % 10;\n            if (Math.floor(bizID.charAt(9)) == remander) return true;\n            return false;\n          }\n\n          if (checkBizID(value)) {\n            const result = await axios.post(\"/user/confirm/bizcode\", {\n              bizcode: value\n            });\n\n            if (!result.data) {\n              return Promise.resolve();\n            } else {\n              return Promise.reject(\"이미 존재하는 사업자 등록번호입니다\");\n            }\n          } else {\n            return Promise.reject(\"형식에 맞지 않은 사업자 등록번호입니다\");\n          }\n        }\n      }\n\n    })],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }, __jsx(Input, {\n    prefix: \"* 사업자등록번호\",\n    size: `large`,\n    name: \"bizcode\",\n    value: bizcode,\n    onChange: onChangeBizcode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 19\n    }\n  })), addressToggle ? __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 19\n    }\n  }, __jsx(DaumPostcode, {\n    onComplete: handleComplete,\n    autoClose: true,\n    height: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 21\n    }\n  })) : __jsx(Form.Item, {\n    name: \"address\",\n    initialValue: address,\n    rules: [{\n      required: true,\n      message: \"주소를 입력해주세요\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 19\n    }\n  }, __jsx(Input, {\n    prefix: \"* \\uC8FC\\uC18C\",\n    name: \"address\",\n    readOnly: true,\n    onClick: () => setAddressToggle(true),\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 21\n    }\n  })), __jsx(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 17\n    }\n  }, __jsx(Input, {\n    prefix: \"* \\uC0C1\\uC138\\uC8FC\\uC18C\",\n    name: \"addressDetail\",\n    onChange: onChangeAddressDetail,\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 19\n    }\n  }))), __jsx(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    style: {\n      width: `100%`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 15\n    }\n  }, \"\\uC81C\\uCD9C\"))))));\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : \"\";\n  axios.defaults.headers.Cookie = cookie;\n  context.store.dispatch({\n    type: LOAD_USER_REQUEST\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Signup;","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/pages/user/signup.js"],"names":["Button","Form","Input","Descriptions","Checkbox","Card","Space","Switch","useState","useCallback","useDispatch","useSelector","useInput","DaumPostcode","wrapper","axios","END","SIGN_UP_REQUEST","defaults","baseURL","Signup","email","onChangeEmail","password","onChangePassword","passwordCheck","onChangePasswordCheck","name","onChangeName","bizcode","setBizcode","address","setAddress","addressDetail","onChangeAddressDetail","termToggle","setTermToggle","termError","setTermError","divisionToggle","setDivisionToggle","addressToggle","setAddressToggle","formHeight","setFormHeight","dispatch","onClickTermToggle","handleComplete","data","fullAddress","extraAddress","addressType","bname","buildingName","onFinish","type","username","division","onChangeDivisionToggle","undefined","onChangeBizcode","e","target","value","width","height","textAlign","required","message","validator","rule","regex","RegExp","match","result","post","Promise","reject","resolve","pattern","getFieldValue","length","checkBizID","bizID","checkID","Array","tmpBizID","i","chkSum","c2","remander","replace","charAt","substring","Math","floor","getServerSideProps","context","cookie","req","headers","Cookie","store","LOAD_USER_REQUEST","sagaTask","toPromise"],"mappings":"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","sourcesContent":["import { Button, Form, Input, Descriptions, Checkbox, Card, Space, Switch } from \"antd\";\r\nimport { useState, useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useInput } from \"../../components/Generalui/CustomHooks\";\r\nimport DaumPostcode from \"react-daum-postcode\";\r\nimport wrapper from \"../../store/configureStore\";\r\nimport axios from \"axios\";\r\nimport { END } from \"redux-saga\";\r\nimport { SIGN_UP_REQUEST } from \"../../reducers/user\";\r\n\r\naxios.defaults.baseURL = \"http://127.0.0.1:3065\";\r\n\r\nconst Signup = () => {\r\n  const [email, onChangeEmail] = useInput();\r\n  const [password, onChangePassword] = useInput();\r\n  const [passwordCheck, onChangePasswordCheck] = useInput();\r\n  const [name, onChangeName] = useInput();\r\n  const [bizcode, setBizcode] = useState();\r\n  const [address, setAddress] = useState();\r\n  const [addressDetail, onChangeAddressDetail] = useInput();\r\n  const [termToggle, setTermToggle] = useState(false);\r\n  const [termError, setTermError] = useState(false);\r\n  const [divisionToggle, setDivisionToggle] = useState(false);\r\n  const [addressToggle, setAddressToggle] = useState(false);\r\n  const [formHeight, setFormHeight] = useState(\"100vh\");\r\n  const dispatch = useDispatch();\r\n\r\n  const onClickTermToggle = () => {\r\n    return setTermToggle(!termToggle);\r\n  };\r\n\r\n  const handleComplete = (data) => {\r\n    let fullAddress = data.address;\r\n    let extraAddress = \"\";\r\n\r\n    if (data.addressType === \"R\") {\r\n      if (data.bname !== \"\") {\r\n        extraAddress += data.bname;\r\n      }\r\n      if (data.buildingName !== \"\") {\r\n        extraAddress += extraAddress !== \"\" ? `, ${data.buildingName}` : data.buildingName;\r\n      }\r\n      fullAddress += extraAddress !== \"\" ? ` (${extraAddress})` : \"\";\r\n    }\r\n\r\n    setAddress(fullAddress);\r\n    setAddressToggle(false);\r\n  };\r\n\r\n  const onFinish = () => {\r\n    const data = {};\r\n    dispatch({\r\n      type: SIGN_UP_REQUEST,\r\n      data: {\r\n        username: email,\r\n        password,\r\n        name,\r\n        bizcode,\r\n        address,\r\n        addressDetail,\r\n        division: divisionToggle,\r\n      },\r\n    });\r\n  };\r\n\r\n  const onChangeDivisionToggle = () => {\r\n    setFormHeight(formHeight ? undefined : \"100vh\");\r\n    setDivisionToggle(!divisionToggle);\r\n  };\r\n\r\n  const onChangeBizcode = (e) => {\r\n    setBizcode(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card\r\n        title={\r\n          <Space direction=\"horizental\" align={`baseline`} size={`large`}>\r\n            {divisionToggle ? <h1>가맹점</h1> : <h1>일반회원</h1>}\r\n            <Switch\r\n              onClick={onChangeDivisionToggle}\r\n              checkedChildren={`가맹점`}\r\n              unCheckedChildren={`일반회원`}\r\n              size={\"middle\"}\r\n            />\r\n          </Space>\r\n        }\r\n      >\r\n        <Form onFinish={onFinish} encType={\"multipart/form-data\"}>\r\n          <Space direction=\"vertical\" size={\"large\"} style={{ width: \"100%\", height: formHeight }}>\r\n            {!termToggle && (\r\n              <Descriptions bordered column={24} layout={`vertical`} size={`large`}>\r\n                <Descriptions.Item label=\"필수\">개인(신용)정보수집/이용</Descriptions.Item>\r\n                <Descriptions.Item label=\"필수\">고유식별정보의 처리</Descriptions.Item>\r\n                <Descriptions.Item label=\"필수\">통신사 이용약관</Descriptions.Item>\r\n                <Descriptions.Item label=\"필수\">서비스 이용약관</Descriptions.Item>\r\n              </Descriptions>\r\n            )}\r\n            <div style={{ textAlign: \"right\" }}>\r\n              <Checkbox onChange={onClickTermToggle}>전체동의</Checkbox>\r\n            </div>\r\n\r\n            <Form.Item\r\n              name=\"email\"\r\n              validateTrigger=\"onBlur\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"이메일를 입력해 주세요!\",\r\n                },\r\n                () => ({\r\n                  async validator(rule, value) {\r\n                    const regex = new RegExp(\r\n                      /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i,\r\n                    );\r\n                    if (value && value.match(regex)) {\r\n                      const result = await axios.post(\"/user/confirm/email\", {\r\n                        email: value,\r\n                      });\r\n                      if (result.data) {\r\n                        return Promise.reject(\"이미 존재하는 이메일입니다\");\r\n                      } else {\r\n                        return Promise.resolve();\r\n                      }\r\n                    } else {\r\n                      return Promise.reject(\"형식에 맞지 않는 이메일입니다\");\r\n                    }\r\n                  },\r\n                }),\r\n              ]}\r\n            >\r\n              <Input\r\n                size={`large`}\r\n                prefix={`* Email`}\r\n                value={email}\r\n                onChange={onChangeEmail}\r\n                placeholder=\"Email을 입력해주세요\"\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"비밀번호를 확인해주세요\",\r\n                },\r\n                {\r\n                  pattern: /^[A-Za-z0-9]{6,12}$/,\r\n                  message: \"비밀번호가 형식에 맞지 않습니다\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input.Password\r\n                prefix={`* 비밀번호`}\r\n                size={`large`}\r\n                value={password}\r\n                onChange={onChangePassword}\r\n                placeholder=\"비밀번호를 입력해주세요\"\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"passwordCheck\"\r\n              dependencies={[\"password\"]}\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"비밀번호를 확인해 주세요\",\r\n                },\r\n                ({ getFieldValue }) => ({\r\n                  validator(rule, value) {\r\n                    if (!value || getFieldValue(\"password\") === value) {\r\n                      return Promise.resolve();\r\n                    }\r\n                    return Promise.reject(\"비밀번호가 일치하지 않습니다.\");\r\n                  },\r\n                }),\r\n              ]}\r\n            >\r\n              <Input.Password\r\n                prefix={`* 비밀번호 확인`}\r\n                size={`large`}\r\n                value={passwordCheck}\r\n                onChange={onChangePasswordCheck}\r\n                placeholder=\"다시 비밀번호를 입력해주세요\"\r\n              />\r\n            </Form.Item>\r\n            <Form.Item name=\"name\" rules={[{ required: true, message: \"이름을 입력해주세요\" }]}>\r\n              <Input\r\n                prefix={divisionToggle ? \"* 가게명\" : \"* 이름\"}\r\n                size={`large`}\r\n                onChange={onChangeName}\r\n                value={name}\r\n              />\r\n            </Form.Item>\r\n            {divisionToggle && (\r\n              <>\r\n                <Form.Item\r\n                  name=\"bizcode\"\r\n                  validateTrigger=\"onBlur\"\r\n                  rules={[\r\n                    { required: true, message: \"사업자 등록번호를 입력해주세요\" },\r\n                    () => ({\r\n                      async validator(rule, value) {\r\n                        if (!value || !value.match(/\\d{1}/g) || !value.length === 10) {\r\n                          return Promise.reject(\"형식에 맞지 않은 사업자 등록번호입니다\");\r\n                        } else {\r\n                          function checkBizID(bizID) {\r\n                            var checkID = new Array(1, 3, 7, 1, 3, 7, 1, 3, 5, 1);\r\n                            var tmpBizID,\r\n                              i,\r\n                              chkSum = 0,\r\n                              c2,\r\n                              remander;\r\n                            bizID = bizID.replace(/-/gi, \"\");\r\n\r\n                            for (i = 0; i <= 7; i++) chkSum += checkID[i] * bizID.charAt(i);\r\n                            c2 = \"0\" + checkID[8] * bizID.charAt(8);\r\n                            c2 = c2.substring(c2.length - 2, c2.length);\r\n                            chkSum += Math.floor(c2.charAt(0)) + Math.floor(c2.charAt(1));\r\n                            remander = (10 - (chkSum % 10)) % 10;\r\n\r\n                            if (Math.floor(bizID.charAt(9)) == remander) return true;\r\n                            return false;\r\n                          }\r\n                          if (checkBizID(value)) {\r\n                            const result = await axios.post(\"/user/confirm/bizcode\", {\r\n                              bizcode: value,\r\n                            });\r\n                            if (!result.data) {\r\n                              return Promise.resolve();\r\n                            } else {\r\n                              return Promise.reject(\"이미 존재하는 사업자 등록번호입니다\");\r\n                            }\r\n                          } else {\r\n                            return Promise.reject(\"형식에 맞지 않은 사업자 등록번호입니다\");\r\n                          }\r\n                        }\r\n                      },\r\n                    }),\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    prefix={\"* 사업자등록번호\"}\r\n                    size={`large`}\r\n                    name={\"bizcode\"}\r\n                    value={bizcode}\r\n                    onChange={onChangeBizcode}\r\n                  />\r\n                </Form.Item>\r\n                {addressToggle ? (\r\n                  <Card>\r\n                    <DaumPostcode onComplete={handleComplete} autoClose={true} height={\"10\"} />\r\n                  </Card>\r\n                ) : (\r\n                  <Form.Item\r\n                    name=\"address\"\r\n                    initialValue={address}\r\n                    rules={[{ required: true, message: \"주소를 입력해주세요\" }]}\r\n                  >\r\n                    <Input\r\n                      prefix=\"* 주소\"\r\n                      name={\"address\"}\r\n                      readOnly\r\n                      onClick={() => setAddressToggle(true)}\r\n                      size={\"large\"}\r\n                    />\r\n                  </Form.Item>\r\n                )}\r\n                <Form.Item>\r\n                  <Input\r\n                    prefix=\"* 상세주소\"\r\n                    name={\"addressDetail\"}\r\n                    onChange={onChangeAddressDetail}\r\n                    size={\"large\"}\r\n                  />\r\n                </Form.Item>\r\n              </>\r\n            )}\r\n            <Form.Item>\r\n              <Button type=\"primary\" htmlType=\"submit\" style={{ width: `100%` }}>\r\n                제출\r\n              </Button>\r\n            </Form.Item>\r\n          </Space>\r\n        </Form>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  const cookie = context.req ? context.req.headers.cookie : \"\";\r\n  axios.defaults.headers.Cookie = cookie;\r\n  context.store.dispatch({ type: LOAD_USER_REQUEST });\r\n  context.store.dispatch(END);\r\n  await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default Signup;\r\n"]},"metadata":{},"sourceType":"module"}