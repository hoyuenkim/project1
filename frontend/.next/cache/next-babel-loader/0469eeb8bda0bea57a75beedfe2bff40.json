{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(addProduct),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchAddProduct),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(loadProducts),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadProducts),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(deleteProduct),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchDeleteProduct),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(productsSaga);\n\nimport axios from 'axios';\nimport { all, put, fork, call, takeLatest } from 'redux-saga/effects';\nimport { ADD_PRODUCT_REQUEST, ADD_PRODUCT_SUCCESS, ADD_PRODUCT_FAILURE, ADMIN_PRODUCTS_REQUEST, ADMIN_PRODUCTS_SUCCESS, ADMIN_PRODUCTS_FAILURE, DELETE_PRODUCT_FAILURE, DELETE_PRODUCT_SUCCESS, DELETE_PRODUCT_REQUEST } from '../reducers/shop';\n\nfunction addProductApi(data) {\n  return axios.post('/products/add', data, {\n    withCredentials: true\n  });\n}\n\nfunction addProduct(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function addProduct$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(addProductApi, action.formData);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            type: ADD_PRODUCT_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context.next = 13;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n          _context.next = 13;\n          return put({\n            type: ADD_PRODUCT_FAILURE,\n            error: _context.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction watchAddProduct() {\n  return _regeneratorRuntime.wrap(function watchAddProduct$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(ADD_PRODUCT_REQUEST, addProduct);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction loadProductsApi(ShopId) {\n  return axios.post('/products/load', {\n    ShopId: ShopId\n  });\n}\n\nfunction loadProducts(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadProducts$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          console.log(action);\n          _context3.next = 4;\n          return call(loadProductsApi, action.ShopId);\n\n        case 4:\n          result = _context3.sent;\n          _context3.next = 7;\n          return put({\n            type: ADMIN_PRODUCTS_SUCCESS,\n            data: result.data\n          });\n\n        case 7:\n          _context3.next = 14;\n          break;\n\n        case 9:\n          _context3.prev = 9;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(_context3.t0);\n          _context3.next = 14;\n          return put({\n            type: ADMIN_PRODUCTS_FAILURE,\n            error: _context3.t0\n          });\n\n        case 14:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 9]]);\n}\n\nfunction watchLoadProducts() {\n  return _regeneratorRuntime.wrap(function watchLoadProducts$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(ADMIN_PRODUCTS_REQUEST, loadProducts);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction deleteProductAPI(id) {\n  console.log(id);\n  return axios.post('/products/delete', {\n    id: id\n  });\n}\n\nfunction deleteProduct(action) {\n  return _regeneratorRuntime.wrap(function deleteProduct$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(deleteProductAPI, action.id);\n\n        case 3:\n          _context5.next = 5;\n          return put({\n            type: DELETE_PRODUCT_SUCCESS,\n            data: action.id\n          });\n\n        case 5:\n          _context5.next = 12;\n          break;\n\n        case 7:\n          _context5.prev = 7;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.log(_context5.t0);\n          _context5.next = 12;\n          return put({\n            type: DELETE_PRODUCT_FAILURE,\n            error: _context5.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 7]]);\n}\n\nfunction watchDeleteProduct() {\n  return _regeneratorRuntime.wrap(function watchDeleteProduct$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(DELETE_PRODUCT_REQUEST, deleteProduct);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nfunction selectProductAPI(_ref) {\n  var ProductId = _ref.ProductId;\n  return axios.post('/products/select', {\n    data: data\n  });\n}\n\nexport default function productsSaga() {\n  return _regeneratorRuntime.wrap(function productsSaga$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return all([fork(watchAddProduct), fork(watchLoadProducts), fork(watchDeleteProduct)]);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/sagas/shop.js"],"names":["addProduct","watchAddProduct","loadProducts","watchLoadProducts","deleteProduct","watchDeleteProduct","productsSaga","axios","all","put","fork","call","takeLatest","ADD_PRODUCT_REQUEST","ADD_PRODUCT_SUCCESS","ADD_PRODUCT_FAILURE","ADMIN_PRODUCTS_REQUEST","ADMIN_PRODUCTS_SUCCESS","ADMIN_PRODUCTS_FAILURE","DELETE_PRODUCT_FAILURE","DELETE_PRODUCT_SUCCESS","DELETE_PRODUCT_REQUEST","addProductApi","data","post","withCredentials","action","formData","result","type","console","log","error","loadProductsApi","ShopId","deleteProductAPI","id","selectProductAPI","ProductId"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { all, put, fork, call, takeLatest } from 'redux-saga/effects';\r\nimport {\r\n  ADD_PRODUCT_REQUEST,\r\n  ADD_PRODUCT_SUCCESS,\r\n  ADD_PRODUCT_FAILURE,\r\n  ADMIN_PRODUCTS_REQUEST,\r\n  ADMIN_PRODUCTS_SUCCESS,\r\n  ADMIN_PRODUCTS_FAILURE,\r\n  DELETE_PRODUCT_FAILURE,\r\n  DELETE_PRODUCT_SUCCESS,\r\n  DELETE_PRODUCT_REQUEST,\r\n} from '../reducers/shop';\r\n\r\nfunction addProductApi(data) {\r\n  return axios.post('/products/add', data, {\r\n    withCredentials: true,\r\n  });\r\n}\r\nfunction* addProduct(action) {\r\n  try {\r\n    const result = yield call(addProductApi, action.formData);\r\n    yield put({ type: ADD_PRODUCT_SUCCESS, data: result.data });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({ type: ADD_PRODUCT_FAILURE, error: e });\r\n  }\r\n}\r\nfunction* watchAddProduct() {\r\n  yield takeLatest(ADD_PRODUCT_REQUEST, addProduct);\r\n}\r\n\r\nfunction loadProductsApi(ShopId) {\r\n  return axios.post('/products/load', { ShopId });\r\n}\r\nfunction* loadProducts(action) {\r\n  try {\r\n    console.log(action);\r\n    const result = yield call(loadProductsApi, action.ShopId);\r\n    yield put({ type: ADMIN_PRODUCTS_SUCCESS, data: result.data });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({ type: ADMIN_PRODUCTS_FAILURE, error: e });\r\n  }\r\n}\r\nfunction* watchLoadProducts() {\r\n  yield takeLatest(ADMIN_PRODUCTS_REQUEST, loadProducts);\r\n}\r\n\r\nfunction deleteProductAPI(id) {\r\n  console.log(id);\r\n  return axios.post('/products/delete', { id });\r\n}\r\nfunction* deleteProduct(action) {\r\n  try {\r\n    yield call(deleteProductAPI, action.id);\r\n    yield put({ type: DELETE_PRODUCT_SUCCESS, data: action.id });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({ type: DELETE_PRODUCT_FAILURE, error: e });\r\n  }\r\n}\r\nfunction* watchDeleteProduct() {\r\n  yield takeLatest(DELETE_PRODUCT_REQUEST, deleteProduct);\r\n}\r\n\r\nfunction selectProductAPI({ProductId}) {\r\n  return axios.post('/products/select', { data });\r\n}\r\n\r\n\r\n\r\nexport default function* productsSaga() {\r\n  yield all([fork(watchAddProduct), fork(watchLoadProducts), fork(watchDeleteProduct)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}