{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar initialState = {\n  products: [{\n    id: 1,\n    title: \"\\uBD88\\uB2ED \\uBCF6\\uC74C\\uBA74\",\n    price: 3000,\n    quantity: 1,\n    cover: \"https://www.samyangfoods.com/upload/product/20200309/20200309161335950019.jpg\",\n    description: \"\\uB9DB\\uC788\\uB294 \\uBD88\\uB2ED \\uBCF6\\uC74C\\uBA74\"\n  }, {\n    id: 2,\n    title: \"\\uBD88\\uB2ED \\uBCF6\\uC74C\\uBA74\",\n    price: 3000,\n    quantity: 1,\n    cover: \"https://www.samyangfoods.com/upload/product/20200309/20200309161335950019.jpg\",\n    description: \"\\uB9DB\\uC788\\uB294 \\uBD88\\uB2ED \\uBCF6\\uC74C\\uBA74\"\n  }],\n  test: false\n};\nexport var LOAD_STORE_PRODUCTS = \"LOAD_STORE_PRODUCTS\";\nexport var ADD_QUANTITY_REQUEST = \"ADD_QUANTITY_REQUEST\";\nexport var ADD_QUANTITY_SUCCESS = \"ADD_QUANTITY_SUCCESS\";\nexport var ADD_QUANTITY_FAILURE = \"ADD_QUANTITY_FAILURE\";\nexport var SUBSTRACT_QUANTITY_REQUEST = \"SUBSTRACT_QUANTITY_REQUEST\";\nexport var SUBSTRACT_QUANTITY_SUCCESS = \"SUBSTRACT_QUANTITY_SUCCESS\";\nexport var SUBSTRACT_QUANTITY_FAILURE = \"SUBSTRACT_QUANTITY_FAILURE\";\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(action.type);\n\n  switch (action.type) {\n    case LOAD_STORE_PRODUCTS:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case ADD_QUANTITY_REQUEST:\n      {\n        console.log(\"requst!\");\n        return _objectSpread({}, state);\n      }\n\n    case ADD_QUANTITY_SUCCESS:\n      {\n        console.log(\"success\");\n        var index = state.products.findIndex(function (product) {\n          return product.id === action.data.id;\n        });\n        var product = state.products[index];\n        var quantity = product.quantity + 1;\n\n        var _products = _objectSpread({}, state.produdcts);\n\n        _products[index] = _objectSpread({}, product, {\n          quantity: quantity\n        });\n        return _objectSpread({}, state, {\n          products: _products,\n          test: true\n        });\n      }\n\n    case ADD_QUANTITY_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case SUBSTRACT_QUANTITY_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case SUBSTRACT_QUANTITY_SUCCESS:\n      {\n        // const index = state.products.findIndex((product) => product.id === action.data.id);\n        // const product = state.products[index];\n        // const quantity = product.quantity - 1;\n        // state.products[index] = { ...product, quantity };\n        return _objectSpread({}, state, {\n          products: products\n        });\n      }\n\n    case SUBSTRACT_QUANTITY_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/reducers/products.js"],"names":["initialState","products","id","title","price","quantity","cover","description","test","LOAD_STORE_PRODUCTS","ADD_QUANTITY_REQUEST","ADD_QUANTITY_SUCCESS","ADD_QUANTITY_FAILURE","SUBSTRACT_QUANTITY_REQUEST","SUBSTRACT_QUANTITY_SUCCESS","SUBSTRACT_QUANTITY_FAILURE","reducer","state","action","console","log","type","index","findIndex","product","data","produdcts"],"mappings":";;;;;;AAAA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,KAAK,mCAFP;AAGEC,IAAAA,KAAK,EAAE,IAHT;AAIEC,IAAAA,QAAQ,EAAE,CAJZ;AAKEC,IAAAA,KAAK,iFALP;AAMEC,IAAAA,WAAW;AANb,GADQ,EASR;AACEL,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,KAAK,mCAFP;AAGEC,IAAAA,KAAK,EAAE,IAHT;AAIEC,IAAAA,QAAQ,EAAE,CAJZ;AAKEC,IAAAA,KAAK,iFALP;AAMEC,IAAAA,WAAW;AANb,GATQ,CADS;AAmBnBC,EAAAA,IAAI,EAAE;AAnBa,CAArB;AAsBA,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AAEP,OAAO,IAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,IAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,IAAMC,oBAAoB,GAAG,sBAA7B;AAEP,OAAO,IAAMC,0BAA0B,GAAG,4BAAnC;AACP,OAAO,IAAMC,0BAA0B,GAAG,4BAAnC;AACP,OAAO,IAAMC,0BAA0B,GAAG,4BAAnC;;AAEP,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBjB,YAAyB;AAAA,MAAXkB,MAAW;AAChDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAnB;;AACA,UAAQH,MAAM,CAACG,IAAf;AACE,SAAKZ,mBAAL;AAA0B;AACxB,iCACKQ,KADL;AAGD;;AACD,SAAKP,oBAAL;AAA2B;AACzBS,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,iCACKH,KADL;AAGD;;AACD,SAAKN,oBAAL;AAA2B;AACzBQ,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,YAAME,KAAK,GAAGL,KAAK,CAAChB,QAAN,CAAesB,SAAf,CAAyB,UAACC,OAAD;AAAA,iBAAaA,OAAO,CAACtB,EAAR,KAAegB,MAAM,CAACO,IAAP,CAAYvB,EAAxC;AAAA,SAAzB,CAAd;AACA,YAAMsB,OAAO,GAAGP,KAAK,CAAChB,QAAN,CAAeqB,KAAf,CAAhB;AACA,YAAMjB,QAAQ,GAAGmB,OAAO,CAACnB,QAAR,GAAmB,CAApC;;AACA,YAAMJ,SAAQ,qBAAQgB,KAAK,CAACS,SAAd,CAAd;;AACAzB,QAAAA,SAAQ,CAACqB,KAAD,CAAR,qBAAuBE,OAAvB;AAAgCnB,UAAAA,QAAQ,EAARA;AAAhC;AACA,iCACKY,KADL;AAEEhB,UAAAA,QAAQ,EAARA,SAFF;AAGEO,UAAAA,IAAI,EAAE;AAHR;AAKD;;AACD,SAAKI,oBAAL;AAA2B;AACzB,iCACKK,KADL;AAGD;;AACD,SAAKJ,0BAAL;AAAiC;AAC/B,iCACKI,KADL;AAGD;;AACD,SAAKH,0BAAL;AAAiC;AAC/B;AACA;AACA;AACA;AACA,iCACKG,KADL;AAEEhB,UAAAA,QAAQ,EAARA;AAFF;AAID;;AACD,SAAKc,0BAAL;AAAiC;AAC/B,iCACKE,KADL;AAGD;;AACD;AAAS;AACP,iCACKA,KADL;AAGD;AAtDH;AAwDD,CA1DD;;AA4DA,eAAeD,OAAf","sourcesContent":["const initialState = {\r\n  products: [\r\n    {\r\n      id: 1,\r\n      title: `불닭 볶음면`,\r\n      price: 3000,\r\n      quantity: 1,\r\n      cover: `https://www.samyangfoods.com/upload/product/20200309/20200309161335950019.jpg`,\r\n      description: `맛있는 불닭 볶음면`,\r\n    },\r\n    {\r\n      id: 2,\r\n      title: `불닭 볶음면`,\r\n      price: 3000,\r\n      quantity: 1,\r\n      cover: `https://www.samyangfoods.com/upload/product/20200309/20200309161335950019.jpg`,\r\n      description: `맛있는 불닭 볶음면`,\r\n    },\r\n  ],\r\n  test: false,\r\n};\r\n\r\nexport const LOAD_STORE_PRODUCTS = \"LOAD_STORE_PRODUCTS\";\r\n\r\nexport const ADD_QUANTITY_REQUEST = \"ADD_QUANTITY_REQUEST\";\r\nexport const ADD_QUANTITY_SUCCESS = \"ADD_QUANTITY_SUCCESS\";\r\nexport const ADD_QUANTITY_FAILURE = \"ADD_QUANTITY_FAILURE\";\r\n\r\nexport const SUBSTRACT_QUANTITY_REQUEST = \"SUBSTRACT_QUANTITY_REQUEST\";\r\nexport const SUBSTRACT_QUANTITY_SUCCESS = \"SUBSTRACT_QUANTITY_SUCCESS\";\r\nexport const SUBSTRACT_QUANTITY_FAILURE = \"SUBSTRACT_QUANTITY_FAILURE\";\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  console.log(action.type);\r\n  switch (action.type) {\r\n    case LOAD_STORE_PRODUCTS: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case ADD_QUANTITY_REQUEST: {\r\n      console.log(\"requst!\");\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case ADD_QUANTITY_SUCCESS: {\r\n      console.log(\"success\");\r\n      const index = state.products.findIndex((product) => product.id === action.data.id);\r\n      const product = state.products[index];\r\n      const quantity = product.quantity + 1;\r\n      const products = { ...state.produdcts };\r\n      products[index] = { ...product, quantity };\r\n      return {\r\n        ...state,\r\n        products,\r\n        test: true,\r\n      };\r\n    }\r\n    case ADD_QUANTITY_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case SUBSTRACT_QUANTITY_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case SUBSTRACT_QUANTITY_SUCCESS: {\r\n      // const index = state.products.findIndex((product) => product.id === action.data.id);\r\n      // const product = state.products[index];\r\n      // const quantity = product.quantity - 1;\r\n      // state.products[index] = { ...product, quantity };\r\n      return {\r\n        ...state,\r\n        products,\r\n      };\r\n    }\r\n    case SUBSTRACT_QUANTITY_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    default: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}