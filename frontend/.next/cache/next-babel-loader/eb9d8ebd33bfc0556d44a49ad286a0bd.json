{"ast":null,"code":"import axios from \"axios\";\nimport { all, put, fork, call, takeLatest } from \"redux-saga/effects\";\nimport { LOAD_PRODUCTS_REQUEST, LOAD_PRODUCTS_SUCCESS, LOAD_PRODUCTS_FAILURE, ADD_PRODUCT_REQUEST, ADD_PRODUCT_SUCCESS, ADD_PRODUCT_FAILURE } from \"../reducers/shop\";\n\nfunction loadProductApi() {\n  // return axios.get(`/shop/${data.shopId}/${data.tableId}`);\n  return axios.get(\"/menu\");\n}\n\nfunction* loadProducts() {\n  try {\n    const result = yield call(loadProductApi);\n    console.log(result);\n    yield put({\n      type: LOAD_PRODUCTS_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.log(e);\n    yield put({\n      type: LOAD_PRODUCTS_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchLoadProducts() {\n  yield takeLatest(LOAD_PRODUCTS_REQUEST, loadProducts);\n}\n\nfunction addProductApi(data) {\n  console.log(data);\n  return axios.post(\"/products/add\", data, {\n    withCredentials: true\n  });\n}\n\nfunction* addProduct(action) {\n  try {\n    console.log(action.formData);\n    const result = yield call(addProductApi, action.formData);\n    yield put({\n      type: ADD_PRODUCT_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.log(e);\n    yield put({\n      type: ADD_PRODUCT_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchAddProduct() {\n  yield takeLatest(ADD_PRODUCT_REQUEST, addProduct);\n}\n\nexport default function* productsSaga() {\n  yield all([fork(watchLoadProducts), fork(watchAddProduct)]);\n}","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/sagas/shop.js"],"names":["axios","all","put","fork","call","takeLatest","LOAD_PRODUCTS_REQUEST","LOAD_PRODUCTS_SUCCESS","LOAD_PRODUCTS_FAILURE","ADD_PRODUCT_REQUEST","ADD_PRODUCT_SUCCESS","ADD_PRODUCT_FAILURE","loadProductApi","get","loadProducts","result","console","log","type","data","e","error","watchLoadProducts","addProductApi","post","withCredentials","addProduct","action","formData","watchAddProduct","productsSaga"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,UAA/B,QAAiD,oBAAjD;AACA,SACEC,qBADF,EAEEC,qBAFF,EAGEC,qBAHF,EAIEC,mBAJF,EAKEC,mBALF,EAMEC,mBANF,QAOO,kBAPP;;AASA,SAASC,cAAT,GAA0B;AACxB;AACA,SAAOZ,KAAK,CAACa,GAAN,CAAU,OAAV,CAAP;AACD;;AAED,UAAUC,YAAV,GAAyB;AACvB,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMX,IAAI,CAACQ,cAAD,CAAzB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,UAAMb,GAAG,CAAC;AACRgB,MAAAA,IAAI,EAAEX,qBADE;AAERY,MAAAA,IAAI,EAAEJ,MAAM,CAACI;AAFL,KAAD,CAAT;AAID,GAPD,CAOE,OAAOC,CAAP,EAAU;AACVJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,CAAZ;AACA,UAAMlB,GAAG,CAAC;AACRgB,MAAAA,IAAI,EAAEV,qBADE;AAERa,MAAAA,KAAK,EAAED;AAFC,KAAD,CAAT;AAID;AACF;;AAED,UAAUE,iBAAV,GAA8B;AAC5B,QAAMjB,UAAU,CAACC,qBAAD,EAAwBQ,YAAxB,CAAhB;AACD;;AAED,SAASS,aAAT,CAAuBJ,IAAvB,EAA6B;AAC3BH,EAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AACA,SAAOnB,KAAK,CAACwB,IAAN,CAAW,eAAX,EAA4BL,IAA5B,EAAkC;AACvCM,IAAAA,eAAe,EAAE;AADsB,GAAlC,CAAP;AAGD;;AAED,UAAUC,UAAV,CAAqBC,MAArB,EAA6B;AAC3B,MAAI;AACFX,IAAAA,OAAO,CAACC,GAAR,CAAYU,MAAM,CAACC,QAAnB;AACA,UAAMb,MAAM,GAAG,MAAMX,IAAI,CAACmB,aAAD,EAAgBI,MAAM,CAACC,QAAvB,CAAzB;AACA,UAAM1B,GAAG,CAAC;AAAEgB,MAAAA,IAAI,EAAER,mBAAR;AAA6BS,MAAAA,IAAI,EAAEJ,MAAM,CAACI;AAA1C,KAAD,CAAT;AACD,GAJD,CAIE,OAAOC,CAAP,EAAU;AACVJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,CAAZ;AACA,UAAMlB,GAAG,CAAC;AAAEgB,MAAAA,IAAI,EAAEP,mBAAR;AAA6BU,MAAAA,KAAK,EAAED;AAApC,KAAD,CAAT;AACD;AACF;;AAED,UAAUS,eAAV,GAA4B;AAC1B,QAAMxB,UAAU,CAACI,mBAAD,EAAsBiB,UAAtB,CAAhB;AACD;;AAED,eAAe,UAAUI,YAAV,GAAyB;AACtC,QAAM7B,GAAG,CAAC,CAACE,IAAI,CAACmB,iBAAD,CAAL,EAA0BnB,IAAI,CAAC0B,eAAD,CAA9B,CAAD,CAAT;AACD","sourcesContent":["import axios from \"axios\";\r\nimport { all, put, fork, call, takeLatest } from \"redux-saga/effects\";\r\nimport {\r\n  LOAD_PRODUCTS_REQUEST,\r\n  LOAD_PRODUCTS_SUCCESS,\r\n  LOAD_PRODUCTS_FAILURE,\r\n  ADD_PRODUCT_REQUEST,\r\n  ADD_PRODUCT_SUCCESS,\r\n  ADD_PRODUCT_FAILURE,\r\n} from \"../reducers/shop\";\r\n\r\nfunction loadProductApi() {\r\n  // return axios.get(`/shop/${data.shopId}/${data.tableId}`);\r\n  return axios.get(\"/menu\");\r\n}\r\n\r\nfunction* loadProducts() {\r\n  try {\r\n    const result = yield call(loadProductApi);\r\n    console.log(result);\r\n    yield put({\r\n      type: LOAD_PRODUCTS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({\r\n      type: LOAD_PRODUCTS_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLoadProducts() {\r\n  yield takeLatest(LOAD_PRODUCTS_REQUEST, loadProducts);\r\n}\r\n\r\nfunction addProductApi(data) {\r\n  console.log(data);\r\n  return axios.post(\"/products/add\", data, {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* addProduct(action) {\r\n  try {\r\n    console.log(action.formData);\r\n    const result = yield call(addProductApi, action.formData);\r\n    yield put({ type: ADD_PRODUCT_SUCCESS, data: result.data });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({ type: ADD_PRODUCT_FAILURE, error: e });\r\n  }\r\n}\r\n\r\nfunction* watchAddProduct() {\r\n  yield takeLatest(ADD_PRODUCT_REQUEST, addProduct);\r\n}\r\n\r\nexport default function* productsSaga() {\r\n  yield all([fork(watchLoadProducts), fork(watchAddProduct)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}