{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(loadProducts),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadProducts),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(productsSaga);\n\nimport axios from \"axios\";\nimport { all, put, fork, call, takeLatest } from \"redux-saga/effects\";\nimport { LOAD_PRODUCTS_SUCCESS, LOAD_PRODUCTS_FAILURE, LOAD_PRODUCTS_REQUEST } from \"../reducers/menu\";\n\nfunction loadProductApi(data) {\n  console.log(data);\n  return axios.get(\"/menu/\".concat(data.shopId, \"/\").concat(data.tableId)); // return axios.get(\"/menu\");\n}\n\nfunction loadProducts(_ref) {\n  var data, result;\n  return _regeneratorRuntime.wrap(function loadProducts$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          data = _ref.data;\n          _context.prev = 1;\n          _context.next = 4;\n          return call(loadProductApi, data);\n\n        case 4:\n          result = _context.sent;\n          _context.next = 7;\n          return put({\n            type: LOAD_PRODUCTS_SUCCESS,\n            data: result.data\n          });\n\n        case 7:\n          _context.next = 14;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](1);\n          console.log(_context.t0);\n          _context.next = 14;\n          return put({\n            type: LOAD_PRODUCTS_FAILURE,\n            error: _context.t0\n          });\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 9]]);\n}\n\nfunction watchLoadProducts() {\n  return _regeneratorRuntime.wrap(function watchLoadProducts$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(LOAD_PRODUCTS_REQUEST, loadProducts);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nexport default function productsSaga() {\n  return _regeneratorRuntime.wrap(function productsSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return all([fork(watchLoadProducts)]);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/sagas/menu.js"],"names":["loadProducts","watchLoadProducts","productsSaga","axios","all","put","fork","call","takeLatest","LOAD_PRODUCTS_SUCCESS","LOAD_PRODUCTS_FAILURE","LOAD_PRODUCTS_REQUEST","loadProductApi","data","console","log","get","shopId","tableId","result","type","error"],"mappings":";;oDAcUA,Y;qDAiBAC,iB;qDAIeC,Y;;AAnCzB,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,UAA/B,QAAiD,oBAAjD;AACA,SACEC,qBADF,EAEEC,qBAFF,EAGEC,qBAHF,QAIO,kBAJP;;AAMA,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,SAAOV,KAAK,CAACa,GAAN,iBAAmBH,IAAI,CAACI,MAAxB,cAAkCJ,IAAI,CAACK,OAAvC,EAAP,CAF4B,CAG5B;AACD;;AAED,SAAUlB,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyBa,UAAAA,IAAzB,QAAyBA,IAAzB;AAAA;AAAA;AAGmB,iBAAMN,IAAI,CAACK,cAAD,EAAiBC,IAAjB,CAAV;;AAHnB;AAGUM,UAAAA,MAHV;AAAA;AAII,iBAAMd,GAAG,CAAC;AACRe,YAAAA,IAAI,EAAEX,qBADE;AAERI,YAAAA,IAAI,EAAEM,MAAM,CAACN;AAFL,WAAD,CAAT;;AAJJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AASIC,UAAAA,OAAO,CAACC,GAAR;AATJ;AAUI,iBAAMV,GAAG,CAAC;AACRe,YAAAA,IAAI,EAAEV,qBADE;AAERW,YAAAA,KAAK;AAFG,WAAD,CAAT;;AAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAiBA,SAAUpB,iBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMO,UAAU,CAACG,qBAAD,EAAwBX,YAAxB,CAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAe,SAAUE,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAME,GAAG,CAAC,CAACE,IAAI,CAACL,iBAAD,CAAL,CAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import axios from \"axios\";\r\nimport { all, put, fork, call, takeLatest } from \"redux-saga/effects\";\r\nimport {\r\n  LOAD_PRODUCTS_SUCCESS,\r\n  LOAD_PRODUCTS_FAILURE,\r\n  LOAD_PRODUCTS_REQUEST,\r\n} from \"../reducers/menu\";\r\n\r\nfunction loadProductApi(data) {\r\n  console.log(data);\r\n  return axios.get(`/menu/${data.shopId}/${data.tableId}`);\r\n  // return axios.get(\"/menu\");\r\n}\r\n\r\nfunction* loadProducts({ data }) {\r\n  // console.log(data);\r\n  try {\r\n    const result = yield call(loadProductApi, data);\r\n    yield put({\r\n      type: LOAD_PRODUCTS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({\r\n      type: LOAD_PRODUCTS_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLoadProducts() {\r\n  yield takeLatest(LOAD_PRODUCTS_REQUEST, loadProducts);\r\n}\r\n\r\nexport default function* productsSaga() {\r\n  yield all([fork(watchLoadProducts)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}