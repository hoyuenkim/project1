{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(loadProducts),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadProducts),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(addProduct),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchAddProduct),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(productsSaga);\n\nimport { all, put, fork, call, takeLatest } from \"redux-saga/effects\";\nimport { LOAD_PRODUCTS_REQUEST, LOAD_PRODUCTS_SUCCESS, LOAD_PRODUCTS_FAILURE, ADD_PRODUCT_REQUEST, ADD_PRODUCT_SUCCESS, ADD_PRODUCT_FAILURE } from \"../reducers/shop\";\n\nfunction loadProductApi() {\n  return axios.get(\"/shop/\".concat(id, \"/\").concat(table));\n}\n\nfunction loadProducts() {\n  var result;\n  return _regeneratorRuntime.wrap(function loadProducts$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(loadProductApi);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            type: LOAD_PRODUCTS_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context.next = 13;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n          _context.next = 13;\n          return put({\n            type: LOAD_PRODUCTS_FAILURE,\n            error: _context.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction watchLoadProducts() {\n  return _regeneratorRuntime.wrap(function watchLoadProducts$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(LOAD_PRODUCTS_REQUEST, loadProducts);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction addProductApi(data) {\n  return axios.post(\"/store/product/add\", data, {\n    withCredentials: true\n  });\n}\n\nfunction addProduct(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function addProduct$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          console.log(\"yes\");\n          _context3.prev = 1;\n          _context3.next = 4;\n          return call(addProductApi, action.data);\n\n        case 4:\n          result = _context3.sent;\n          _context3.next = 7;\n          return put({\n            type: ADD_PRODUCT_SUCCESS,\n            data: result.data\n          });\n\n        case 7:\n          _context3.next = 14;\n          break;\n\n        case 9:\n          _context3.prev = 9;\n          _context3.t0 = _context3[\"catch\"](1);\n          console.log(_context3.t0);\n          _context3.next = 14;\n          return put({\n            type: ADD_PRODUCT_FAILURE,\n            error: _context3.t0\n          });\n\n        case 14:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[1, 9]]);\n}\n\nfunction watchAddProduct() {\n  return _regeneratorRuntime.wrap(function watchAddProduct$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          console.log(\"yes\");\n          _context4.next = 3;\n          return takeEvery(ADD_PRODUCT_REQUEST, addProduct);\n\n        case 3:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nexport default function productsSaga() {\n  return _regeneratorRuntime.wrap(function productsSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return all([fork(watchLoadProducts), fork(watchAddProduct)]);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/sagas/shop.js"],"names":["loadProducts","watchLoadProducts","addProduct","watchAddProduct","productsSaga","all","put","fork","call","takeLatest","LOAD_PRODUCTS_REQUEST","LOAD_PRODUCTS_SUCCESS","LOAD_PRODUCTS_FAILURE","ADD_PRODUCT_REQUEST","ADD_PRODUCT_SUCCESS","ADD_PRODUCT_FAILURE","loadProductApi","axios","get","id","table","result","type","data","console","log","error","addProductApi","post","withCredentials","action","takeEvery"],"mappings":";;oDAcUA,Y;qDAgBAC,iB;qDAUAC,U;qDAWAC,e;qDAKeC,Y;;AAxDzB,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,UAA/B,QAAiD,oBAAjD;AACA,SACEC,qBADF,EAEEC,qBAFF,EAGEC,qBAHF,EAIEC,mBAJF,EAKEC,mBALF,EAMEC,mBANF,QAOO,kBAPP;;AASA,SAASC,cAAT,GAA0B;AACxB,SAAOC,KAAK,CAACC,GAAN,iBAAmBC,EAAnB,cAAyBC,KAAzB,EAAP;AACD;;AAED,SAAUpB,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEmB,iBAAMQ,IAAI,CAACQ,cAAD,CAAV;;AAFnB;AAEUK,UAAAA,MAFV;AAAA;AAGI,iBAAMf,GAAG,CAAC;AACRgB,YAAAA,IAAI,EAAEX,qBADE;AAERY,YAAAA,IAAI,EAAEF,MAAM,CAACE;AAFL,WAAD,CAAT;;AAHJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQIC,UAAAA,OAAO,CAACC,GAAR;AARJ;AASI,iBAAMnB,GAAG,CAAC;AACRgB,YAAAA,IAAI,EAAEV,qBADE;AAERc,YAAAA,KAAK;AAFG,WAAD,CAAT;;AATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgBA,SAAUzB,iBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMQ,UAAU,CAACC,qBAAD,EAAwBV,YAAxB,CAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAS2B,aAAT,CAAuBJ,IAAvB,EAA6B;AAC3B,SAAON,KAAK,CAACW,IAAN,CAAW,oBAAX,EAAiCL,IAAjC,EAAuC;AAC5CM,IAAAA,eAAe,EAAE;AAD2B,GAAvC,CAAP;AAGD;;AAED,SAAU3B,UAAV,CAAqB4B,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AACEN,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AADF;AAAA;AAGmB,iBAAMjB,IAAI,CAACmB,aAAD,EAAgBG,MAAM,CAACP,IAAvB,CAAV;;AAHnB;AAGUF,UAAAA,MAHV;AAAA;AAII,iBAAMf,GAAG,CAAC;AAAEgB,YAAAA,IAAI,EAAER,mBAAR;AAA6BS,YAAAA,IAAI,EAAEF,MAAM,CAACE;AAA1C,WAAD,CAAT;;AAJJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAMIC,UAAAA,OAAO,CAACC,GAAR;AANJ;AAOI,iBAAMnB,GAAG,CAAC;AAAEgB,YAAAA,IAAI,EAAEP,mBAAR;AAA6BW,YAAAA,KAAK;AAAlC,WAAD,CAAT;;AAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWA,SAAUvB,eAAV;AAAA;AAAA;AAAA;AAAA;AACEqB,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AADF;AAEE,iBAAMM,SAAS,CAAClB,mBAAD,EAAsBX,UAAtB,CAAf;;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKA,eAAe,SAAUE,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAMC,GAAG,CAAC,CAACE,IAAI,CAACN,iBAAD,CAAL,EAA0BM,IAAI,CAACJ,eAAD,CAA9B,CAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, put, fork, call, takeLatest } from \"redux-saga/effects\";\r\nimport {\r\n  LOAD_PRODUCTS_REQUEST,\r\n  LOAD_PRODUCTS_SUCCESS,\r\n  LOAD_PRODUCTS_FAILURE,\r\n  ADD_PRODUCT_REQUEST,\r\n  ADD_PRODUCT_SUCCESS,\r\n  ADD_PRODUCT_FAILURE,\r\n} from \"../reducers/shop\";\r\n\r\nfunction loadProductApi() {\r\n  return axios.get(`/shop/${id}/${table}`);\r\n}\r\n\r\nfunction* loadProducts() {\r\n  try {\r\n    const result = yield call(loadProductApi);\r\n    yield put({\r\n      type: LOAD_PRODUCTS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({\r\n      type: LOAD_PRODUCTS_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLoadProducts() {\r\n  yield takeLatest(LOAD_PRODUCTS_REQUEST, loadProducts);\r\n}\r\n\r\nfunction addProductApi(data) {\r\n  return axios.post(\"/store/product/add\", data, {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* addProduct(action) {\r\n  console.log(\"yes\");\r\n  try {\r\n    const result = yield call(addProductApi, action.data);\r\n    yield put({ type: ADD_PRODUCT_SUCCESS, data: result.data });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({ type: ADD_PRODUCT_FAILURE, error: e });\r\n  }\r\n}\r\n\r\nfunction* watchAddProduct() {\r\n  console.log(\"yes\");\r\n  yield takeEvery(ADD_PRODUCT_REQUEST, addProduct);\r\n}\r\n\r\nexport default function* productsSaga() {\r\n  yield all([fork(watchLoadProducts), fork(watchAddProduct)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}