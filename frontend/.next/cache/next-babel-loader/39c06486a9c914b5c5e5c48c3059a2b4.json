{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport ImageInput from \"../../components/Generalui/ImageInput\";\nimport { Form, Input, Button, Upload } from \"antd\";\nimport { useInput } from \"../../components/Generalui/CustomHooks\";\nimport ImgCrop from \"antd-img-crop\";\n\nconst Regist = () => {\n  const [name, onChangeName] = useInput();\n  const [price, onChangePrice] = useInput();\n  const [fileList, setFileList] = useState([]);\n\n  const onImagesChange = ({\n    fileList: newFileList\n  }) => {\n    setFileList(newFileList);\n  };\n\n  const onPreview = async file => {\n    let src = file.url;\n\n    if (!src) {\n      src = await new Promise(resolve => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file.originFileObj);\n\n        reader.onload = () => resolve(reader.result);\n      });\n    }\n\n    const image = new Image();\n    image.src = src;\n    const imgWindow = window.open(src);\n    imgWindow.document.write(image.outerHTML);\n  };\n\n  return __jsx(Form, {\n    encType: \"multipartForm\"\n  }, __jsx(ImgCrop, {\n    rotate: true,\n    aspect: 4 / 3\n  }, __jsx(Upload, {\n    action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\n    listType: \"picture-card\",\n    fileList: fileList,\n    onChange: onImagesChange,\n    onPreview: onPreview\n  }, fileList.length < 5 && \"+ Upload\")), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    onClick: checkFiles\n  }, \"\\uC81C\\uCD9C\"));\n};\n\nexport default Regist;","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/pages/admin/regist.js"],"names":["ImageInput","Form","Input","Button","Upload","useInput","ImgCrop","Regist","name","onChangeName","price","onChangePrice","fileList","setFileList","useState","onImagesChange","newFileList","onPreview","file","src","url","Promise","resolve","reader","FileReader","readAsDataURL","originFileObj","onload","result","image","Image","imgWindow","window","open","document","write","outerHTML","length","checkFiles"],"mappings":";;AAAA,OAAOA,UAAP,MAAuB,uCAAvB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,MAA9B,QAA4C,MAA5C;AACA,SAASC,QAAT,QAAyB,wCAAzB;AACA,OAAOC,OAAP,MAAoB,eAApB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAM,CAACC,IAAD,EAAOC,YAAP,IAAuBJ,QAAQ,EAArC;AACA,QAAM,CAACK,KAAD,EAAQC,aAAR,IAAyBN,QAAQ,EAAvC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BC,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMC,cAAc,GAAG,CAAC;AAAEH,IAAAA,QAAQ,EAAEI;AAAZ,GAAD,KAA+B;AACpDH,IAAAA,WAAW,CAACG,WAAD,CAAX;AACD,GAFD;;AAIA,QAAMC,SAAS,GAAG,MAAOC,IAAP,IAAgB;AAChC,QAAIC,GAAG,GAAGD,IAAI,CAACE,GAAf;;AACA,QAAI,CAACD,GAAL,EAAU;AACRA,MAAAA,GAAG,GAAG,MAAM,IAAIE,OAAJ,CAAaC,OAAD,IAAa;AACnC,cAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,QAAAA,MAAM,CAACE,aAAP,CAAqBP,IAAI,CAACQ,aAA1B;;AACAH,QAAAA,MAAM,CAACI,MAAP,GAAgB,MAAML,OAAO,CAACC,MAAM,CAACK,MAAR,CAA7B;AACD,OAJW,CAAZ;AAKD;;AACD,UAAMC,KAAK,GAAG,IAAIC,KAAJ,EAAd;AACAD,IAAAA,KAAK,CAACV,GAAN,GAAYA,GAAZ;AACA,UAAMY,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYd,GAAZ,CAAlB;AACAY,IAAAA,SAAS,CAACG,QAAV,CAAmBC,KAAnB,CAAyBN,KAAK,CAACO,SAA/B;AACD,GAbD;;AAeA,SACE,MAAC,IAAD;AAAM,IAAA,OAAO,EAAE;AAAf,KACE,MAAC,OAAD;AAAS,IAAA,MAAM,MAAf;AAAgB,IAAA,MAAM,EAAE,IAAI;AAA5B,KACE,MAAC,MAAD;AACE,IAAA,MAAM,EAAC,kDADT;AAEE,IAAA,QAAQ,EAAC,cAFX;AAGE,IAAA,QAAQ,EAAExB,QAHZ;AAIE,IAAA,QAAQ,EAAEG,cAJZ;AAKE,IAAA,SAAS,EAAEE;AALb,KAOGL,QAAQ,CAACyB,MAAT,GAAkB,CAAlB,IAAuB,UAP1B,CADF,CADF,EAYE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,EAAC,QAAhC;AAAyC,IAAA,OAAO,EAAEC;AAAlD,oBAZF,CADF;AAkBD,CA1CD;;AA4CA,eAAe/B,MAAf","sourcesContent":["import ImageInput from \"../../components/Generalui/ImageInput\";\r\nimport { Form, Input, Button, Upload } from \"antd\";\r\nimport { useInput } from \"../../components/Generalui/CustomHooks\";\r\nimport ImgCrop from \"antd-img-crop\";\r\n\r\nconst Regist = () => {\r\n  const [name, onChangeName] = useInput();\r\n  const [price, onChangePrice] = useInput();\r\n  const [fileList, setFileList] = useState([]);\r\n\r\n  const onImagesChange = ({ fileList: newFileList }) => {\r\n    setFileList(newFileList);\r\n  };\r\n\r\n  const onPreview = async (file) => {\r\n    let src = file.url;\r\n    if (!src) {\r\n      src = await new Promise((resolve) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file.originFileObj);\r\n        reader.onload = () => resolve(reader.result);\r\n      });\r\n    }\r\n    const image = new Image();\r\n    image.src = src;\r\n    const imgWindow = window.open(src);\r\n    imgWindow.document.write(image.outerHTML);\r\n  };\r\n\r\n  return (\r\n    <Form encType={\"multipartForm\"}>\r\n      <ImgCrop rotate aspect={4 / 3}>\r\n        <Upload\r\n          action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n          listType=\"picture-card\"\r\n          fileList={fileList}\r\n          onChange={onImagesChange}\r\n          onPreview={onPreview}\r\n        >\r\n          {fileList.length < 5 && \"+ Upload\"}\r\n        </Upload>\r\n      </ImgCrop>\r\n      <Button type=\"primary\" htmlType=\"submit\" onClick={checkFiles}>\r\n        제출\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default Regist;\r\n"]},"metadata":{},"sourceType":"module"}