{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(login),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogin),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(signUp),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchSignUp),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(loadUser),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadUser),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(bizcodeConfirm),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(watchBizcodeConfirm),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(emailConfirm),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(watchEmailConfirm),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(userSaga);\n\nimport { fork, takeEvery, all, put, call, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOAD_USER_SUCCESS, LOAD_USER_FAILURE, LOAD_USER_REQUEST, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, BIZCODE_CONFIRM_FAILURE, BIZCODE_CONFIRM_SUCCESS, BIZCODE_CONFIRM_REQUEST, EMAIL_CONFIRM_REQUEST, EMAIL_CONFIRM_SUCCESS, EMAIL_CONFIRM_FAILURE } from '../reducers/user';\n\nfunction loginApi(loginData) {\n  return axios.post('/user/login', loginData, {\n    withCredentials: true\n  });\n}\n\nfunction login(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function login$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(loginApi, action.data);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            type: LOG_IN_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context.next = 13;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n          _context.next = 13;\n          return put({\n            type: LOG_IN_FAILURE,\n            error: _context.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction watchLogin() {\n  return _regeneratorRuntime.wrap(function watchLogin$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(LOG_IN_REQUEST, login);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction signUpApi(signUpData) {\n  return axios.post('/user/signup', signUpData);\n}\n\nfunction signUp(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function signUp$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(signUpApi, action.data);\n\n        case 3:\n          result = _context3.sent;\n          _context3.next = 6;\n          return put({\n            type: SIGN_UP_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context3.next = 13;\n          break;\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(_context3.t0);\n          _context3.next = 13;\n          return put({\n            type: SIGN_UP_FAILURE,\n            error: _context3.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 8]]);\n}\n\nfunction watchSignUp() {\n  return _regeneratorRuntime.wrap(function watchSignUp$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeEvery(SIGN_UP_REQUEST, signUp);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction loadUserApi() {\n  // 서버에 요청을 보내는 부분\n  return axios.get('/user', {\n    withCredentials: true\n  });\n}\n\nfunction loadUser() {\n  var result;\n  return _regeneratorRuntime.wrap(function loadUser$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          console.log('load user request');\n          _context5.next = 4;\n          return call(loadUserApi);\n\n        case 4:\n          result = _context5.sent;\n          _context5.next = 7;\n          return put({\n            type: LOAD_USER_SUCCESS,\n            data: result.data\n          });\n\n        case 7:\n          _context5.next = 14;\n          break;\n\n        case 9:\n          _context5.prev = 9;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.log(_context5.t0);\n          _context5.next = 14;\n          return put({\n            type: LOAD_USER_FAILURE,\n            error: _context5.t0\n          });\n\n        case 14:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 9]]);\n}\n\nfunction watchLoadUser() {\n  return _regeneratorRuntime.wrap(function watchLoadUser$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeEvery(LOAD_USER_REQUEST, loadUser);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nfunction bizcodeConfirmApi(bizcode) {\n  return axios.post('/user/confirm/bizcode', {\n    bizcode: bizcode\n  });\n}\n\nfunction bizcodeConfirm(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function bizcodeConfirm$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _context7.next = 3;\n          return call(bizcodeConfirmApi, action.bizcode);\n\n        case 3:\n          result = _context7.sent;\n          _context7.next = 6;\n          return put({\n            type: BIZCODE_CONFIRM_SUCCESS,\n            data: result.dlogata\n          });\n\n        case 6:\n          _context7.next = 12;\n          break;\n\n        case 8:\n          _context7.prev = 8;\n          _context7.t0 = _context7[\"catch\"](0);\n          _context7.next = 12;\n          return put({\n            type: BIZCODE_CONFIRM_FAILURE,\n            error: _context7.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 8]]);\n}\n\nfunction watchBizcodeConfirm() {\n  return _regeneratorRuntime.wrap(function watchBizcodeConfirm$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeLatest(BIZCODE_CONFIRM_REQUEST, bizcodeConfirm);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\n\nfunction emailConfirmApi(email) {\n  return axios.post('/user/confirm/email', {\n    email: email\n  });\n}\n\nfunction emailConfirm(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function emailConfirm$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.prev = 0;\n          _context9.next = 3;\n          return call(emailConfirmApi, action.email);\n\n        case 3:\n          result = _context9.sent;\n          _context9.next = 6;\n          return put({\n            type: EMAIL_CONFIRM_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context9.next = 12;\n          break;\n\n        case 8:\n          _context9.prev = 8;\n          _context9.t0 = _context9[\"catch\"](0);\n          _context9.next = 12;\n          return put({\n            type: EMAIL_CONFIRM_FAILURE,\n            error: _context9.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9, null, [[0, 8]]);\n}\n\nfunction watchEmailConfirm() {\n  return _regeneratorRuntime.wrap(function watchEmailConfirm$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeLatest(EMAIL_CONFIRM_REQUEST, emailConfirm);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return all([fork(watchLogin), fork(watchLoadUser), fork(watchSignUp), fork(watchBizcodeConfirm), fork(watchEmailConfirm)]);\n\n        case 2:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11);\n}","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/sagas/user.js"],"names":["login","watchLogin","signUp","watchSignUp","loadUser","watchLoadUser","bizcodeConfirm","watchBizcodeConfirm","emailConfirm","watchEmailConfirm","userSaga","fork","takeEvery","all","put","call","takeLatest","axios","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","LOAD_USER_REQUEST","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","BIZCODE_CONFIRM_FAILURE","BIZCODE_CONFIRM_SUCCESS","BIZCODE_CONFIRM_REQUEST","EMAIL_CONFIRM_REQUEST","EMAIL_CONFIRM_SUCCESS","EMAIL_CONFIRM_FAILURE","loginApi","loginData","post","withCredentials","action","data","result","type","console","log","error","signUpApi","signUpData","loadUserApi","get","bizcodeConfirmApi","bizcode","dlogata","emailConfirmApi","email"],"mappings":";;oDAwBUA,K;qDAgBAC,U;qDAQAC,M;qDAgBAC,W;qDAUAC,Q;qDAiBAC,a;qDAQAC,c;qDAeAC,mB;qDAQAC,Y;sDAeAC,iB;sDAIeC,Q;;AA7IzB,SAASC,IAAT,EAAeC,SAAf,EAA0BC,GAA1B,EAA+BC,GAA/B,EAAoCC,IAApC,EAA0CC,UAA1C,QAA4D,oBAA5D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,iBADF,EAEEC,iBAFF,EAGEC,iBAHF,EAIEC,cAJF,EAKEC,cALF,EAMEC,cANF,EAOEC,eAPF,EAQEC,eARF,EASEC,eATF,EAUEC,uBAVF,EAWEC,uBAXF,EAYEC,uBAZF,EAaEC,qBAbF,EAcEC,qBAdF,EAeEC,qBAfF,QAgBO,kBAhBP;;AAkBA,SAASC,QAAT,CAAkBC,SAAlB,EAA6B;AAC3B,SAAOjB,KAAK,CAACkB,IAAN,CAAW,aAAX,EAA0BD,SAA1B,EAAqC;AAAEE,IAAAA,eAAe,EAAE;AAAnB,GAArC,CAAP;AACD;;AAED,SAAUpC,KAAV,CAAgBqC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEmB,iBAAMtB,IAAI,CAACkB,QAAD,EAAWI,MAAM,CAACC,IAAlB,CAAV;;AAFnB;AAEUC,UAAAA,MAFV;AAAA;AAGI,iBAAMzB,GAAG,CAAC;AACR0B,YAAAA,IAAI,EAAElB,cADE;AAERgB,YAAAA,IAAI,EAAEC,MAAM,CAACD;AAFL,WAAD,CAAT;;AAHJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQIG,UAAAA,OAAO,CAACC,GAAR;AARJ;AASI,iBAAM5B,GAAG,CAAC;AACR0B,YAAAA,IAAI,EAAEjB,cADE;AAERoB,YAAAA,KAAK;AAFG,WAAD,CAAT;;AATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgBA,SAAU1C,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMW,SAAS,CAACS,cAAD,EAAiBrB,KAAjB,CAAf;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAS4C,SAAT,CAAmBC,UAAnB,EAA+B;AAC7B,SAAO5B,KAAK,CAACkB,IAAN,CAAW,cAAX,EAA2BU,UAA3B,CAAP;AACD;;AAED,SAAU3C,MAAV,CAAiBmC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEmB,iBAAMtB,IAAI,CAAC6B,SAAD,EAAYP,MAAM,CAACC,IAAnB,CAAV;;AAFnB;AAEUC,UAAAA,MAFV;AAAA;AAGI,iBAAMzB,GAAG,CAAC;AACR0B,YAAAA,IAAI,EAAEf,eADE;AAERa,YAAAA,IAAI,EAAEC,MAAM,CAACD;AAFL,WAAD,CAAT;;AAHJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQIG,UAAAA,OAAO,CAACC,GAAR;AARJ;AASI,iBAAM5B,GAAG,CAAC;AACR0B,YAAAA,IAAI,EAAEd,eADE;AAERiB,YAAAA,KAAK;AAFG,WAAD,CAAT;;AATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgBA,SAAUxC,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMS,SAAS,CAACY,eAAD,EAAkBtB,MAAlB,CAAf;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAS4C,WAAT,GAAuB;AACrB;AAEA,SAAO7B,KAAK,CAAC8B,GAAN,CAAU,OAAV,EAAmB;AAAEX,IAAAA,eAAe,EAAE;AAAnB,GAAnB,CAAP;AACD;;AAED,SAAUhC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEIqC,UAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AAFJ;AAGmB,iBAAM3B,IAAI,CAAC+B,WAAD,CAAV;;AAHnB;AAGUP,UAAAA,MAHV;AAAA;AAII,iBAAMzB,GAAG,CAAC;AACR0B,YAAAA,IAAI,EAAEtB,iBADE;AAERoB,YAAAA,IAAI,EAAEC,MAAM,CAACD;AAFL,WAAD,CAAT;;AAJJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AASIG,UAAAA,OAAO,CAACC,GAAR;AATJ;AAUI,iBAAM5B,GAAG,CAAC;AACR0B,YAAAA,IAAI,EAAErB,iBADE;AAERwB,YAAAA,KAAK;AAFG,WAAD,CAAT;;AAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAiBA,SAAUtC,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMO,SAAS,CAACQ,iBAAD,EAAoBhB,QAApB,CAAf;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAS4C,iBAAT,CAA2BC,OAA3B,EAAoC;AAClC,SAAOhC,KAAK,CAACkB,IAAN,CAAW,uBAAX,EAAoC;AAAEc,IAAAA,OAAO,EAAPA;AAAF,GAApC,CAAP;AACD;;AAED,SAAU3C,cAAV,CAAyB+B,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEmB,iBAAMtB,IAAI,CAACiC,iBAAD,EAAoBX,MAAM,CAACY,OAA3B,CAAV;;AAFnB;AAEUV,UAAAA,MAFV;AAAA;AAGI,iBAAMzB,GAAG,CAAC;AACR0B,YAAAA,IAAI,EAAEZ,uBADE;AAERU,YAAAA,IAAI,EAAEC,MAAM,CAACW;AAFL,WAAD,CAAT;;AAHJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAQI,iBAAMpC,GAAG,CAAC;AACR0B,YAAAA,IAAI,EAAEb,uBADE;AAERgB,YAAAA,KAAK;AAFG,WAAD,CAAT;;AARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAeA,SAAUpC,mBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMS,UAAU,CAACa,uBAAD,EAA0BvB,cAA1B,CAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAS6C,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAOnC,KAAK,CAACkB,IAAN,CAAW,qBAAX,EAAkC;AAAEiB,IAAAA,KAAK,EAALA;AAAF,GAAlC,CAAP;AACD;;AAED,SAAU5C,YAAV,CAAuB6B,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEmB,iBAAMtB,IAAI,CAACoC,eAAD,EAAkBd,MAAM,CAACe,KAAzB,CAAV;;AAFnB;AAEUb,UAAAA,MAFV;AAAA;AAGI,iBAAMzB,GAAG,CAAC;AACR0B,YAAAA,IAAI,EAAET,qBADE;AAERO,YAAAA,IAAI,EAAEC,MAAM,CAACD;AAFL,WAAD,CAAT;;AAHJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAQI,iBAAMxB,GAAG,CAAC;AACR0B,YAAAA,IAAI,EAAER,qBADE;AAERW,YAAAA,KAAK;AAFG,WAAD,CAAT;;AARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAeA,SAAUlC,iBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMO,UAAU,CAACc,qBAAD,EAAwBtB,YAAxB,CAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAe,SAAUE,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAMG,GAAG,CAAC,CACRF,IAAI,CAACV,UAAD,CADI,EAERU,IAAI,CAACN,aAAD,CAFI,EAGRM,IAAI,CAACR,WAAD,CAHI,EAIRQ,IAAI,CAACJ,mBAAD,CAJI,EAKRI,IAAI,CAACF,iBAAD,CALI,CAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { fork, takeEvery, all, put, call, takeLatest } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {\r\n  LOAD_USER_SUCCESS,\r\n  LOAD_USER_FAILURE,\r\n  LOAD_USER_REQUEST,\r\n  LOG_IN_REQUEST,\r\n  LOG_IN_SUCCESS,\r\n  LOG_IN_FAILURE,\r\n  SIGN_UP_REQUEST,\r\n  SIGN_UP_SUCCESS,\r\n  SIGN_UP_FAILURE,\r\n  BIZCODE_CONFIRM_FAILURE,\r\n  BIZCODE_CONFIRM_SUCCESS,\r\n  BIZCODE_CONFIRM_REQUEST,\r\n  EMAIL_CONFIRM_REQUEST,\r\n  EMAIL_CONFIRM_SUCCESS,\r\n  EMAIL_CONFIRM_FAILURE,\r\n} from '../reducers/user';\r\n\r\nfunction loginApi(loginData) {\r\n  return axios.post('/user/login', loginData, { withCredentials: true });\r\n}\r\n\r\nfunction* login(action) {\r\n  try {\r\n    const result = yield call(loginApi, action.data);\r\n    yield put({\r\n      type: LOG_IN_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({\r\n      type: LOG_IN_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLogin() {\r\n  yield takeEvery(LOG_IN_REQUEST, login);\r\n}\r\n\r\nfunction signUpApi(signUpData) {\r\n  return axios.post('/user/signup', signUpData);\r\n}\r\n\r\nfunction* signUp(action) {\r\n  try {\r\n    const result = yield call(signUpApi, action.data);\r\n    yield put({\r\n      type: SIGN_UP_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({\r\n      type: SIGN_UP_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchSignUp() {\r\n  yield takeEvery(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\nfunction loadUserApi() {\r\n  // 서버에 요청을 보내는 부분\r\n\r\n  return axios.get('/user', { withCredentials: true });\r\n}\r\n\r\nfunction* loadUser() {\r\n  try {\r\n    console.log('load user request');\r\n    const result = yield call(loadUserApi);\r\n    yield put({\r\n      type: LOAD_USER_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({\r\n      type: LOAD_USER_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLoadUser() {\r\n  yield takeEvery(LOAD_USER_REQUEST, loadUser);\r\n}\r\n\r\nfunction bizcodeConfirmApi(bizcode) {\r\n  return axios.post('/user/confirm/bizcode', { bizcode });\r\n}\r\n\r\nfunction* bizcodeConfirm(action) {\r\n  try {\r\n    const result = yield call(bizcodeConfirmApi, action.bizcode);\r\n    yield put({\r\n      type: BIZCODE_CONFIRM_SUCCESS,\r\n      data: result.dlogata,\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: BIZCODE_CONFIRM_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchBizcodeConfirm() {\r\n  yield takeLatest(BIZCODE_CONFIRM_REQUEST, bizcodeConfirm);\r\n}\r\n\r\nfunction emailConfirmApi(email) {\r\n  return axios.post('/user/confirm/email', { email });\r\n}\r\n\r\nfunction* emailConfirm(action) {\r\n  try {\r\n    const result = yield call(emailConfirmApi, action.email);\r\n    yield put({\r\n      type: EMAIL_CONFIRM_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: EMAIL_CONFIRM_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchEmailConfirm() {\r\n  yield takeLatest(EMAIL_CONFIRM_REQUEST, emailConfirm);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([\r\n    fork(watchLogin),\r\n    fork(watchLoadUser),\r\n    fork(watchSignUp),\r\n    fork(watchBizcodeConfirm),\r\n    fork(watchEmailConfirm),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}