{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nimport { List, Avatar, Card, Button, Row, Col, Divider, Empty } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RestOutlined } from '@ant-design/icons';\nimport CartAmountToggle from '../../components/Generalui/CartAmoutToggle';\nimport NumberFormat from 'react-number-format';\nimport { REMOVE_ITEM_REQUEST, CLEAR_CART_REQUEST } from '../../reducers/cart';\nimport { useState, useEffect } from 'react';\nimport { useWindowSize } from '@react-hook/window-size';\nimport axios from 'axios';\nimport { useRouter } from 'next/router';\nimport { onClickPayment } from '../../components/Generalui/Payment';\nimport ModalInterface from '../../components/Generalui/Modal';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar Cart = function Cart() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useState = useState(null),\n      IMP = _useState[0],\n      setIMP = _useState[1];\n\n  var _useState2 = useState(false),\n      toggleModal = _useState2[0],\n      setToggleModal = _useState2[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.cart;\n  }),\n      cart = _useSelector.cart,\n      ShopId = _useSelector.ShopId,\n      TableId = _useSelector.TableId;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.user;\n  }),\n      isLoggedIn = _useSelector2.isLoggedIn,\n      session = _useSelector2.session;\n\n  var _useWindowSize = useWindowSize(),\n      _useWindowSize2 = _slicedToArray(_useWindowSize, 2),\n      windowWidth = _useWindowSize2[0],\n      windowHeight = _useWindowSize2[1];\n\n  var router = useRouter();\n\n  var onChangeToggleModal = function onChangeToggleModal(prev) {\n    return !prev;\n  };\n\n  var product = cart[0];\n\n  var paymentStart = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              onClickPayment('cart', product, isLoggedIn, session, onChangeToggleModal, dispatch, cart, router, ShopId, TableId);\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function paymentStart() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(ModalInterface, {\n      content: '로그인을 하셔야 합니다.',\n      toggleModal: toggleModal,\n      onChangeToggleModal: onChangeToggleModal\n    }), cart.length === 0 ? /*#__PURE__*/_jsx(Card, {\n      style: {\n        height: '100vh'\n      },\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        style: {\n          marginTop: windowHeight * 0.3,\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsx(Empty, {}), /*#__PURE__*/_jsx(\"h1\", {\n          children: \"\\uC7A5\\uBC14\\uAD6C\\uB2C8\\uAC00 \\uBE44\\uC5C8\\uC2B5\\uB2C8\\uB2E4\"\n        })]\n      })\n    }) : /*#__PURE__*/_jsx(List, {\n      itemLayout: \"horizontal\",\n      dataSource: cart,\n      renderItem: function renderItem(item) {\n        return /*#__PURE__*/_jsx(List.Item, {\n          children: /*#__PURE__*/_jsxs(Card, {\n            title: /*#__PURE__*/_jsx(\"h1\", {\n              children: item.title\n            }),\n            style: {\n              width: '100%'\n            },\n            extra: /*#__PURE__*/_jsx(\"h2\", {\n              children: /*#__PURE__*/_jsx(RestOutlined, {\n                onClick: function onClick() {\n                  dispatch({\n                    type: REMOVE_ITEM_REQUEST,\n                    id: item.id\n                  });\n                }\n              })\n            }),\n            children: [/*#__PURE__*/_jsx(Card.Meta, {\n              description: /*#__PURE__*/_jsx(List.Item.Meta, {\n                avatar: /*#__PURE__*/_jsx(Avatar, {\n                  size: 100,\n                  shape: \"square\",\n                  src: \"\".concat(process.env.BACKEND_IP, \"/uploads/\").concat(item.Images[0].url)\n                }),\n                description: /*#__PURE__*/_jsxs(Row, {\n                  gutter: [8, 16],\n                  children: [/*#__PURE__*/_jsx(Col, {\n                    span: 24,\n                    children: item.description\n                  }), /*#__PURE__*/_jsxs(Col, {\n                    span: 16,\n                    children: [\"\\uAC00\\uACA9:\", ' ', /*#__PURE__*/_jsx(NumberFormat, {\n                      value: item.Discount ? item.price * (100 - item.Discount.rate) * 0.01 : item.price,\n                      displayType: 'text',\n                      thousandSeparator: true\n                    })]\n                  }), /*#__PURE__*/_jsx(Col, {\n                    span: 8,\n                    children: /*#__PURE__*/_jsx(CartAmountToggle, {\n                      id: item.id,\n                      quantity: item.quantity\n                    })\n                  })]\n                })\n              })\n            }), /*#__PURE__*/_jsx(Divider, {}), /*#__PURE__*/_jsx(Row, {\n              gutter: [8, 16],\n              children: /*#__PURE__*/_jsxs(Col, {\n                style: {\n                  textAlign: 'right'\n                },\n                span: 24,\n                children: [\"\\uCD1D\\uC561:\", ' ', /*#__PURE__*/_jsx(NumberFormat, {\n                  value: item.Discount ? item.price * (100 - item.Discount.rate) * 0.01 * item.quantity : item.price * item.quantity,\n                  displayType: 'text',\n                  thousandSeparator: true\n                })]\n              })\n            })]\n          })\n        });\n      }\n    }), cart.length > 0 && /*#__PURE__*/_jsx(Button, {\n      onClick: paymentStart,\n      type: 'primary',\n      style: {\n        width: '100%'\n      },\n      children: \"\\uACB0\\uC81C\\uD558\\uAE30\"\n    })]\n  });\n};\n\n_s(Cart, \"50IVSvdOnt1VYpDskCoxRcnM7Yo=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useWindowSize, useRouter];\n});\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/dev/project1/frontend/pages/cart/index.js"],"names":["List","Avatar","Card","Button","Row","Col","Divider","Empty","useDispatch","useSelector","RestOutlined","CartAmountToggle","NumberFormat","REMOVE_ITEM_REQUEST","CLEAR_CART_REQUEST","useState","useEffect","useWindowSize","axios","useRouter","onClickPayment","ModalInterface","Cart","dispatch","IMP","setIMP","toggleModal","setToggleModal","state","cart","ShopId","TableId","user","isLoggedIn","session","windowWidth","windowHeight","router","onChangeToggleModal","prev","product","paymentStart","length","height","marginTop","textAlign","item","title","width","type","id","process","env","BACKEND_IP","Images","url","description","Discount","price","rate","quantity"],"mappings":"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","sourcesContent":["import { List, Avatar, Card, Button, Row, Col, Divider, Empty } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RestOutlined } from '@ant-design/icons';\r\nimport CartAmountToggle from '../../components/Generalui/CartAmoutToggle';\r\nimport NumberFormat from 'react-number-format';\r\nimport { REMOVE_ITEM_REQUEST, CLEAR_CART_REQUEST } from '../../reducers/cart';\r\nimport { useState, useEffect } from 'react';\r\nimport { useWindowSize } from '@react-hook/window-size';\r\nimport axios from 'axios';\r\nimport { useRouter } from 'next/router';\r\nimport { onClickPayment } from '../../components/Generalui/Payment';\r\nimport ModalInterface from '../../components/Generalui/Modal';\r\n\r\nconst Cart = () => {\r\n  const dispatch = useDispatch();\r\n  const [IMP, setIMP] = useState(null);\r\n  const [toggleModal, setToggleModal] = useState(false);\r\n  const { cart, ShopId, TableId } = useSelector((state) => state.cart);\r\n  const { isLoggedIn, session } = useSelector((state) => state.user);\r\n  const [windowWidth, windowHeight] = useWindowSize();\r\n  const router = useRouter();\r\n\r\n  const onChangeToggleModal = (prev) => !prev;\r\n\r\n  const product = cart[0];\r\n\r\n  const paymentStart = async () => {\r\n    onClickPayment(\r\n      'cart',\r\n      product,\r\n      isLoggedIn,\r\n      session,\r\n      onChangeToggleModal,\r\n      dispatch,\r\n      cart,\r\n      router,\r\n      ShopId,\r\n      TableId\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ModalInterface\r\n        content={'로그인을 하셔야 합니다.'}\r\n        toggleModal={toggleModal}\r\n        onChangeToggleModal={onChangeToggleModal}\r\n      ></ModalInterface>\r\n      {cart.length === 0 ? (\r\n        <Card style={{ height: '100vh' }}>\r\n          <div style={{ marginTop: windowHeight * 0.3, textAlign: 'center' }}>\r\n            <Empty />\r\n            <h1>장바구니가 비었습니다</h1>\r\n          </div>\r\n        </Card>\r\n      ) : (\r\n        <List\r\n          itemLayout=\"horizontal\"\r\n          dataSource={cart}\r\n          renderItem={(item) => (\r\n            <List.Item>\r\n              <Card\r\n                title={<h1>{item.title}</h1>}\r\n                style={{ width: '100%' }}\r\n                extra={\r\n                  <h2>\r\n                    <RestOutlined\r\n                      onClick={() => {\r\n                        dispatch({ type: REMOVE_ITEM_REQUEST, id: item.id });\r\n                      }}\r\n                    />\r\n                  </h2>\r\n                }\r\n              >\r\n                <Card.Meta\r\n                  description={\r\n                    <List.Item.Meta\r\n                      avatar={\r\n                        <Avatar\r\n                          size={100}\r\n                          shape=\"square\"\r\n                          src={`${process.env.BACKEND_IP}/uploads/${item.Images[0].url}`}\r\n                        />\r\n                      }\r\n                      description={\r\n                        <Row gutter={[8, 16]}>\r\n                          <Col span={24}>{item.description}</Col>\r\n                          <Col span={16}>\r\n                            가격:{' '}\r\n                            <NumberFormat\r\n                              value={\r\n                                item.Discount\r\n                                  ? item.price *\r\n                                    (100 - item.Discount.rate) *\r\n                                    0.01\r\n                                  : item.price\r\n                              }\r\n                              displayType={'text'}\r\n                              thousandSeparator={true}\r\n                            />\r\n                          </Col>\r\n                          <Col span={8}>\r\n                            <CartAmountToggle\r\n                              id={item.id}\r\n                              quantity={item.quantity}\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                      }\r\n                    />\r\n                  }\r\n                />\r\n                <Divider />\r\n                <Row gutter={[8, 16]}>\r\n                  <Col style={{ textAlign: 'right' }} span={24}>\r\n                    총액:{' '}\r\n                    <NumberFormat\r\n                      value={\r\n                        item.Discount\r\n                          ? item.price *\r\n                            (100 - item.Discount.rate) *\r\n                            0.01 *\r\n                            item.quantity\r\n                          : item.price * item.quantity\r\n                      }\r\n                      displayType={'text'}\r\n                      thousandSeparator={true}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </Card>\r\n            </List.Item>\r\n          )}\r\n        />\r\n      )}\r\n      {cart.length > 0 && (\r\n        <Button\r\n          onClick={paymentStart}\r\n          type={'primary'}\r\n          style={{ width: '100%' }}\r\n        >\r\n          결제하기\r\n        </Button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n"]},"metadata":{},"sourceType":"module"}