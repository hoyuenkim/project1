{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { useState, useEffect } from 'react';\nimport { Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux'; // import { PAYMENT_REQUEST } from \"../reducers/payment\";\n\nimport axios from 'axios';\n\nvar onClickPayment = function onClickPayment() {\n  if (IMP !== null) {\n    IMP.init('imp37098043');\n    IMP.request_pay({\n      pg: 'kakao',\n      // version 1.1.0부터 지원.\n      pay_method: 'card',\n      merchant_uid: 'shopId' + new Date().getTime(),\n      name: 'shopId' + new Date().getTime(),\n      amount: 1,\n      buyer_email: 'session.email',\n      buyer_name: 'session.name',\n      buyer_tel: 'session.phone',\n      buyer_addr: '서울특별시 강남구 삼성동',\n      buyer_postcode: '123-456'\n    }, callback);\n  }\n};\n\nvar callback = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(response) {\n    var success, merchant_uid, error_msg;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            success = response.success, merchant_uid = response.merchant_uid, error_msg = response.error_msg;\n\n            if (success) {\n              axios // .post(`${hostIp}/payments/complete`, { data: response })\n              .post('http://127.0.0.1:3065/payments/complete', {\n                data: response\n              }).then(function () {\n                dispatch({\n                  type: PAYMENT_SUCCESS\n                }, {\n                  data: response\n                });\n              })[\"catch\"](function (e) {\n                dispatch({\n                  type: PAYMENT_FAILURE\n                }, {\n                  error: error_msg\n                });\n                console.log(e);\n              });\n            } else {\n              alert(\"\\uACB0\\uC81C \\uC2E4\\uD328: \".concat(error_msg));\n            }\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function callback(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Import;","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/components/Generalui/Payment.js"],"names":["useState","useEffect","Button","useDispatch","useSelector","axios","onClickPayment","IMP","init","request_pay","pg","pay_method","merchant_uid","Date","getTime","name","amount","buyer_email","buyer_name","buyer_tel","buyer_addr","buyer_postcode","callback","response","success","error_msg","post","data","then","dispatch","type","PAYMENT_SUCCESS","e","PAYMENT_FAILURE","error","console","log","alert","Import"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,MAAIC,GAAG,KAAK,IAAZ,EAAkB;AAChBA,IAAAA,GAAG,CAACC,IAAJ,CAAS,aAAT;AACAD,IAAAA,GAAG,CAACE,WAAJ,CACE;AACEC,MAAAA,EAAE,EAAE,OADN;AACe;AACbC,MAAAA,UAAU,EAAE,MAFd;AAGEC,MAAAA,YAAY,EAAE,WAAW,IAAIC,IAAJ,GAAWC,OAAX,EAH3B;AAIEC,MAAAA,IAAI,EAAE,WAAW,IAAIF,IAAJ,GAAWC,OAAX,EAJnB;AAKEE,MAAAA,MAAM,EAAE,CALV;AAMEC,MAAAA,WAAW,EAAE,eANf;AAOEC,MAAAA,UAAU,EAAE,cAPd;AAQEC,MAAAA,SAAS,EAAE,eARb;AASEC,MAAAA,UAAU,EAAE,eATd;AAUEC,MAAAA,cAAc,EAAE;AAVlB,KADF,EAaEC,QAbF;AAeD;AACF,CAnBD;;AAqBA,IAAMA,QAAQ;AAAA,sEAAG,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACPC,YAAAA,OADO,GAC8BD,QAD9B,CACPC,OADO,EACEZ,YADF,GAC8BW,QAD9B,CACEX,YADF,EACgBa,SADhB,GAC8BF,QAD9B,CACgBE,SADhB;;AAEf,gBAAID,OAAJ,EAAa;AACXnB,cAAAA,KAAK,CACH;AADG,eAEFqB,IAFH,CAEQ,yCAFR,EAEmD;AAAEC,gBAAAA,IAAI,EAAEJ;AAAR,eAFnD,EAGGK,IAHH,CAGQ,YAAM;AACVC,gBAAAA,QAAQ,CAAC;AAAEC,kBAAAA,IAAI,EAAEC;AAAR,iBAAD,EAA4B;AAAEJ,kBAAAA,IAAI,EAAEJ;AAAR,iBAA5B,CAAR;AACD,eALH,WAMS,UAACS,CAAD,EAAO;AACZH,gBAAAA,QAAQ,CAAC;AAAEC,kBAAAA,IAAI,EAAEG;AAAR,iBAAD,EAA4B;AAAEC,kBAAAA,KAAK,EAAET;AAAT,iBAA5B,CAAR;AACAU,gBAAAA,OAAO,CAACC,GAAR,CAAYJ,CAAZ;AACD,eATH;AAUD,aAXD,MAWO;AACLK,cAAAA,KAAK,sCAAWZ,SAAX,EAAL;AACD;;AAfc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAARH,QAAQ;AAAA;AAAA;AAAA,GAAd;;AAkBA,eAAegB,MAAf","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { Button } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// import { PAYMENT_REQUEST } from \"../reducers/payment\";\r\nimport axios from 'axios';\r\n\r\nconst onClickPayment = () => {\r\n  if (IMP !== null) {\r\n    IMP.init('imp37098043');\r\n    IMP.request_pay(\r\n      {\r\n        pg: 'kakao', // version 1.1.0부터 지원.\r\n        pay_method: 'card',\r\n        merchant_uid: 'shopId' + new Date().getTime(),\r\n        name: 'shopId' + new Date().getTime(),\r\n        amount: 1,\r\n        buyer_email: 'session.email',\r\n        buyer_name: 'session.name',\r\n        buyer_tel: 'session.phone',\r\n        buyer_addr: '서울특별시 강남구 삼성동',\r\n        buyer_postcode: '123-456',\r\n      },\r\n      callback,\r\n    );\r\n  }\r\n};\r\n\r\nconst callback = async (response) => {\r\n  const { success, merchant_uid, error_msg } = response;\r\n  if (success) {\r\n    axios\r\n      // .post(`${hostIp}/payments/complete`, { data: response })\r\n      .post('http://127.0.0.1:3065/payments/complete', { data: response })\r\n      .then(() => {\r\n        dispatch({ type: PAYMENT_SUCCESS }, { data: response });\r\n      })\r\n      .catch((e) => {\r\n        dispatch({ type: PAYMENT_FAILURE }, { error: error_msg });\r\n        console.log(e);\r\n      });\r\n  } else {\r\n    alert(`결제 실패: ${error_msg}`);\r\n  }\r\n};\r\n\r\nexport default Import;\r\n"]},"metadata":{},"sourceType":"module"}