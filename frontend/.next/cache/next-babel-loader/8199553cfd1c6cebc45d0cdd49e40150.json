{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { List, Button, Modal, Avatar, Card } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { ADMIN_PRODUCTS_REQUEST, DELETE_PRODUCT_REQUEST } from '../../../../reducers/shop';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\nimport { useChecked } from '../../../../components/Generalui/CustomHooks';\nimport EditProduct from '../../../../components/Generalui/EditProduct';\n\nvar Console = function Console() {\n  _s();\n\n  var dispatch = useDispatch();\n  var router = useRouter();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      session = _useSelector.session;\n\n  if (!session || session.division === false) {\n    return router.back();\n  } else {\n    useEffect(function () {\n      dispatch({\n        type: ADMIN_PRODUCTS_REQUEST,\n        ShopId: session.Shops[0].id\n      });\n    }, []);\n  }\n\n  var _useChecked = useChecked(false),\n      _useChecked2 = _slicedToArray(_useChecked, 3),\n      edit = _useChecked2[0],\n      onToggleEdit = _useChecked2[1],\n      setEdit = _useChecked2[2];\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.shop;\n  }),\n      products = _useSelector2.products;\n\n  return __jsx(React.Fragment, null, products.map(function (item) {\n    return __jsx(React.Fragment, null);\n  }));\n};\n\n_s(Console, \"nAAWd30ocy3xLDAm0JDxK9Dtjn0=\", false, function () {\n  return [useDispatch, useRouter, useSelector, useChecked, useSelector];\n});\n\n_c = Console;\nConsole.protoType = {\n  productList: PropTypes.object.isRequired\n};\nexport default Console;\n\nvar _c;\n\n$RefreshReg$(_c, \"Console\");","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/pages/shop/admin/product/index.js"],"names":["List","Button","Modal","Avatar","Card","useDispatch","useSelector","useEffect","useState","useRouter","ADMIN_PRODUCTS_REQUEST","DELETE_PRODUCT_REQUEST","PropTypes","Link","useChecked","EditProduct","Console","dispatch","router","state","user","session","division","back","type","ShopId","Shops","id","edit","onToggleEdit","setEdit","shop","products","map","item","protoType","productList","object","isRequired"],"mappings":";;;;;;AAAA,SAASA,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,MAA9B,EAAsCC,IAAtC,QAAkD,MAAlD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,sBAAT,EAAiCC,sBAAjC,QAA+D,2BAA/D;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,UAAT,QAA2B,8CAA3B;AACA,OAAOC,WAAP,MAAwB,8CAAxB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA;;AACpB,MAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AACA,MAAMa,MAAM,GAAGT,SAAS,EAAxB;;AAFoB,qBAGAH,WAAW,CAAC,UAACa,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAHX;AAAA,MAGZC,OAHY,gBAGZA,OAHY;;AAIpB,MAAI,CAACA,OAAD,IAAYA,OAAO,CAACC,QAAR,KAAqB,KAArC,EAA4C;AAC1C,WAAOJ,MAAM,CAACK,IAAP,EAAP;AACD,GAFD,MAEO;AACLhB,IAAAA,SAAS,CAAC,YAAM;AACdU,MAAAA,QAAQ,CAAC;AAAEO,QAAAA,IAAI,EAAEd,sBAAR;AAAgCe,QAAAA,MAAM,EAAEJ,OAAO,CAACK,KAAR,CAAc,CAAd,EAAiBC;AAAzD,OAAD,CAAR;AACD,KAFQ,EAEN,EAFM,CAAT;AAGD;;AAVmB,oBAYkBb,UAAU,CAAC,KAAD,CAZ5B;AAAA;AAAA,MAYbc,IAZa;AAAA,MAYPC,YAZO;AAAA,MAYOC,OAZP;;AAAA,sBAcCxB,WAAW,CAAC,UAACa,KAAD;AAAA,WAAWA,KAAK,CAACY,IAAjB;AAAA,GAAD,CAdZ;AAAA,MAcZC,QAdY,iBAcZA,QAdY;;AAgBpB,SACE,4BACGA,QAAQ,CAACC,GAAT,CAAa,UAACC,IAAD,EAAU;AACtB,WACE,2BADF;AAKD,GANA,CADH,CADF;AAYD,CA5BD;;GAAMlB,O;UACaX,W,EACFI,S,EACKH,W,EASkBQ,U,EAEjBR,W;;;KAdjBU,O;AA8BNA,OAAO,CAACmB,SAAR,GAAoB;AAClBC,EAAAA,WAAW,EAAExB,SAAS,CAACyB,MAAV,CAAiBC;AADZ,CAApB;AAIA,eAAetB,OAAf","sourcesContent":["import { List, Button, Modal, Avatar, Card } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect, useState } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport { ADMIN_PRODUCTS_REQUEST, DELETE_PRODUCT_REQUEST } from '../../../../reducers/shop';\r\nimport PropTypes from 'prop-types';\r\nimport Link from 'next/link';\r\nimport { useChecked } from '../../../../components/Generalui/CustomHooks';\r\nimport EditProduct from '../../../../components/Generalui/EditProduct';\r\n\r\nconst Console = () => {\r\n  const dispatch = useDispatch();\r\n  const router = useRouter();\r\n  const { session } = useSelector((state) => state.user);\r\n  if (!session || session.division === false) {\r\n    return router.back();\r\n  } else {\r\n    useEffect(() => {\r\n      dispatch({ type: ADMIN_PRODUCTS_REQUEST, ShopId: session.Shops[0].id });\r\n    }, []);\r\n  }\r\n\r\n  const [edit, onToggleEdit, setEdit] = useChecked(false);\r\n\r\n  const { products } = useSelector((state) => state.shop);\r\n\r\n  return (\r\n    <>\r\n      {products.map((item) => {\r\n        return (\r\n          <>\r\n          \r\n          </>\r\n        )  \r\n      })}\r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nConsole.protoType = {\r\n  productList: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Console;\r\n"]},"metadata":{},"sourceType":"module"}