{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\hoyuen\\\\Documents\\\\project\\\\project1\\\\frontend\\\\pages\\\\user\\\\signup.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Button, Form, Input, Descriptions, Checkbox, Card, Space, Switch } from 'antd';\nimport { useState, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useInput } from '../../components/Generalui/CustomHooks';\nimport DaumPostcode from 'react-daum-postcode';\nimport Terms from '';\nimport axios from 'axios';\nimport { SIGN_UP_REQUEST } from '../../reducers/user';\nimport Router from 'next/router';\naxios.defaults.baseURL = 'http://127.0.0.1:3065';\n\nvar Signup = function Signup() {\n  _s();\n\n  var _useInput = useInput(),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      email = _useInput2[0],\n      onChangeEmail = _useInput2[1];\n\n  var _useInput3 = useInput(),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      password = _useInput4[0],\n      onChangePassword = _useInput4[1];\n\n  var _useInput5 = useInput(),\n      _useInput6 = _slicedToArray(_useInput5, 2),\n      passwordCheck = _useInput6[0],\n      onChangePasswordCheck = _useInput6[1];\n\n  var _useInput7 = useInput(),\n      _useInput8 = _slicedToArray(_useInput7, 2),\n      name = _useInput8[0],\n      onChangeName = _useInput8[1];\n\n  var _useState = useState(),\n      bizcode = _useState[0],\n      setBizcode = _useState[1];\n\n  var _useState2 = useState(),\n      address = _useState2[0],\n      setAddress = _useState2[1];\n\n  var _useInput9 = useInput(),\n      _useInput10 = _slicedToArray(_useInput9, 2),\n      addressDetail = _useInput10[0],\n      onChangeAddressDetail = _useInput10[1];\n\n  var _useState3 = useState(false),\n      termToggle = _useState3[0],\n      setTermToggle = _useState3[1];\n\n  var _useState4 = useState(false),\n      termError = _useState4[0],\n      setTermError = _useState4[1];\n\n  var _useState5 = useState(false),\n      divisionToggle = _useState5[0],\n      setDivisionToggle = _useState5[1];\n\n  var _useState6 = useState(false),\n      addressToggle = _useState6[0],\n      setAddressToggle = _useState6[1];\n\n  var _useState7 = useState('100vh'),\n      formHeight = _useState7[0],\n      setFormHeight = _useState7[1];\n\n  var _useChecked = useChecked(false),\n      _useChecked2 = _slicedToArray(_useChecked, 3),\n      personalInformationTerm = _useChecked2[0],\n      togglePersonalInformationTerm = _useChecked2[1],\n      setPersonalInformationTerm = _useChecked2[2];\n\n  var _useChecked3 = useChecked(false),\n      _useChecked4 = _slicedToArray(_useChecked3, 3),\n      thirdPartyIngormationTerm = _useChecked4[0],\n      toggleThirdPartyInformationTerm = _useChecked4[1],\n      setThirdPartyInformationTerm = _useChecked4[2];\n\n  var _useChecked5 = useChecked(false),\n      _useChecked6 = _slicedToArray(_useChecked5, 3),\n      locationTerm = _useChecked6[0],\n      toggleLocationTerm = _useChecked6[1],\n      setLocationTerm = _useChecked6[2];\n\n  var dispatch = useDispatch();\n\n  var onClickTermToggle = function onClickTermToggle() {\n    return setTermToggle(!termToggle);\n  };\n\n  var handleComplete = function handleComplete(data) {\n    var fullAddress = data.address;\n    var extraAddress = '';\n\n    if (data.addressType === 'R') {\n      if (data.bname !== '') {\n        extraAddress += data.bname;\n      }\n\n      if (data.buildingName !== '') {\n        extraAddress += extraAddress !== '' ? \", \".concat(data.buildingName) : data.buildingName;\n      }\n\n      fullAddress += extraAddress !== '' ? \" (\".concat(extraAddress, \")\") : '';\n    }\n\n    setAddress(fullAddress);\n    setAddressToggle(false);\n  };\n\n  var onFinish = function onFinish() {\n    dispatch({\n      type: SIGN_UP_REQUEST,\n      data: {\n        username: email,\n        password: password,\n        name: name,\n        bizcode: bizcode,\n        address: address,\n        addressDetail: addressDetail,\n        division: divisionToggle\n      }\n    });\n    Router.push('/user/login');\n  };\n\n  var onChangeDivisionToggle = function onChangeDivisionToggle() {\n    setFormHeight(formHeight ? undefined : '100vh');\n    setDivisionToggle(!divisionToggle);\n  };\n\n  var onChangeBizcode = function onChangeBizcode(e) {\n    setBizcode(e.target.value);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Card, {\n    title: __jsx(Space, {\n      direction: \"horizental\",\n      align: \"baseline\",\n      size: \"large\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, divisionToggle ? __jsx(\"h1\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 31\n      }\n    }, \"\\uAC00\\uB9F9\\uC810\") : __jsx(\"h1\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 46\n      }\n    }, \"\\uC77C\\uBC18\\uD68C\\uC6D0\"), __jsx(Switch, {\n      onClick: onChangeDivisionToggle,\n      checkedChildren: \"\\uAC00\\uB9F9\\uC810\",\n      unCheckedChildren: \"\\uC77C\\uBC18\\uD68C\\uC6D0\",\n      size: 'middle',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    })),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, __jsx(Form, {\n    onFinish: onFinish,\n    encType: 'multipart/form-data',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, __jsx(Space, {\n    direction: \"vertical\",\n    size: 'large',\n    style: {\n      width: '100%',\n      height: formHeight\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, __jsx(Terms, {\n    setTerms: [[personalInformationTerm, togglePersonalInformationTerm, setPersonalInformationTerm], [thirdPartyIngormationTerm, toggleThirdPartyInformationTerm, setThirdPartyInformationTerm]],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    style: {\n      textAlign: 'right'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, __jsx(Checkbox, {\n    onChange: onClickTermToggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }, \"\\uC804\\uCCB4\\uB3D9\\uC758\")), __jsx(Form.Item, {\n    name: \"email\",\n    validateTrigger: \"onBlur\",\n    rules: [{\n      required: true,\n      message: '이메일를 입력해 주세요!'\n    }, function () {\n      return {\n        validator: function validator(rule, value) {\n          return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n            var regex, result;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    regex = new RegExp(/^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i);\n\n                    if (!(value && value.match(regex))) {\n                      _context.next = 12;\n                      break;\n                    }\n\n                    _context.next = 4;\n                    return axios.post('/user/confirm/email', {\n                      email: value\n                    });\n\n                  case 4:\n                    result = _context.sent;\n\n                    if (!result.data) {\n                      _context.next = 9;\n                      break;\n                    }\n\n                    return _context.abrupt(\"return\", Promise.reject('이미 존재하는 이메일입니다'));\n\n                  case 9:\n                    return _context.abrupt(\"return\", Promise.resolve());\n\n                  case 10:\n                    _context.next = 13;\n                    break;\n\n                  case 12:\n                    return _context.abrupt(\"return\", Promise.reject('형식에 맞지 않는 이메일입니다'));\n\n                  case 13:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }))();\n        }\n      };\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, __jsx(Input, {\n    size: \"large\",\n    prefix: \"* Email\",\n    value: email,\n    onChange: onChangeEmail,\n    placeholder: \"Email\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  })), __jsx(Form.Item, {\n    name: \"password\",\n    rules: [{\n      required: true,\n      message: '비밀번호를 확인해주세요'\n    }, {\n      pattern: /^[A-Za-z0-9]{6,12}$/,\n      message: '비밀번호가 형식에 맞지 않습니다'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, __jsx(Input.Password, {\n    prefix: \"* \\uBE44\\uBC00\\uBC88\\uD638\",\n    size: \"large\",\n    value: password,\n    onChange: onChangePassword,\n    placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 15\n    }\n  })), __jsx(Form.Item, {\n    name: \"passwordCheck\",\n    dependencies: ['password'],\n    rules: [{\n      required: true,\n      message: '비밀번호를 확인해 주세요'\n    }, function (_ref) {\n      var getFieldValue = _ref.getFieldValue;\n      return {\n        validator: function validator(rule, value) {\n          if (!value || getFieldValue('password') === value) {\n            return Promise.resolve();\n          }\n\n          return Promise.reject('비밀번호가 일치하지 않습니다.');\n        }\n      };\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, __jsx(Input.Password, {\n    prefix: \"* \\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n    size: \"large\",\n    value: passwordCheck,\n    onChange: onChangePasswordCheck,\n    placeholder: \"\\uB2E4\\uC2DC \\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 15\n    }\n  })), __jsx(Form.Item, {\n    name: \"name\",\n    rules: [{\n      required: true,\n      message: '이름을 입력해주세요'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }\n  }, __jsx(Input, {\n    prefix: divisionToggle ? '* 가게명' : '* 이름',\n    size: \"large\",\n    onChange: onChangeName,\n    value: name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 15\n    }\n  })), divisionToggle && __jsx(React.Fragment, null, __jsx(Form.Item, {\n    name: \"bizcode\",\n    validateTrigger: \"onBlur\",\n    rules: [{\n      required: true,\n      message: '사업자 등록번호를 입력해주세요'\n    }, function () {\n      return {\n        validator: function validator(rule, value) {\n          return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n            var checkBizID, result;\n            return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    if (!(!value || !value.match(/\\d{1}/g) || !value.length === 10)) {\n                      _context2.next = 4;\n                      break;\n                    }\n\n                    return _context2.abrupt(\"return\", Promise.reject('형식에 맞지 않은 사업자 등록번호입니다'));\n\n                  case 4:\n                    checkBizID = function checkBizID(bizID) {\n                      var checkID = new Array(1, 3, 7, 1, 3, 7, 1, 3, 5, 1);\n                      var tmpBizID,\n                          i,\n                          chkSum = 0,\n                          c2,\n                          remander;\n                      bizID = bizID.replace(/-/gi, '');\n\n                      for (i = 0; i <= 7; i++) {\n                        chkSum += checkID[i] * bizID.charAt(i);\n                      }\n\n                      c2 = '0' + checkID[8] * bizID.charAt(8);\n                      c2 = c2.substring(c2.length - 2, c2.length);\n                      chkSum += Math.floor(c2.charAt(0)) + Math.floor(c2.charAt(1));\n                      remander = (10 - chkSum % 10) % 10;\n                      if (Math.floor(bizID.charAt(9)) == remander) return true;\n                      return false;\n                    };\n\n                    if (!checkBizID(value)) {\n                      _context2.next = 16;\n                      break;\n                    }\n\n                    _context2.next = 8;\n                    return axios.post('/user/confirm/bizcode', {\n                      bizcode: value\n                    });\n\n                  case 8:\n                    result = _context2.sent;\n\n                    if (result.data) {\n                      _context2.next = 13;\n                      break;\n                    }\n\n                    return _context2.abrupt(\"return\", Promise.resolve());\n\n                  case 13:\n                    return _context2.abrupt(\"return\", Promise.reject('이미 존재하는 사업자 등록번호입니다'));\n\n                  case 14:\n                    _context2.next = 17;\n                    break;\n\n                  case 16:\n                    return _context2.abrupt(\"return\", Promise.reject('형식에 맞지 않은 사업자 등록번호입니다'));\n\n                  case 17:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, _callee2);\n          }))();\n        }\n      };\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 17\n    }\n  }, __jsx(Input, {\n    prefix: '* 사업자등록번호',\n    size: \"large\",\n    name: 'bizcode',\n    value: bizcode,\n    onChange: onChangeBizcode,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 19\n    }\n  })), addressToggle ? __jsx(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 19\n    }\n  }, __jsx(DaumPostcode, {\n    onComplete: handleComplete,\n    autoClose: true,\n    height: '10',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 21\n    }\n  })) : __jsx(Form.Item, {\n    name: \"address\",\n    initialValue: address,\n    rules: [{\n      required: true,\n      message: '주소를 입력해주세요'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 19\n    }\n  }, __jsx(Input, {\n    prefix: \"* \\uC8FC\\uC18C\",\n    name: 'address',\n    readOnly: true,\n    onClick: function onClick() {\n      return setAddressToggle(true);\n    },\n    size: 'large',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 21\n    }\n  })), __jsx(Form.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 17\n    }\n  }, __jsx(Input, {\n    prefix: \"* \\uC0C1\\uC138\\uC8FC\\uC18C\",\n    name: 'addressDetail',\n    onChange: onChangeAddressDetail,\n    size: 'large',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 19\n    }\n  }))), __jsx(Form.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    style: {\n      width: \"100%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 15\n    }\n  }, \"\\uC81C\\uCD9C\"))))));\n};\n\n_s(Signup, \"2+mXjg87ONjuO+7kltM3h7WwjMs=\", true, function () {\n  return [useInput, useInput, useInput, useInput, useInput, useDispatch];\n});\n\n_c = Signup;\nexport var __N_SSP = true;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/pages/user/signup.js"],"names":["Button","Form","Input","Descriptions","Checkbox","Card","Space","Switch","useState","useCallback","useDispatch","useSelector","useInput","DaumPostcode","Terms","axios","SIGN_UP_REQUEST","Router","defaults","baseURL","Signup","email","onChangeEmail","password","onChangePassword","passwordCheck","onChangePasswordCheck","name","onChangeName","bizcode","setBizcode","address","setAddress","addressDetail","onChangeAddressDetail","termToggle","setTermToggle","termError","setTermError","divisionToggle","setDivisionToggle","addressToggle","setAddressToggle","formHeight","setFormHeight","useChecked","personalInformationTerm","togglePersonalInformationTerm","setPersonalInformationTerm","thirdPartyIngormationTerm","toggleThirdPartyInformationTerm","setThirdPartyInformationTerm","locationTerm","toggleLocationTerm","setLocationTerm","dispatch","onClickTermToggle","handleComplete","data","fullAddress","extraAddress","addressType","bname","buildingName","onFinish","type","username","division","push","onChangeDivisionToggle","undefined","onChangeBizcode","e","target","value","width","height","textAlign","required","message","validator","rule","regex","RegExp","match","post","result","Promise","reject","resolve","pattern","getFieldValue","length","checkBizID","bizID","checkID","Array","tmpBizID","i","chkSum","c2","remander","replace","charAt","substring","Math","floor"],"mappings":";;;;;;;;;;AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,EAA4CC,QAA5C,EAAsDC,IAAtD,EAA4DC,KAA5D,EAAmEC,MAAnE,QAAiF,MAAjF;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,wCAAzB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AAEA,OAAOC,KAAP,MAAkB,EAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,eAAT,QAAmD,qBAAnD;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEAF,KAAK,CAACG,QAAN,CAAeC,OAAf,GAAyB,uBAAzB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA;;AAAA,kBACYR,QAAQ,EADpB;AAAA;AAAA,MACZS,KADY;AAAA,MACLC,aADK;;AAAA,mBAEkBV,QAAQ,EAF1B;AAAA;AAAA,MAEZW,QAFY;AAAA,MAEFC,gBAFE;;AAAA,mBAG4BZ,QAAQ,EAHpC;AAAA;AAAA,MAGZa,aAHY;AAAA,MAGGC,qBAHH;;AAAA,mBAIUd,QAAQ,EAJlB;AAAA;AAAA,MAIZe,IAJY;AAAA,MAINC,YAJM;;AAAA,kBAKWpB,QAAQ,EALnB;AAAA,MAKZqB,OALY;AAAA,MAKHC,UALG;;AAAA,mBAMWtB,QAAQ,EANnB;AAAA,MAMZuB,OANY;AAAA,MAMHC,UANG;;AAAA,mBAO4BpB,QAAQ,EAPpC;AAAA;AAAA,MAOZqB,aAPY;AAAA,MAOGC,qBAPH;;AAAA,mBAQiB1B,QAAQ,CAAC,KAAD,CARzB;AAAA,MAQZ2B,UARY;AAAA,MAQAC,aARA;;AAAA,mBASe5B,QAAQ,CAAC,KAAD,CATvB;AAAA,MASZ6B,SATY;AAAA,MASDC,YATC;;AAAA,mBAUyB9B,QAAQ,CAAC,KAAD,CAVjC;AAAA,MAUZ+B,cAVY;AAAA,MAUIC,iBAVJ;;AAAA,mBAWuBhC,QAAQ,CAAC,KAAD,CAX/B;AAAA,MAWZiC,aAXY;AAAA,MAWGC,gBAXH;;AAAA,mBAYiBlC,QAAQ,CAAC,OAAD,CAZzB;AAAA,MAYZmC,UAZY;AAAA,MAYAC,aAZA;;AAAA,oBAiBfC,UAAU,CAAC,KAAD,CAjBK;AAAA;AAAA,MAcjBC,uBAdiB;AAAA,MAejBC,6BAfiB;AAAA,MAgBjBC,0BAhBiB;;AAAA,qBAsBfH,UAAU,CAAC,KAAD,CAtBK;AAAA;AAAA,MAmBjBI,yBAnBiB;AAAA,MAoBjBC,+BApBiB;AAAA,MAqBjBC,4BArBiB;;AAAA,qBAuByCN,UAAU,CAAC,KAAD,CAvBnD;AAAA;AAAA,MAuBZO,YAvBY;AAAA,MAuBEC,kBAvBF;AAAA,MAuBsBC,eAvBtB;;AAyBnB,MAAMC,QAAQ,GAAG7C,WAAW,EAA5B;;AAEA,MAAM8C,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9B,WAAOpB,aAAa,CAAC,CAACD,UAAF,CAApB;AACD,GAFD;;AAIA,MAAMsB,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD,EAAU;AAC/B,QAAIC,WAAW,GAAGD,IAAI,CAAC3B,OAAvB;AACA,QAAI6B,YAAY,GAAG,EAAnB;;AAEA,QAAIF,IAAI,CAACG,WAAL,KAAqB,GAAzB,EAA8B;AAC5B,UAAIH,IAAI,CAACI,KAAL,KAAe,EAAnB,EAAuB;AACrBF,QAAAA,YAAY,IAAIF,IAAI,CAACI,KAArB;AACD;;AACD,UAAIJ,IAAI,CAACK,YAAL,KAAsB,EAA1B,EAA8B;AAC5BH,QAAAA,YAAY,IAAIA,YAAY,KAAK,EAAjB,eAA2BF,IAAI,CAACK,YAAhC,IAAiDL,IAAI,CAACK,YAAtE;AACD;;AACDJ,MAAAA,WAAW,IAAIC,YAAY,KAAK,EAAjB,eAA2BA,YAA3B,SAA6C,EAA5D;AACD;;AAED5B,IAAAA,UAAU,CAAC2B,WAAD,CAAV;AACAjB,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD,GAhBD;;AAkBA,MAAMsB,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrBT,IAAAA,QAAQ,CAAC;AACPU,MAAAA,IAAI,EAAEjD,eADC;AAEP0C,MAAAA,IAAI,EAAE;AACJQ,QAAAA,QAAQ,EAAE7C,KADN;AAEJE,QAAAA,QAAQ,EAARA,QAFI;AAGJI,QAAAA,IAAI,EAAJA,IAHI;AAIJE,QAAAA,OAAO,EAAPA,OAJI;AAKJE,QAAAA,OAAO,EAAPA,OALI;AAMJE,QAAAA,aAAa,EAAbA,aANI;AAOJkC,QAAAA,QAAQ,EAAE5B;AAPN;AAFC,KAAD,CAAR;AAYAtB,IAAAA,MAAM,CAACmD,IAAP,CAAY,aAAZ;AACD,GAdD;;AAgBA,MAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAM;AACnCzB,IAAAA,aAAa,CAACD,UAAU,GAAG2B,SAAH,GAAe,OAA1B,CAAb;AACA9B,IAAAA,iBAAiB,CAAC,CAACD,cAAF,CAAjB;AACD,GAHD;;AAKA,MAAMgC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,CAAD,EAAO;AAC7B1C,IAAAA,UAAU,CAAC0C,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACD,GAFD;;AAIA,SACE,4BACE,MAAC,IAAD;AACE,IAAA,KAAK,EACH,MAAC,KAAD;AAAO,MAAA,SAAS,EAAC,YAAjB;AAA8B,MAAA,KAAK,YAAnC;AAAiD,MAAA,IAAI,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGnC,cAAc,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAH,GAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADnC,EAEE,MAAC,MAAD;AACE,MAAA,OAAO,EAAE8B,sBADX;AAEE,MAAA,eAAe,sBAFjB;AAGE,MAAA,iBAAiB,4BAHnB;AAIE,MAAA,IAAI,EAAE,QAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaE,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEL,QAAhB;AAA0B,IAAA,OAAO,EAAE,qBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,SAAS,EAAC,UAAjB;AAA4B,IAAA,IAAI,EAAE,OAAlC;AAA2C,IAAA,KAAK,EAAE;AAAEW,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,MAAM,EAAEjC;AAAzB,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AACE,IAAA,QAAQ,EAAE,CACR,CACEG,uBADF,EAEEC,6BAFF,EAGEC,0BAHF,CADQ,EAMR,CACEC,yBADF,EAEEC,+BAFF,EAGEC,4BAHF,CANQ,CADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAeE;AAAK,IAAA,KAAK,EAAE;AAAE0B,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,QAAQ,EAAErB,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,CAfF,EAmBE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,eAAe,EAAC,QAFlB;AAGE,IAAA,KAAK,EAAE,CACL;AACEsB,MAAAA,QAAQ,EAAE,IADZ;AAEEC,MAAAA,OAAO,EAAE;AAFX,KADK,EAKL;AAAA,aAAO;AACCC,QAAAA,SADD,qBACWC,IADX,EACiBP,KADjB,EACwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACrBQ,oBAAAA,KADqB,GACb,IAAIC,MAAJ,CACZ,kFADY,CADa;;AAAA,0BAIvBT,KAAK,IAAIA,KAAK,CAACU,KAAN,CAAYF,KAAZ,CAJc;AAAA;AAAA;AAAA;;AAAA;AAAA,2BAKJnE,KAAK,CAACsE,IAAN,CAAW,qBAAX,EAAkC;AACrDhE,sBAAAA,KAAK,EAAEqD;AAD8C,qBAAlC,CALI;;AAAA;AAKnBY,oBAAAA,MALmB;;AAAA,yBAQrBA,MAAM,CAAC5B,IARc;AAAA;AAAA;AAAA;;AAAA,qDAShB6B,OAAO,CAACC,MAAR,CAAe,gBAAf,CATgB;;AAAA;AAAA,qDAWhBD,OAAO,CAACE,OAAR,EAXgB;;AAAA;AAAA;AAAA;;AAAA;AAAA,qDAclBF,OAAO,CAACC,MAAR,CAAe,kBAAf,CAdkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgB5B;AAjBI,OAAP;AAAA,KALK,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA6BE,MAAC,KAAD;AACE,IAAA,IAAI,SADN;AAEE,IAAA,MAAM,WAFR;AAGE,IAAA,KAAK,EAAEnE,KAHT;AAIE,IAAA,QAAQ,EAAEC,aAJZ;AAKE,IAAA,WAAW,EAAC,kDALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7BF,CAnBF,EAwDE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,KAAK,EAAE,CACL;AACEwD,MAAAA,QAAQ,EAAE,IADZ;AAEEC,MAAAA,OAAO,EAAE;AAFX,KADK,EAKL;AACEW,MAAAA,OAAO,EAAE,qBADX;AAEEX,MAAAA,OAAO,EAAE;AAFX,KALK,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaE,MAAC,KAAD,CAAO,QAAP;AACE,IAAA,MAAM,8BADR;AAEE,IAAA,IAAI,SAFN;AAGE,IAAA,KAAK,EAAExD,QAHT;AAIE,IAAA,QAAQ,EAAEC,gBAJZ;AAKE,IAAA,WAAW,EAAC,qEALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CAxDF,EA6EE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,IAAI,EAAC,eADP;AAEE,IAAA,YAAY,EAAE,CAAC,UAAD,CAFhB;AAGE,IAAA,KAAK,EAAE,CACL;AACEsD,MAAAA,QAAQ,EAAE,IADZ;AAEEC,MAAAA,OAAO,EAAE;AAFX,KADK,EAKL;AAAA,UAAGY,aAAH,QAAGA,aAAH;AAAA,aAAwB;AACtBX,QAAAA,SADsB,qBACZC,IADY,EACNP,KADM,EACC;AACrB,cAAI,CAACA,KAAD,IAAUiB,aAAa,CAAC,UAAD,CAAb,KAA8BjB,KAA5C,EAAmD;AACjD,mBAAOa,OAAO,CAACE,OAAR,EAAP;AACD;;AACD,iBAAOF,OAAO,CAACC,MAAR,CAAe,kBAAf,CAAP;AACD;AANqB,OAAxB;AAAA,KALK,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAkBE,MAAC,KAAD,CAAO,QAAP;AACE,IAAA,MAAM,2CADR;AAEE,IAAA,IAAI,SAFN;AAGE,IAAA,KAAK,EAAE/D,aAHT;AAIE,IAAA,QAAQ,EAAEC,qBAJZ;AAKE,IAAA,WAAW,EAAC,kFALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,CA7EF,EAuGE,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,IAAI,EAAC,MAAhB;AAAuB,IAAA,KAAK,EAAE,CAAC;AAAEoD,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AACE,IAAA,MAAM,EAAExC,cAAc,GAAG,OAAH,GAAa,MADrC;AAEE,IAAA,IAAI,SAFN;AAGE,IAAA,QAAQ,EAAEX,YAHZ;AAIE,IAAA,KAAK,EAAED,IAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAvGF,EA+GGY,cAAc,IACb,4BACE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,eAAe,EAAC,QAFlB;AAGE,IAAA,KAAK,EAAE,CACL;AAAEuC,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KADK,EAEL;AAAA,aAAO;AACCC,QAAAA,SADD,qBACWC,IADX,EACiBP,KADjB,EACwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACvB,CAACA,KAAD,IAAU,CAACA,KAAK,CAACU,KAAN,CAAY,QAAZ,CAAX,IAAoC,CAACV,KAAK,CAACkB,MAAP,KAAkB,EAD/B;AAAA;AAAA;AAAA;;AAAA,sDAElBL,OAAO,CAACC,MAAR,CAAe,uBAAf,CAFkB;;AAAA;AAIhBK,oBAAAA,UAJgB,GAIzB,SAASA,UAAT,CAAoBC,KAApB,EAA2B;AACzB,0BAAIC,OAAO,GAAG,IAAIC,KAAJ,CAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC,EAAqC,CAArC,CAAd;AACA,0BAAIC,QAAJ;AAAA,0BACEC,CADF;AAAA,0BAEEC,MAAM,GAAG,CAFX;AAAA,0BAGEC,EAHF;AAAA,0BAIEC,QAJF;AAKAP,sBAAAA,KAAK,GAAGA,KAAK,CAACQ,OAAN,CAAc,KAAd,EAAqB,EAArB,CAAR;;AAEA,2BAAKJ,CAAC,GAAG,CAAT,EAAYA,CAAC,IAAI,CAAjB,EAAoBA,CAAC,EAArB;AAAyBC,wBAAAA,MAAM,IAAIJ,OAAO,CAACG,CAAD,CAAP,GAAaJ,KAAK,CAACS,MAAN,CAAaL,CAAb,CAAvB;AAAzB;;AACAE,sBAAAA,EAAE,GAAG,MAAML,OAAO,CAAC,CAAD,CAAP,GAAaD,KAAK,CAACS,MAAN,CAAa,CAAb,CAAxB;AACAH,sBAAAA,EAAE,GAAGA,EAAE,CAACI,SAAH,CAAaJ,EAAE,CAACR,MAAH,GAAY,CAAzB,EAA4BQ,EAAE,CAACR,MAA/B,CAAL;AACAO,sBAAAA,MAAM,IAAIM,IAAI,CAACC,KAAL,CAAWN,EAAE,CAACG,MAAH,CAAU,CAAV,CAAX,IAA2BE,IAAI,CAACC,KAAL,CAAWN,EAAE,CAACG,MAAH,CAAU,CAAV,CAAX,CAArC;AACAF,sBAAAA,QAAQ,GAAG,CAAC,KAAMF,MAAM,GAAG,EAAhB,IAAuB,EAAlC;AAEA,0BAAIM,IAAI,CAACC,KAAL,CAAWZ,KAAK,CAACS,MAAN,CAAa,CAAb,CAAX,KAA+BF,QAAnC,EAA6C,OAAO,IAAP;AAC7C,6BAAO,KAAP;AACD,qBArBwB;;AAAA,yBAsBrBR,UAAU,CAACnB,KAAD,CAtBW;AAAA;AAAA;AAAA;;AAAA;AAAA,2BAuBF3D,KAAK,CAACsE,IAAN,CAAW,uBAAX,EAAoC;AACvDxD,sBAAAA,OAAO,EAAE6C;AAD8C,qBAApC,CAvBE;;AAAA;AAuBjBY,oBAAAA,MAvBiB;;AAAA,wBA0BlBA,MAAM,CAAC5B,IA1BW;AAAA;AAAA;AAAA;;AAAA,sDA2Bd6B,OAAO,CAACE,OAAR,EA3Bc;;AAAA;AAAA,sDA6BdF,OAAO,CAACC,MAAR,CAAe,qBAAf,CA7Bc;;AAAA;AAAA;AAAA;;AAAA;AAAA,sDAgChBD,OAAO,CAACC,MAAR,CAAe,uBAAf,CAhCgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmC5B;AApCI,OAAP;AAAA,KAFK,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA6CE,MAAC,KAAD;AACE,IAAA,MAAM,EAAE,WADV;AAEE,IAAA,IAAI,SAFN;AAGE,IAAA,IAAI,EAAE,SAHR;AAIE,IAAA,KAAK,EAAE3D,OAJT;AAKE,IAAA,QAAQ,EAAE0C,eALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7CF,CADF,EAsDG9B,aAAa,GACZ,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AAAc,IAAA,UAAU,EAAEgB,cAA1B;AAA0C,IAAA,SAAS,EAAE,IAArD;AAA2D,IAAA,MAAM,EAAE,IAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADY,GAKZ,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,YAAY,EAAE1B,OAFhB;AAGE,IAAA,KAAK,EAAE,CAAC;AAAE+C,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAD,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,MAAC,KAAD;AACE,IAAA,MAAM,EAAC,gBADT;AAEE,IAAA,IAAI,EAAE,SAFR;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,OAAO,EAAE;AAAA,aAAMrC,gBAAgB,CAAC,IAAD,CAAtB;AAAA,KAJX;AAKE,IAAA,IAAI,EAAE,OALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CA3DJ,EAyEE,MAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AACE,IAAA,MAAM,EAAC,4BADT;AAEE,IAAA,IAAI,EAAE,eAFR;AAGE,IAAA,QAAQ,EAAER,qBAHZ;AAIE,IAAA,IAAI,EAAE,OAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAzEF,CAhHJ,EAmME,MAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,EAAC,QAAhC;AAAyC,IAAA,KAAK,EAAE;AAAEyC,MAAAA,KAAK;AAAP,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CAnMF,CADF,CAbF,CADF,CADF;AA6ND,CAvSD;;GAAMvD,M;UAC2BR,Q,EACMA,Q,EACUA,Q,EAClBA,Q,EAGkBA,Q,EAkB9BF,W;;;KAzBbU,M;;AAmTN,eAAeA,MAAf","sourcesContent":["import { Button, Form, Input, Descriptions, Checkbox, Card, Space, Switch } from 'antd';\r\nimport { useState, useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useInput } from '../../components/Generalui/CustomHooks';\r\nimport DaumPostcode from 'react-daum-postcode';\r\nimport wrapper from '../../store/configureStore';\r\nimport Terms from '' \r\nimport axios from 'axios';\r\nimport { END } from 'redux-saga';\r\nimport { SIGN_UP_REQUEST, LOAD_USER_REQUEST } from '../../reducers/user';\r\nimport Router from 'next/router';\r\n\r\naxios.defaults.baseURL = 'http://127.0.0.1:3065';\r\n\r\nconst Signup = () => {\r\n  const [email, onChangeEmail] = useInput();\r\n  const [password, onChangePassword] = useInput();\r\n  const [passwordCheck, onChangePasswordCheck] = useInput();\r\n  const [name, onChangeName] = useInput();\r\n  const [bizcode, setBizcode] = useState();\r\n  const [address, setAddress] = useState();\r\n  const [addressDetail, onChangeAddressDetail] = useInput();\r\n  const [termToggle, setTermToggle] = useState(false);\r\n  const [termError, setTermError] = useState(false);\r\n  const [divisionToggle, setDivisionToggle] = useState(false);\r\n  const [addressToggle, setAddressToggle] = useState(false);\r\n  const [formHeight, setFormHeight] = useState('100vh');\r\n  const [\r\n    personalInformationTerm,\r\n    togglePersonalInformationTerm,\r\n    setPersonalInformationTerm,\r\n  ] = useChecked(false);\r\n  const [\r\n    thirdPartyIngormationTerm,\r\n    toggleThirdPartyInformationTerm,\r\n    setThirdPartyInformationTerm,\r\n  ] = useChecked(false);\r\n  const [locationTerm, toggleLocationTerm, setLocationTerm] = useChecked(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onClickTermToggle = () => {\r\n    return setTermToggle(!termToggle);\r\n  };\r\n\r\n  const handleComplete = (data) => {\r\n    let fullAddress = data.address;\r\n    let extraAddress = '';\r\n\r\n    if (data.addressType === 'R') {\r\n      if (data.bname !== '') {\r\n        extraAddress += data.bname;\r\n      }\r\n      if (data.buildingName !== '') {\r\n        extraAddress += extraAddress !== '' ? `, ${data.buildingName}` : data.buildingName;\r\n      }\r\n      fullAddress += extraAddress !== '' ? ` (${extraAddress})` : '';\r\n    }\r\n\r\n    setAddress(fullAddress);\r\n    setAddressToggle(false);\r\n  };\r\n\r\n  const onFinish = () => {\r\n    dispatch({\r\n      type: SIGN_UP_REQUEST,\r\n      data: {\r\n        username: email,\r\n        password,\r\n        name,\r\n        bizcode,\r\n        address,\r\n        addressDetail,\r\n        division: divisionToggle,\r\n      },\r\n    });\r\n    Router.push('/user/login');\r\n  };\r\n\r\n  const onChangeDivisionToggle = () => {\r\n    setFormHeight(formHeight ? undefined : '100vh');\r\n    setDivisionToggle(!divisionToggle);\r\n  };\r\n\r\n  const onChangeBizcode = (e) => {\r\n    setBizcode(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card\r\n        title={\r\n          <Space direction=\"horizental\" align={`baseline`} size={`large`}>\r\n            {divisionToggle ? <h1>가맹점</h1> : <h1>일반회원</h1>}\r\n            <Switch\r\n              onClick={onChangeDivisionToggle}\r\n              checkedChildren={`가맹점`}\r\n              unCheckedChildren={`일반회원`}\r\n              size={'middle'}\r\n            />\r\n          </Space>\r\n        }\r\n      >\r\n        <Form onFinish={onFinish} encType={'multipart/form-data'}>\r\n          <Space direction=\"vertical\" size={'large'} style={{ width: '100%', height: formHeight }}>\r\n            <Terms\r\n              setTerms={[\r\n                [\r\n                  personalInformationTerm,\r\n                  togglePersonalInformationTerm,\r\n                  setPersonalInformationTerm,\r\n                ],\r\n                [\r\n                  thirdPartyIngormationTerm,\r\n                  toggleThirdPartyInformationTerm,\r\n                  setThirdPartyInformationTerm,\r\n                ],\r\n              ]}\r\n            />\r\n            <div style={{ textAlign: 'right' }}>\r\n              <Checkbox onChange={onClickTermToggle}>전체동의</Checkbox>\r\n            </div>\r\n\r\n            <Form.Item\r\n              name=\"email\"\r\n              validateTrigger=\"onBlur\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: '이메일를 입력해 주세요!',\r\n                },\r\n                () => ({\r\n                  async validator(rule, value) {\r\n                    const regex = new RegExp(\r\n                      /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i,\r\n                    );\r\n                    if (value && value.match(regex)) {\r\n                      const result = await axios.post('/user/confirm/email', {\r\n                        email: value,\r\n                      });\r\n                      if (result.data) {\r\n                        return Promise.reject('이미 존재하는 이메일입니다');\r\n                      } else {\r\n                        return Promise.resolve();\r\n                      }\r\n                    } else {\r\n                      return Promise.reject('형식에 맞지 않는 이메일입니다');\r\n                    }\r\n                  },\r\n                }),\r\n              ]}\r\n            >\r\n              <Input\r\n                size={`large`}\r\n                prefix={`* Email`}\r\n                value={email}\r\n                onChange={onChangeEmail}\r\n                placeholder=\"Email을 입력해주세요\"\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: '비밀번호를 확인해주세요',\r\n                },\r\n                {\r\n                  pattern: /^[A-Za-z0-9]{6,12}$/,\r\n                  message: '비밀번호가 형식에 맞지 않습니다',\r\n                },\r\n              ]}\r\n            >\r\n              <Input.Password\r\n                prefix={`* 비밀번호`}\r\n                size={`large`}\r\n                value={password}\r\n                onChange={onChangePassword}\r\n                placeholder=\"비밀번호를 입력해주세요\"\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"passwordCheck\"\r\n              dependencies={['password']}\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: '비밀번호를 확인해 주세요',\r\n                },\r\n                ({ getFieldValue }) => ({\r\n                  validator(rule, value) {\r\n                    if (!value || getFieldValue('password') === value) {\r\n                      return Promise.resolve();\r\n                    }\r\n                    return Promise.reject('비밀번호가 일치하지 않습니다.');\r\n                  },\r\n                }),\r\n              ]}\r\n            >\r\n              <Input.Password\r\n                prefix={`* 비밀번호 확인`}\r\n                size={`large`}\r\n                value={passwordCheck}\r\n                onChange={onChangePasswordCheck}\r\n                placeholder=\"다시 비밀번호를 입력해주세요\"\r\n              />\r\n            </Form.Item>\r\n            <Form.Item name=\"name\" rules={[{ required: true, message: '이름을 입력해주세요' }]}>\r\n              <Input\r\n                prefix={divisionToggle ? '* 가게명' : '* 이름'}\r\n                size={`large`}\r\n                onChange={onChangeName}\r\n                value={name}\r\n              />\r\n            </Form.Item>\r\n            {divisionToggle && (\r\n              <>\r\n                <Form.Item\r\n                  name=\"bizcode\"\r\n                  validateTrigger=\"onBlur\"\r\n                  rules={[\r\n                    { required: true, message: '사업자 등록번호를 입력해주세요' },\r\n                    () => ({\r\n                      async validator(rule, value) {\r\n                        if (!value || !value.match(/\\d{1}/g) || !value.length === 10) {\r\n                          return Promise.reject('형식에 맞지 않은 사업자 등록번호입니다');\r\n                        } else {\r\n                          function checkBizID(bizID) {\r\n                            var checkID = new Array(1, 3, 7, 1, 3, 7, 1, 3, 5, 1);\r\n                            var tmpBizID,\r\n                              i,\r\n                              chkSum = 0,\r\n                              c2,\r\n                              remander;\r\n                            bizID = bizID.replace(/-/gi, '');\r\n\r\n                            for (i = 0; i <= 7; i++) chkSum += checkID[i] * bizID.charAt(i);\r\n                            c2 = '0' + checkID[8] * bizID.charAt(8);\r\n                            c2 = c2.substring(c2.length - 2, c2.length);\r\n                            chkSum += Math.floor(c2.charAt(0)) + Math.floor(c2.charAt(1));\r\n                            remander = (10 - (chkSum % 10)) % 10;\r\n\r\n                            if (Math.floor(bizID.charAt(9)) == remander) return true;\r\n                            return false;\r\n                          }\r\n                          if (checkBizID(value)) {\r\n                            const result = await axios.post('/user/confirm/bizcode', {\r\n                              bizcode: value,\r\n                            });\r\n                            if (!result.data) {\r\n                              return Promise.resolve();\r\n                            } else {\r\n                              return Promise.reject('이미 존재하는 사업자 등록번호입니다');\r\n                            }\r\n                          } else {\r\n                            return Promise.reject('형식에 맞지 않은 사업자 등록번호입니다');\r\n                          }\r\n                        }\r\n                      },\r\n                    }),\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    prefix={'* 사업자등록번호'}\r\n                    size={`large`}\r\n                    name={'bizcode'}\r\n                    value={bizcode}\r\n                    onChange={onChangeBizcode}\r\n                  />\r\n                </Form.Item>\r\n                {addressToggle ? (\r\n                  <Card>\r\n                    <DaumPostcode onComplete={handleComplete} autoClose={true} height={'10'} />\r\n                  </Card>\r\n                ) : (\r\n                  <Form.Item\r\n                    name=\"address\"\r\n                    initialValue={address}\r\n                    rules={[{ required: true, message: '주소를 입력해주세요' }]}\r\n                  >\r\n                    <Input\r\n                      prefix=\"* 주소\"\r\n                      name={'address'}\r\n                      readOnly\r\n                      onClick={() => setAddressToggle(true)}\r\n                      size={'large'}\r\n                    />\r\n                  </Form.Item>\r\n                )}\r\n                <Form.Item>\r\n                  <Input\r\n                    prefix=\"* 상세주소\"\r\n                    name={'addressDetail'}\r\n                    onChange={onChangeAddressDetail}\r\n                    size={'large'}\r\n                  />\r\n                </Form.Item>\r\n              </>\r\n            )}\r\n            <Form.Item>\r\n              <Button type=\"primary\" htmlType=\"submit\" style={{ width: `100%` }}>\r\n                제출\r\n              </Button>\r\n            </Form.Item>\r\n          </Space>\r\n        </Form>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  const cookie = context.req ? context.req.headers.cookie : '';\r\n  if (context.req && cookie !== '') {\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n  context.store.dispatch({ type: LOAD_USER_REQUEST });\r\n  context.store.dispatch(END);\r\n  await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default Signup;\r\n"]},"metadata":{},"sourceType":"module"}