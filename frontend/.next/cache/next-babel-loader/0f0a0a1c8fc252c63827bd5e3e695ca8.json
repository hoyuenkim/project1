{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst initialState = {\n  store: null,\n  products: []\n};\nexport const LOAD_PRODUCTS_REQUEST = \"LOAD_PRODUCTS_REQUEST\";\nexport const LOAD_PRODUCTS_SUCCESS = \"LOAD_PRODUCTS_SUCCESS\";\nexport const LOAD_PRODUCTS_FAILURE = \"LOAD_PRODUCTS_FAILURE\";\nexport const ADD_QUANTITY_REQUEST = \"ADD_QUANTITY_REQUEST\";\nexport const ADD_QUANTITY_SUCCESS = \"ADD_QUANTITY_SUCCESS\";\nexport const ADD_QUANTITY_FAILURE = \"ADD_QUANTITY_FAILURE\";\nexport const SUBSTRACT_QUANTITY_REQUEST = \"SUBSTRACT_QUANTITY_REQUEST\";\nexport const SUBSTRACT_QUANTITY_SUCCESS = \"SUBSTRACT_QUANTITY_SUCCESS\";\nexport const SUBSTRACT_QUANTITY_FAILURE = \"SUBSTRACT_QUANTITY_FAILURE\";\nexport const ADD_PRODUCT_REQUEST = \"ADD_PRODUCT_REQUEST\";\nexport const ADD_PRODUCT_SUCCESS = \"ADD_PRODUCT_SUCCESS\";\nexport const ADD_PRODUCT_FAILURE = \"ADD_PRODUCT_FAILURE\";\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_QUANTITY_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case ADD_QUANTITY_SUCCESS:\n      {\n        const index = state.products.findIndex(product => product.id === action.data.id);\n        const product = state.products[index];\n        let quantity = product.quantity;\n        quantity < 9 ? quantity += 1 : 9;\n        const products = [...state.products];\n        products[index] = _objectSpread(_objectSpread({}, product), {}, {\n          quantity\n        });\n        return _objectSpread(_objectSpread({}, state), {}, {\n          products\n        });\n      }\n\n    case ADD_QUANTITY_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case SUBSTRACT_QUANTITY_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case SUBSTRACT_QUANTITY_SUCCESS:\n      {\n        const index = state.products.findIndex(product => product.id === action.data.id);\n        const product = state.products[index];\n        let quantity = product.quantity;\n        quantity > 1 ? quantity -= 1 : 1;\n        const products = [...state.products];\n        products[index] = _objectSpread(_objectSpread({}, product), {}, {\n          quantity\n        });\n        return _objectSpread(_objectSpread({}, state), {}, {\n          products\n        });\n      }\n\n    case SUBSTRACT_QUANTITY_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_PRODUCTS_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_PRODUCTS_SUCCESS:\n      {\n        console.log(action.data);\n        return _objectSpread(_objectSpread({}, state), {}, {\n          products: [...state.products, ...action.data]\n        });\n      }\n\n    case LOAD_PRODUCTS_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case ADD_PRODUCT_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case ADD_PRODUCT_SUCCESS:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          products: [action.data, ...state.products]\n        });\n      }\n\n    case ADD_PRODUCT_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/reducers/shop.js"],"names":["initialState","store","products","LOAD_PRODUCTS_REQUEST","LOAD_PRODUCTS_SUCCESS","LOAD_PRODUCTS_FAILURE","ADD_QUANTITY_REQUEST","ADD_QUANTITY_SUCCESS","ADD_QUANTITY_FAILURE","SUBSTRACT_QUANTITY_REQUEST","SUBSTRACT_QUANTITY_SUCCESS","SUBSTRACT_QUANTITY_FAILURE","ADD_PRODUCT_REQUEST","ADD_PRODUCT_SUCCESS","ADD_PRODUCT_FAILURE","reducer","state","action","type","index","findIndex","product","id","data","quantity","console","log"],"mappings":"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","sourcesContent":["const initialState = {\r\n  store: null,\r\n  products: [],\r\n};\r\n\r\nexport const LOAD_PRODUCTS_REQUEST = \"LOAD_PRODUCTS_REQUEST\";\r\nexport const LOAD_PRODUCTS_SUCCESS = \"LOAD_PRODUCTS_SUCCESS\";\r\nexport const LOAD_PRODUCTS_FAILURE = \"LOAD_PRODUCTS_FAILURE\";\r\n\r\nexport const ADD_QUANTITY_REQUEST = \"ADD_QUANTITY_REQUEST\";\r\nexport const ADD_QUANTITY_SUCCESS = \"ADD_QUANTITY_SUCCESS\";\r\nexport const ADD_QUANTITY_FAILURE = \"ADD_QUANTITY_FAILURE\";\r\n\r\nexport const SUBSTRACT_QUANTITY_REQUEST = \"SUBSTRACT_QUANTITY_REQUEST\";\r\nexport const SUBSTRACT_QUANTITY_SUCCESS = \"SUBSTRACT_QUANTITY_SUCCESS\";\r\nexport const SUBSTRACT_QUANTITY_FAILURE = \"SUBSTRACT_QUANTITY_FAILURE\";\r\n\r\nexport const ADD_PRODUCT_REQUEST = \"ADD_PRODUCT_REQUEST\";\r\nexport const ADD_PRODUCT_SUCCESS = \"ADD_PRODUCT_SUCCESS\";\r\nexport const ADD_PRODUCT_FAILURE = \"ADD_PRODUCT_FAILURE\";\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_QUANTITY_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case ADD_QUANTITY_SUCCESS: {\r\n      const index = state.products.findIndex((product) => product.id === action.data.id);\r\n      const product = state.products[index];\r\n      let quantity = product.quantity;\r\n      quantity < 9 ? (quantity += 1) : 9;\r\n      const products = [...state.products];\r\n      products[index] = { ...product, quantity };\r\n\r\n      return {\r\n        ...state,\r\n        products,\r\n      };\r\n    }\r\n    case ADD_QUANTITY_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case SUBSTRACT_QUANTITY_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case SUBSTRACT_QUANTITY_SUCCESS: {\r\n      const index = state.products.findIndex((product) => product.id === action.data.id);\r\n      const product = state.products[index];\r\n      let quantity = product.quantity;\r\n      quantity > 1 ? (quantity -= 1) : 1;\r\n      const products = [...state.products];\r\n      products[index] = { ...product, quantity };\r\n      return {\r\n        ...state,\r\n        products,\r\n      };\r\n    }\r\n    case SUBSTRACT_QUANTITY_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n\r\n    case LOAD_PRODUCTS_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n\r\n    case LOAD_PRODUCTS_SUCCESS: {\r\n      console.log(action.data);\r\n      return {\r\n        ...state,\r\n        products: [...state.products, ...action.data],\r\n      };\r\n    }\r\n\r\n    case LOAD_PRODUCTS_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n\r\n    case ADD_PRODUCT_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n\r\n    case ADD_PRODUCT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        products: [action.data, ...state.products],\r\n      };\r\n    }\r\n\r\n    case ADD_PRODUCT_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n\r\n    default: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}