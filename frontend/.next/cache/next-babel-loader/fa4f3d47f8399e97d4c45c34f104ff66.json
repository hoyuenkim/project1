{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\hoyuen\\\\Documents\\\\project\\\\project1\\\\frontend\\\\pages\\\\index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { LOAD_USER_REQUEST } from '../reducers/user';\nimport { Card } from 'antd';\nimport wrapper from '../store/configureStore';\nimport axios from 'axios';\nimport { END } from 'redux-saga';\n\nvar Index = function Index() {\n  return __jsx(React.Fragment, null, __jsx(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, __jsx(Card.Meta, {\n    description: __jsx(\"div\", {\n      style: {\n        height: '100vh',\n        width: '100%'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 33\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  })));\n}; // export const getServerSideProps = wrapper.getServerSideProps(async (context) => {\n//   const cookie = context.req ? context.req.headers.cookie : \"\";\n//   axios.defaults.headers.Cookie = \"\";\n//   if (context.req && cookie) {\n//     axios.defaults.headers.Cookie = cookie;\n//   }\n//   context.store.dispatch({ type: LOAD_USER_REQUEST });\n//   context.store.dispatch(END);\n//   await context.store.sagaTask.toPromise();\n// });\n\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/pages/index.js"],"names":["LOAD_USER_REQUEST","Card","wrapper","axios","END","Index","height","width"],"mappings":";;;;;AAAA,SAASA,iBAAT,QAAkC,kBAAlC;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,YAApB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClB,SACE,4BACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,WAAW,EAAE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,OAAV;AAAmBC,QAAAA,KAAK,EAAE;AAA1B,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAOD,CARD,C,CAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;KAnBMF,K;AAqBN,eAAeA,KAAf","sourcesContent":["import { LOAD_USER_REQUEST } from '../reducers/user';\r\nimport { Card } from 'antd';\r\nimport wrapper from '../store/configureStore';\r\nimport axios from 'axios';\r\nimport { END } from 'redux-saga';\r\n\r\nconst Index = () => {\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Meta description={<div style={{ height: '100vh', width: '100%' }}></div>} />\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\n// export const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n//   const cookie = context.req ? context.req.headers.cookie : \"\";\r\n//   axios.defaults.headers.Cookie = \"\";\r\n//   if (context.req && cookie) {\r\n//     axios.defaults.headers.Cookie = cookie;\r\n//   }\r\n//   context.store.dispatch({ type: LOAD_USER_REQUEST });\r\n//   context.store.dispatch(END);\r\n//   await context.store.sagaTask.toPromise();\r\n// });\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}