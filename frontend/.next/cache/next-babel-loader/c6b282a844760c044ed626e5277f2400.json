{"ast":null,"code":"import { Menu, Input, Modal, Popover, Space, List, Empty } from \"antd\";\nimport { ArrowLeftOutlined, UserOutlined } from \"@ant-design/icons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Router from \"next/router\";\nimport { LOG_OUT_SUCCESS } from \"../../reducers/user\";\nimport LoginModal from \"../Forms/Login\";\nimport SearchBarModal from \"../Forms/SearchBar\";\nimport ChangePassword from \"../Forms/ChangePassword\";\nimport { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useInput } from \"../Generalui/CustomHooks\";\nimport axios from \"axios\";\nimport { SET_COORDINATES_SUCCESS, SET_SHOPCOORDINATES_SUCCESS } from \"../../reducers/shop\";\nimport { Navbar } from \"antd-mobile\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst NavibarLayout = () => {\n  const router = useRouter();\n  axios.defaults.baseURL = `${process.env.BACKEND_IP}`;\n  const [username, onChangeUsername, setUsername] = useInput();\n  const [password, onChangePassword, setPassword] = useInput();\n  const {\n    0: toggleLogin,\n    1: setToggleLogin\n  } = useState(false);\n  const {\n    0: toggleSearch,\n    1: setToggleSearch\n  } = useState(false);\n  const {\n    0: toggleChangePassword,\n    1: setToggleChangePassword\n  } = useState(false);\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false);\n  const {\n    0: list,\n    1: setList\n  } = useState([]);\n  const {\n    pageInfo\n  } = useSelector(state => state.admin);\n  const {\n    0: show,\n    1: setShow\n  } = useState(false);\n\n  const hideHandler = () => {\n    setShow(false);\n  };\n\n  const showHandler = show => {\n    setShow(show);\n  };\n\n  const onToggleChangePassword = () => {\n    hideHandler();\n    setToggleChangePassword(prev => !prev);\n  };\n\n  const dispatch = useDispatch();\n\n  const onClickLogout = () => {\n    setPassword(\"\");\n    setUsername(\"\");\n    dispatch({\n      type: LOG_OUT_SUCCESS\n    });\n  };\n\n  const onToggleLogin = () => {\n    setPassword(\"\");\n    setUsername(\"\");\n    setToggleLogin(prev => !prev);\n  };\n\n  const onToggleSearch = () => {\n    setToggleSearch(prev => !prev);\n  };\n\n  const onVisible = () => {\n    setVisible(prev => !prev);\n  };\n\n  const onClickPayments = () => {\n    router.push(\"/payments\");\n    hideHandler();\n  };\n\n  const onClickAdmin = () => {\n    router.push(\"/shop/admin\");\n    hideHandler();\n  };\n\n  const onClickShopList = coordinates => {\n    axios.post(\"/\", {\n      coordinates: {\n        lat: Number(coordinates.x),\n        lng: Number(coordinates.y)\n      }\n    }).then(result => {\n      dispatch({\n        type: SET_COORDINATES_SUCCESS,\n        data: [Number(coordinates.x), Number(coordinates.y)]\n      }, []);\n      dispatch({\n        type: SET_SHOPCOORDINATES_SUCCESS,\n        data: result.data\n      }, []);\n      setVisible(false);\n    });\n  };\n\n  const {\n    isLoggedIn,\n    session\n  } = useSelector(state => state.user);\n  return /*#__PURE__*/_jsxs(Navbar, {\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      children: \"test\"\n    }), /*#__PURE__*/_jsx(\"div\", {\n      children: \"test\"\n    }), /*#__PURE__*/_jsx(\"div\", {\n      children: \"test\"\n    }), /*#__PURE__*/_jsx(\"div\", {\n      children: \"test\"\n    })]\n  }); // return (\n  //   <>\n  //     <Modal title={\"Login\"} visible={toggleLogin} onCancel={onToggleLogin} footer={null}>\n  //       <LoginModal\n  //         setToggleLogin={setToggleLogin}\n  //         username={username}\n  //         onChangeUsername={onChangeUsername}\n  //         password={password}\n  //         onChangePassword={onChangePassword}\n  //       />\n  //     </Modal>\n  //     <Modal\n  //       title={\"Search\"}\n  //       visible={toggleSearch}\n  //       onCancel={onToggleSearch}\n  //       setVisible={setVisible}\n  //       footer={null}\n  //     >\n  //       <SearchBarModal\n  //         type={pageInfo}\n  //         setToggleSearch={setToggleSearch}\n  //         setVisible={setVisible}\n  //         setList={setList}\n  //       />\n  //     </Modal>\n  //     <Modal title={\"검색결과\"} visible={visible} onCancel={onVisible} footer={null}>\n  //       {list.length > 0 ? (\n  //         <List\n  //           dataSource={list}\n  //           renderItem={(item) => {\n  //             return (\n  //               <List.Item onClick={() => onClickShopList(item)}>\n  //                 <List.Item.Meta title={item.place_name} description={item.road_address_name} />\n  //               </List.Item>\n  //             );\n  //           }}\n  //         />\n  //       ) : (\n  //         <Empty>검색 결과가 존재하지 않습니다.</Empty>\n  //       )}\n  //     </Modal>\n  //     <Modal\n  //       title={\"Change Password\"}\n  //       visible={toggleChangePassword}\n  //       onCancel={onToggleChangePassword}\n  //       footer={null}\n  //     >\n  //       <ChangePassword setToggleChangePassword={setToggleChangePassword} />\n  //     </Modal>\n  //     <div style={{ marginTop: \"10px\", backGroundColor: \"white\" }}>\n  //       <Menu mode=\"horizontal\">\n  //         <Menu.Item key={\"back\"}>\n  //           <ArrowLeftOutlined onClick={() => Router.back()} />\n  //         </Menu.Item>\n  //         <Menu.Item key={\"search\"} style={{ float: \"right\" }}>\n  //           <Input.Search\n  //             enterButton\n  //             style={{ verticalAlign: \"middle\" }}\n  //             onClick={onToggleSearch}\n  //             disabled={pageInfo === (\"store\" || \"menu\" || \"index\") ? false : true}\n  //             readOnly\n  //           />\n  //         </Menu.Item>\n  //         {!isLoggedIn\n  //           ? [\n  //               <Menu.Item key={\"login\"}>\n  //                 <a onClick={onToggleLogin}>로그인</a>\n  //               </Menu.Item>,\n  //             ]\n  //           : [\n  //               <Menu.Item key={\"profile\"}>\n  //                 <Popover\n  //                   trigger={\"click\"}\n  //                   placement={\"bottom\"}\n  //                   title={session.name}\n  //                   visible={show}\n  //                   onVisibleChange={showHandler}\n  //                   content={\n  //                     <>\n  //                       <Space direction={\"vertical\"}>\n  //                         <div style={{ cursor: \"pointer\" }} onClick={onToggleChangePassword}>\n  //                           비밀번호 변경\n  //                         </div>\n  //                         <div style={{ cursor: \"pointer\" }} onClick={onClickPayments}>\n  //                           결제이력\n  //                         </div>\n  //                         {session.division === true && (\n  //                           <div style={{ cursor: \"pointer\" }} onClick={onClickAdmin}>\n  //                             매장관리 페이지\n  //                           </div>\n  //                         )}\n  //                       </Space>\n  //                     </>\n  //                   }\n  //                 >\n  //                   <UserOutlined />\n  //                 </Popover>\n  //               </Menu.Item>,\n  //               <Menu.Item style={{ float: \"right\" }} key={\"logout\"}>\n  //                 <a onClick={onClickLogout}>로그아웃</a>\n  //               </Menu.Item>,\n  //             ]}\n  //       </Menu>\n  //     </div>\n  //   </>\n  // );\n};\n\nexport default NavibarLayout;","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/Dev/project1/frontend/components/Layout/NavibarLayout.js"],"names":["Menu","Input","Modal","Popover","Space","List","Empty","ArrowLeftOutlined","UserOutlined","useSelector","useDispatch","Router","LOG_OUT_SUCCESS","LoginModal","SearchBarModal","ChangePassword","useState","useRouter","useInput","axios","SET_COORDINATES_SUCCESS","SET_SHOPCOORDINATES_SUCCESS","Navbar","NavibarLayout","router","defaults","baseURL","process","env","BACKEND_IP","username","onChangeUsername","setUsername","password","onChangePassword","setPassword","toggleLogin","setToggleLogin","toggleSearch","setToggleSearch","toggleChangePassword","setToggleChangePassword","visible","setVisible","list","setList","pageInfo","state","admin","show","setShow","hideHandler","showHandler","onToggleChangePassword","prev","dispatch","onClickLogout","type","onToggleLogin","onToggleSearch","onVisible","onClickPayments","push","onClickAdmin","onClickShopList","coordinates","post","lat","Number","x","lng","y","then","result","data","isLoggedIn","session","user"],"mappings":"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","sourcesContent":["import { Menu, Input, Modal, Popover, Space, List, Empty } from \"antd\";\nimport { ArrowLeftOutlined, UserOutlined } from \"@ant-design/icons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Router from \"next/router\";\nimport { LOG_OUT_SUCCESS } from \"../../reducers/user\";\nimport LoginModal from \"../Forms/Login\";\nimport SearchBarModal from \"../Forms/SearchBar\";\nimport ChangePassword from \"../Forms/ChangePassword\";\nimport { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useInput } from \"../Generalui/CustomHooks\";\nimport axios from \"axios\";\nimport { SET_COORDINATES_SUCCESS, SET_SHOPCOORDINATES_SUCCESS } from \"../../reducers/shop\";\nimport { Navbar } from \"antd-mobile\";\n\nconst NavibarLayout = () => {\n  const router = useRouter();\n  axios.defaults.baseURL = `${process.env.BACKEND_IP}`;\n\n  const [username, onChangeUsername, setUsername] = useInput();\n  const [password, onChangePassword, setPassword] = useInput();\n\n  const [toggleLogin, setToggleLogin] = useState(false);\n  const [toggleSearch, setToggleSearch] = useState(false);\n  const [toggleChangePassword, setToggleChangePassword] = useState(false);\n  const [visible, setVisible] = useState(false);\n  const [list, setList] = useState([]);\n\n  const { pageInfo } = useSelector((state) => state.admin);\n\n  const [show, setShow] = useState(false);\n\n  const hideHandler = () => {\n    setShow(false);\n  };\n\n  const showHandler = (show) => {\n    setShow(show);\n  };\n\n  const onToggleChangePassword = () => {\n    hideHandler();\n    setToggleChangePassword((prev) => !prev);\n  };\n\n  const dispatch = useDispatch();\n  const onClickLogout = () => {\n    setPassword(\"\");\n    setUsername(\"\");\n    dispatch({ type: LOG_OUT_SUCCESS });\n  };\n\n  const onToggleLogin = () => {\n    setPassword(\"\");\n    setUsername(\"\");\n    setToggleLogin((prev) => !prev);\n  };\n\n  const onToggleSearch = () => {\n    setToggleSearch((prev) => !prev);\n  };\n\n  const onVisible = () => {\n    setVisible((prev) => !prev);\n  };\n\n  const onClickPayments = () => {\n    router.push(\"/payments\");\n    hideHandler();\n  };\n\n  const onClickAdmin = () => {\n    router.push(\"/shop/admin\");\n    hideHandler();\n  };\n\n  const onClickShopList = (coordinates) => {\n    axios\n      .post(\"/\", { coordinates: { lat: Number(coordinates.x), lng: Number(coordinates.y) } })\n      .then((result) => {\n        dispatch(\n          {\n            type: SET_COORDINATES_SUCCESS,\n            data: [Number(coordinates.x), Number(coordinates.y)],\n          },\n          [],\n        );\n        dispatch({ type: SET_SHOPCOORDINATES_SUCCESS, data: result.data }, []);\n        setVisible(false);\n      });\n  };\n\n  const { isLoggedIn, session } = useSelector((state) => state.user);\n\n  return (\n    <Navbar>\n      <div>test</div>\n      <div>test</div>\n      <div>test</div>\n      <div>test</div>\n    </Navbar>\n  );\n\n  // return (\n  //   <>\n  //     <Modal title={\"Login\"} visible={toggleLogin} onCancel={onToggleLogin} footer={null}>\n  //       <LoginModal\n  //         setToggleLogin={setToggleLogin}\n  //         username={username}\n  //         onChangeUsername={onChangeUsername}\n  //         password={password}\n  //         onChangePassword={onChangePassword}\n  //       />\n  //     </Modal>\n  //     <Modal\n  //       title={\"Search\"}\n  //       visible={toggleSearch}\n  //       onCancel={onToggleSearch}\n  //       setVisible={setVisible}\n  //       footer={null}\n  //     >\n  //       <SearchBarModal\n  //         type={pageInfo}\n  //         setToggleSearch={setToggleSearch}\n  //         setVisible={setVisible}\n  //         setList={setList}\n  //       />\n  //     </Modal>\n  //     <Modal title={\"검색결과\"} visible={visible} onCancel={onVisible} footer={null}>\n  //       {list.length > 0 ? (\n  //         <List\n  //           dataSource={list}\n  //           renderItem={(item) => {\n  //             return (\n  //               <List.Item onClick={() => onClickShopList(item)}>\n  //                 <List.Item.Meta title={item.place_name} description={item.road_address_name} />\n  //               </List.Item>\n  //             );\n  //           }}\n  //         />\n  //       ) : (\n  //         <Empty>검색 결과가 존재하지 않습니다.</Empty>\n  //       )}\n  //     </Modal>\n  //     <Modal\n  //       title={\"Change Password\"}\n  //       visible={toggleChangePassword}\n  //       onCancel={onToggleChangePassword}\n  //       footer={null}\n  //     >\n  //       <ChangePassword setToggleChangePassword={setToggleChangePassword} />\n  //     </Modal>\n  //     <div style={{ marginTop: \"10px\", backGroundColor: \"white\" }}>\n  //       <Menu mode=\"horizontal\">\n  //         <Menu.Item key={\"back\"}>\n  //           <ArrowLeftOutlined onClick={() => Router.back()} />\n  //         </Menu.Item>\n  //         <Menu.Item key={\"search\"} style={{ float: \"right\" }}>\n  //           <Input.Search\n  //             enterButton\n  //             style={{ verticalAlign: \"middle\" }}\n  //             onClick={onToggleSearch}\n  //             disabled={pageInfo === (\"store\" || \"menu\" || \"index\") ? false : true}\n  //             readOnly\n  //           />\n  //         </Menu.Item>\n\n  //         {!isLoggedIn\n  //           ? [\n  //               <Menu.Item key={\"login\"}>\n  //                 <a onClick={onToggleLogin}>로그인</a>\n  //               </Menu.Item>,\n  //             ]\n  //           : [\n  //               <Menu.Item key={\"profile\"}>\n  //                 <Popover\n  //                   trigger={\"click\"}\n  //                   placement={\"bottom\"}\n  //                   title={session.name}\n  //                   visible={show}\n  //                   onVisibleChange={showHandler}\n  //                   content={\n  //                     <>\n  //                       <Space direction={\"vertical\"}>\n  //                         <div style={{ cursor: \"pointer\" }} onClick={onToggleChangePassword}>\n  //                           비밀번호 변경\n  //                         </div>\n  //                         <div style={{ cursor: \"pointer\" }} onClick={onClickPayments}>\n  //                           결제이력\n  //                         </div>\n  //                         {session.division === true && (\n  //                           <div style={{ cursor: \"pointer\" }} onClick={onClickAdmin}>\n  //                             매장관리 페이지\n  //                           </div>\n  //                         )}\n  //                       </Space>\n  //                     </>\n  //                   }\n  //                 >\n  //                   <UserOutlined />\n  //                 </Popover>\n  //               </Menu.Item>,\n  //               <Menu.Item style={{ float: \"right\" }} key={\"logout\"}>\n  //                 <a onClick={onClickLogout}>로그아웃</a>\n  //               </Menu.Item>,\n  //             ]}\n  //       </Menu>\n  //     </div>\n  //   </>\n  // );\n};\n\nexport default NavibarLayout;\n"]},"metadata":{},"sourceType":"module"}