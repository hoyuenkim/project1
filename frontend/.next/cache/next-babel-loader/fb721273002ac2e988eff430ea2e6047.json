{"ast":null,"code":"import { Form, Input } from \"antd\";\nimport axios from \"axios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst EmailForm = ({\n  onChangeEmail\n}) => {\n  axios.defaults.baseURL = process.env.BACKEND_IP;\n  return /*#__PURE__*/_jsx(Form.Item, {\n    name: \"email\",\n    validateTrigger: \"onBlur\",\n    rules: [{\n      required: true,\n      message: \"이메일를 입력해 주세요!\"\n    }, () => ({\n      async validator(rule, value) {\n        const regex = new RegExp(/^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i);\n\n        if (value && value.match(regex)) {\n          const result = await axios.post(\"/user/confirm/email\", {\n            email: value\n          });\n\n          if (result.data) {\n            return Promise.reject(\"이미 존재하는 이메일입니다\");\n          } else {\n            return Promise.resolve();\n          }\n        } else {\n          return Promise.reject(\"형식에 맞지 않는 이메일입니다\");\n        }\n      }\n\n    })],\n    children: /*#__PURE__*/_jsx(Input, {\n      size: `large`,\n      prefix: `* Email`,\n      onChange: onChangeEmail,\n      placeholder: \"Email\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n    })\n  });\n};\n\nexport default EmailForm;","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/dev/project1/frontend/components/Forms/EmailForm.js"],"names":["Form","Input","axios","EmailForm","onChangeEmail","defaults","baseURL","process","env","BACKEND_IP","required","message","validator","rule","value","regex","RegExp","match","result","post","email","data","Promise","reject","resolve"],"mappings":"AAAA,SAASA,IAAT,EAAeC,KAAf,QAA4B,MAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAuB;AACvCF,EAAAA,KAAK,CAACG,QAAN,CAAeC,OAAf,GAAyBC,OAAO,CAACC,GAAR,CAAYC,UAArC;AACA,sBACE,KAAC,IAAD,CAAM,IAAN;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,eAAe,EAAC,QAFlB;AAGE,IAAA,KAAK,EAAE,CACL;AACEC,MAAAA,QAAQ,EAAE,IADZ;AAEEC,MAAAA,OAAO,EAAE;AAFX,KADK,EAKL,OAAO;AACL,YAAMC,SAAN,CAAgBC,IAAhB,EAAsBC,KAAtB,EAA6B;AAC3B,cAAMC,KAAK,GAAG,IAAIC,MAAJ,CACZ,kFADY,CAAd;;AAGA,YAAIF,KAAK,IAAIA,KAAK,CAACG,KAAN,CAAYF,KAAZ,CAAb,EAAiC;AAC/B,gBAAMG,MAAM,GAAG,MAAMhB,KAAK,CAACiB,IAAN,CAAW,qBAAX,EAAkC;AACrDC,YAAAA,KAAK,EAAEN;AAD8C,WAAlC,CAArB;;AAGA,cAAII,MAAM,CAACG,IAAX,EAAiB;AACf,mBAAOC,OAAO,CAACC,MAAR,CAAe,gBAAf,CAAP;AACD,WAFD,MAEO;AACL,mBAAOD,OAAO,CAACE,OAAR,EAAP;AACD;AACF,SATD,MASO;AACL,iBAAOF,OAAO,CAACC,MAAR,CAAe,kBAAf,CAAP;AACD;AACF;;AAjBI,KAAP,CALK,CAHT;AAAA,2BA6BE,KAAC,KAAD;AACE,MAAA,IAAI,EAAG,OADT;AAEE,MAAA,MAAM,EAAG,SAFX;AAGE,MAAA,QAAQ,EAAEnB,aAHZ;AAIE,MAAA,WAAW,EAAC;AAJd;AA7BF,IADF;AAsCD,CAxCD;;AA0CA,eAAeD,SAAf","sourcesContent":["import { Form, Input } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\nconst EmailForm = ({ onChangeEmail }) => {\r\n  axios.defaults.baseURL = process.env.BACKEND_IP;\r\n  return (\r\n    <Form.Item\r\n      name=\"email\"\r\n      validateTrigger=\"onBlur\"\r\n      rules={[\r\n        {\r\n          required: true,\r\n          message: \"이메일를 입력해 주세요!\",\r\n        },\r\n        () => ({\r\n          async validator(rule, value) {\r\n            const regex = new RegExp(\r\n              /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i,\r\n            );\r\n            if (value && value.match(regex)) {\r\n              const result = await axios.post(\"/user/confirm/email\", {\r\n                email: value,\r\n              });\r\n              if (result.data) {\r\n                return Promise.reject(\"이미 존재하는 이메일입니다\");\r\n              } else {\r\n                return Promise.resolve();\r\n              }\r\n            } else {\r\n              return Promise.reject(\"형식에 맞지 않는 이메일입니다\");\r\n            }\r\n          },\r\n        }),\r\n      ]}\r\n    >\r\n      <Input\r\n        size={`large`}\r\n        prefix={`* Email`}\r\n        onChange={onChangeEmail}\r\n        placeholder=\"Email을 입력해주세요\"\r\n      />\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nexport default EmailForm;\r\n"]},"metadata":{},"sourceType":"module"}