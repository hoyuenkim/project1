{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport product from \"immer\";\nconst initialState = {\n  cart: []\n};\nexport const LOAD_CART_REQUEST = \"LOAD_CART_REQUEST\";\nexport const LOAD_CART_SUCCESS = \"LOAD_CART_SUCCESS\";\nexport const LOAD_CART_FAILURE = \"LOAD_CART_FAILURE\";\nexport const REMOVE_ITEM_REQUEST = \"REMOVE_ITEM_REQUEST\";\nexport const REMOVE_ITEM_SUCCESS = \"REMOVE_ITEM_SUCCESS\";\nexport const REMOVE_ITEM_FAILURE = \"REMOVE_ITEM_FAILURE\";\nexport const ADD_ITEM_QUANTITY_REQUEST = \"ADD_ITEM_QUANTITY_REQUEST\";\nexport const SUBSTRACT_ITEM_QUANTITY_REQUEST = \"SUBSTRACT_ITEM_QUANTITY_REQUEST\";\nexport const ADD_CART_ITEM_REQUEST = \"ADD_CART_ITEM_REQUEST\";\nexport const REMOVE_CART_ITEM_REQUEST = \"REMOVE_CART_ITEM_REQUEST\";\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_CART_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_CART_SUCCESS:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          cart: [...state.cart, action.data]\n        });\n      }\n\n    case LOAD_CART_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case REMOVE_ITEM_REQUEST:\n      {\n        const items = state.cart.filter(v => v.id !== action.id);\n        return _objectSpread(_objectSpread({}, state), {}, {\n          cart: [state.items, ...items]\n        });\n      }\n\n    case ADD_CART_ITEM_REQUEST:\n      {\n        const newProduct = action.product;\n        const productIndex = state.cart.findIndex(v => v.id === newProduct.id);\n        console.log(productIndex);\n\n        if (productIndex !== -1) {\n          console.log(\"there is a product\");\n          console.log(state.cart);\n          const formerProduct = state.cart[productIndex];\n\n          const finalProduct = _objectSpread(_objectSpread({}, formerProduct), {}, {\n            quantity: formerProduct.quantity + newProduct.quantity\n          });\n\n          console.log(\"no\");\n          return _objectSpread(_objectSpread({}, state), {}, {\n            cart: [...state.cart, finalProduct]\n          });\n        }\n\n        return _objectSpread(_objectSpread({}, state), {}, {\n          cart: [...state.cart, newProduct]\n        });\n      }\n    // case ADD_CART_ITEM_REQUEST: {\n    //   const listIndex = state.cart.findIndex((v) => v.id === action.id);\n    //   const itemIndex = state.products.findIndex((v) => v.id === action.id);\n    //   if (listIndex !== -1) {\n    //     const cart = [...state.cart];\n    //     const products = [...state.products];\n    //     const item = products[itemIndex];\n    //     const cartItem = cart[listIndex];\n    //     cart[listIndex].quantity = cartItem.quantity + item.quantity;\n    //     const productsList = [\n    //       ...state.products.filter((v) => v.id !== action.id),\n    //       { ...item, quantity: 1 },\n    //     ].sort((a, b) => {\n    //       return a.id < b.id ? -1 : a.id > b.id ? 1 : 0;\n    //     });\n    //     return {\n    //       ...state,\n    //       products: productsList,\n    //       cart: cart,\n    //     };\n    //   } else {\n    //     const products = [...state.products];\n    //     const item = products[itemIndex];\n    //     const productsList = [\n    //       ...state.products.filter((v) => v.id !== action.id),\n    //       { ...item, quantity: 1 },\n    //     ].sort((a, b) => {\n    //       return a.id < b.id ? -1 : a.id > b.id ? 1 : 0;\n    //     });\n    //     return {\n    //       ...state,\n    //       products: productsList,\n    //       cart: [...state.cart, item],\n    //     };\n    //   }\n    // }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/reducers/cart.js"],"names":["product","initialState","cart","LOAD_CART_REQUEST","LOAD_CART_SUCCESS","LOAD_CART_FAILURE","REMOVE_ITEM_REQUEST","REMOVE_ITEM_SUCCESS","REMOVE_ITEM_FAILURE","ADD_ITEM_QUANTITY_REQUEST","SUBSTRACT_ITEM_QUANTITY_REQUEST","ADD_CART_ITEM_REQUEST","REMOVE_CART_ITEM_REQUEST","state","action","type","data","items","filter","v","id","newProduct","productIndex","findIndex","console","log","formerProduct","finalProduct","quantity"],"mappings":";;;;;;AAAA,OAAOA,OAAP,MAAoB,OAApB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AADa,CAArB;AAIA,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AAEP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AAEP,OAAO,MAAMC,yBAAyB,GAAG,2BAAlC;AACP,OAAO,MAAMC,+BAA+B,GAAG,iCAAxC;AAEP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMC,wBAAwB,GAAG,0BAAjC;AAEP,gBAAe,CAACC,KAAK,GAAGZ,YAAT,EAAuBa,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKZ,iBAAL;AAAwB;AACtB,iCACKU,KADL;AAGD;;AAED,SAAKT,iBAAL;AAAwB;AACtB,+CACKS,KADL;AAEEX,UAAAA,IAAI,EAAE,CAAC,GAAGW,KAAK,CAACX,IAAV,EAAgBY,MAAM,CAACE,IAAvB;AAFR;AAID;;AAED,SAAKX,iBAAL;AAAwB;AACtB,iCACKQ,KADL;AAGD;;AAED,SAAKP,mBAAL;AAA0B;AACxB,cAAMW,KAAK,GAAGJ,KAAK,CAACX,IAAN,CAAWgB,MAAX,CAAmBC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASN,MAAM,CAACM,EAAzC,CAAd;AACA,+CACKP,KADL;AAEEX,UAAAA,IAAI,EAAE,CAACW,KAAK,CAACI,KAAP,EAAc,GAAGA,KAAjB;AAFR;AAID;;AAED,SAAKN,qBAAL;AAA4B;AAC1B,cAAMU,UAAU,GAAGP,MAAM,CAACd,OAA1B;AACA,cAAMsB,YAAY,GAAGT,KAAK,CAACX,IAAN,CAAWqB,SAAX,CAAsBJ,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASC,UAAU,CAACD,EAAhD,CAArB;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ;;AACA,YAAIA,YAAY,KAAK,CAAC,CAAtB,EAAyB;AACvBE,UAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAD,UAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAK,CAACX,IAAlB;AACA,gBAAMwB,aAAa,GAAGb,KAAK,CAACX,IAAN,CAAWoB,YAAX,CAAtB;;AACA,gBAAMK,YAAY,mCACbD,aADa;AAEhBE,YAAAA,QAAQ,EAAEF,aAAa,CAACE,QAAd,GAAyBP,UAAU,CAACO;AAF9B,YAAlB;;AAIAJ,UAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,iDACKZ,KADL;AAEEX,YAAAA,IAAI,EAAE,CAAC,GAAGW,KAAK,CAACX,IAAV,EAAgByB,YAAhB;AAFR;AAID;;AAED,+CACKd,KADL;AAEEX,UAAAA,IAAI,EAAE,CAAC,GAAGW,KAAK,CAACX,IAAV,EAAgBmB,UAAhB;AAFR;AAID;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAS;AACP,iCAAYR,KAAZ;AACD;AA5FH;AA8FD,CA/FD","sourcesContent":["import product from \"immer\";\r\n\r\nconst initialState = {\r\n  cart: [],\r\n};\r\n\r\nexport const LOAD_CART_REQUEST = \"LOAD_CART_REQUEST\";\r\nexport const LOAD_CART_SUCCESS = \"LOAD_CART_SUCCESS\";\r\nexport const LOAD_CART_FAILURE = \"LOAD_CART_FAILURE\";\r\n\r\nexport const REMOVE_ITEM_REQUEST = \"REMOVE_ITEM_REQUEST\";\r\nexport const REMOVE_ITEM_SUCCESS = \"REMOVE_ITEM_SUCCESS\";\r\nexport const REMOVE_ITEM_FAILURE = \"REMOVE_ITEM_FAILURE\";\r\n\r\nexport const ADD_ITEM_QUANTITY_REQUEST = \"ADD_ITEM_QUANTITY_REQUEST\";\r\nexport const SUBSTRACT_ITEM_QUANTITY_REQUEST = \"SUBSTRACT_ITEM_QUANTITY_REQUEST\";\r\n\r\nexport const ADD_CART_ITEM_REQUEST = \"ADD_CART_ITEM_REQUEST\";\r\nexport const REMOVE_CART_ITEM_REQUEST = \"REMOVE_CART_ITEM_REQUEST\";\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOAD_CART_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n\r\n    case LOAD_CART_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        cart: [...state.cart, action.data],\r\n      };\r\n    }\r\n\r\n    case LOAD_CART_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n\r\n    case REMOVE_ITEM_REQUEST: {\r\n      const items = state.cart.filter((v) => v.id !== action.id);\r\n      return {\r\n        ...state,\r\n        cart: [state.items, ...items],\r\n      };\r\n    }\r\n\r\n    case ADD_CART_ITEM_REQUEST: {\r\n      const newProduct = action.product;\r\n      const productIndex = state.cart.findIndex((v) => v.id === newProduct.id);\r\n      console.log(productIndex);\r\n      if (productIndex !== -1) {\r\n        console.log(\"there is a product\");\r\n        console.log(state.cart);\r\n        const formerProduct = state.cart[productIndex];\r\n        const finalProduct = {\r\n          ...formerProduct,\r\n          quantity: formerProduct.quantity + newProduct.quantity,\r\n        };\r\n        console.log(\"no\");\r\n        return {\r\n          ...state,\r\n          cart: [...state.cart, finalProduct],\r\n        };\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        cart: [...state.cart, newProduct],\r\n      };\r\n    }\r\n\r\n    // case ADD_CART_ITEM_REQUEST: {\r\n    //   const listIndex = state.cart.findIndex((v) => v.id === action.id);\r\n    //   const itemIndex = state.products.findIndex((v) => v.id === action.id);\r\n    //   if (listIndex !== -1) {\r\n    //     const cart = [...state.cart];\r\n    //     const products = [...state.products];\r\n    //     const item = products[itemIndex];\r\n    //     const cartItem = cart[listIndex];\r\n    //     cart[listIndex].quantity = cartItem.quantity + item.quantity;\r\n    //     const productsList = [\r\n    //       ...state.products.filter((v) => v.id !== action.id),\r\n    //       { ...item, quantity: 1 },\r\n    //     ].sort((a, b) => {\r\n    //       return a.id < b.id ? -1 : a.id > b.id ? 1 : 0;\r\n    //     });\r\n    //     return {\r\n    //       ...state,\r\n    //       products: productsList,\r\n    //       cart: cart,\r\n    //     };\r\n    //   } else {\r\n    //     const products = [...state.products];\r\n    //     const item = products[itemIndex];\r\n    //     const productsList = [\r\n    //       ...state.products.filter((v) => v.id !== action.id),\r\n    //       { ...item, quantity: 1 },\r\n    //     ].sort((a, b) => {\r\n    //       return a.id < b.id ? -1 : a.id > b.id ? 1 : 0;\r\n    //     });\r\n    //     return {\r\n    //       ...state,\r\n    //       products: productsList,\r\n    //       cart: [...state.cart, item],\r\n    //     };\r\n    //   }\r\n    // }\r\n\r\n    default: {\r\n      return { ...state };\r\n    }\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}