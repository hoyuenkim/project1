{"ast":null,"code":"import { fork, takeEvery, all, put, call, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { LOAD_USER_SUCCESS, LOAD_USER_FAILURE, LOAD_USER_REQUEST, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, BIZCODE_CONFIRM_FAILURE, BIZCODE_CONFIRM_SUCCESS, BIZCODE_CONFIRM_REQUEST } from \"../reducers/user\";\n\nfunction loginApi(loginData) {\n  return axios.post(\"/user/login\", loginData, {\n    withCredentials: true\n  });\n}\n\nfunction* login(action) {\n  try {\n    const result = yield call(loginApi, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.log(e);\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeEvery(LOG_IN_REQUEST, login);\n}\n\nfunction signUpApi(signUpData) {\n  return axios.post(\"/user/signUp\", signUpData, {\n    withCredentials: true\n  });\n}\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpApi, action.data);\n    yield put({\n      type: SIGN_UP_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.log(e);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchSignUp() {\n  yield takeEvery(SIGN_UP_REQUEST, signUp);\n}\n\nfunction loadUserApi() {\n  return axios.post(\"/user\", {}, {\n    withCredentials: true\n  });\n}\n\nfunction* loadUser() {\n  try {\n    const result = yield call(loadUserApi);\n    yield put({\n      type: LOAD_USER_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.log(e);\n    yield put({\n      type: LOAD_USER_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchLoadUser() {\n  yield takeEvery(LOAD_USER_REQUEST, loadUser);\n}\n\nfunction logoutApi() {\n  return axios.post(\"/user/logout\", {}, {\n    withCredentials: true\n  });\n}\n\nfunction* logout() {\n  try {\n    const result = yield call(logoutApi);\n    yield put({\n      type: LOG_OUT_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.log(e);\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchLogOut() {\n  yield takeEvery(LOG_OUT_REQUEST, logout);\n}\n\nfunction bizcodeConfirmApi(bizcode) {\n  return axios.post(\"/user/confirm/bizcode\", {\n    bizcode\n  });\n}\n\nfunction* bizcodeConfirm(action) {\n  try {\n    const result = yield call(bizcodeConfirmApi, action.bizcode);\n    put({\n      type: BIZCODE_CONFIRM_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    put({\n      type: BIZCODE_CONFIRM_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchBizcodeConfirm() {\n  yield takeLatest(BIZCODE_CONFIRM_REQUEST, bizcodeConfirm);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchLogOut), fork(watchLoadUser), fork(watchSignUp), fork(watchBizcodeConfirm)]);\n}","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/sagas/user.js"],"names":["fork","takeEvery","all","put","call","takeLatest","axios","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","LOAD_USER_REQUEST","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","BIZCODE_CONFIRM_FAILURE","BIZCODE_CONFIRM_SUCCESS","BIZCODE_CONFIRM_REQUEST","loginApi","loginData","post","withCredentials","login","action","result","data","type","e","console","log","error","watchLogin","signUpApi","signUpData","signUp","watchSignUp","loadUserApi","loadUser","watchLoadUser","logoutApi","logout","watchLogOut","bizcodeConfirmApi","bizcode","bizcodeConfirm","watchBizcodeConfirm","userSaga"],"mappings":"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","sourcesContent":["import { fork, takeEvery, all, put, call, takeLatest } from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\nimport {\r\n  LOAD_USER_SUCCESS,\r\n  LOAD_USER_FAILURE,\r\n  LOAD_USER_REQUEST,\r\n  LOG_IN_REQUEST,\r\n  LOG_IN_SUCCESS,\r\n  LOG_IN_FAILURE,\r\n  SIGN_UP_REQUEST,\r\n  SIGN_UP_SUCCESS,\r\n  SIGN_UP_FAILURE,\r\n  LOG_OUT_REQUEST,\r\n  LOG_OUT_SUCCESS,\r\n  LOG_OUT_FAILURE,\r\n  BIZCODE_CONFIRM_FAILURE,\r\n  BIZCODE_CONFIRM_SUCCESS,\r\n  BIZCODE_CONFIRM_REQUEST,\r\n} from \"../reducers/user\";\r\n\r\nfunction loginApi(loginData) {\r\n  return axios.post(\"/user/login\", loginData, { withCredentials: true });\r\n}\r\n\r\nfunction* login(action) {\r\n  try {\r\n    const result = yield call(loginApi, action.data);\r\n    yield put({\r\n      type: LOG_IN_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({\r\n      type: LOG_IN_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLogin() {\r\n  yield takeEvery(LOG_IN_REQUEST, login);\r\n}\r\n\r\nfunction signUpApi(signUpData) {\r\n  return axios.post(\"/user/signUp\", signUpData, { withCredentials: true });\r\n}\r\n\r\nfunction* signUp(action) {\r\n  try {\r\n    const result = yield call(signUpApi, action.data);\r\n    yield put({\r\n      type: SIGN_UP_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({\r\n      type: SIGN_UP_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchSignUp() {\r\n  yield takeEvery(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\nfunction loadUserApi() {\r\n  return axios.post(\"/user\", {}, { withCredentials: true });\r\n}\r\n\r\nfunction* loadUser() {\r\n  try {\r\n    const result = yield call(loadUserApi);\r\n    yield put({\r\n      type: LOAD_USER_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({\r\n      type: LOAD_USER_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLoadUser() {\r\n  yield takeEvery(LOAD_USER_REQUEST, loadUser);\r\n}\r\n\r\nfunction logoutApi() {\r\n  return axios.post(\"/user/logout\", {}, { withCredentials: true });\r\n}\r\n\r\nfunction* logout() {\r\n  try {\r\n    const result = yield call(logoutApi);\r\n    yield put({\r\n      type: LOG_OUT_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({\r\n      type: LOG_OUT_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLogOut() {\r\n  yield takeEvery(LOG_OUT_REQUEST, logout);\r\n}\r\n\r\nfunction bizcodeConfirmApi(bizcode) {\r\n  return axios.post(\"/user/confirm/bizcode\", { bizcode });\r\n}\r\n\r\nfunction* bizcodeConfirm(action) {\r\n  try {\r\n    const result = yield call(bizcodeConfirmApi, action.bizcode);\r\n    put({\r\n      type: BIZCODE_CONFIRM_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    put({\r\n      type: BIZCODE_CONFIRM_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchBizcodeConfirm() {\r\n  yield takeLatest(BIZCODE_CONFIRM_REQUEST, bizcodeConfirm);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([\r\n    fork(watchLogin),\r\n    fork(watchLogOut),\r\n    fork(watchLoadUser),\r\n    fork(watchSignUp),\r\n    fork(watchBizcodeConfirm),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}