{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hoyuen\\\\Documents\\\\project\\\\project1\\\\frontend\\\\components\\\\ProductCard.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Card, Col, Space, Row, Divider, message, Typography, Modal, Tag } from 'antd';\nimport NumberFormat from 'react-number-format';\nimport AmountToggle from './Generalui/AmountToggle';\nimport { useDispatch } from 'react-redux';\nimport { ADD_CART_ITEM_REQUEST, CLEAR_CART_REQUEST } from '../reducers/cart';\nimport { INITIATE_QUANTITY_REQUEST } from '../reducers/menu';\nimport { useSelector } from 'react-redux';\nimport axios from 'axios';\nimport { PAYMENT_FAILURE, PAYMENT_SUCCESS } from '../reducers/payment';\nimport { useState } from 'react';\n\nconst ProductCard = ({\n  product\n}) => {\n  const {\n    0: toggleModal,\n    1: setToggleModal\n  } = useState(false);\n\n  const onChangeToggleModal = () => setToggleModal(prev => !prev);\n\n  const dispatch = useDispatch();\n  const {\n    isLoggedIn,\n    session\n  } = useSelector(state => state.user);\n\n  const onClickAddCart = () => {\n    const discountedProduct = _objectSpread(_objectSpread({}, product), {}, {\n      price: product.discount ? product.price * (1 - product.discount) : product.price,\n      amount: product.discount ? product.price * (1 - product.discount) * product.quantity : product.price * product.quantity\n    });\n\n    dispatch({\n      type: ADD_CART_ITEM_REQUEST,\n      product: discountedProduct\n    });\n    dispatch({\n      type: INITIATE_QUANTITY_REQUEST,\n      data: product\n    });\n  };\n\n  const onWindowScroll = () => {\n    window.scrollTo({\n      top: 0\n    });\n  };\n\n  const onClickPayment = () => {\n    if (isLoggedIn) {\n      dispatch({\n        type: CLEAR_CART_REQUEST\n      });\n      const originData = {\n        UserId: session.id,\n        UserName: session.name,\n        ProductId: product.id,\n        ShopId: product.Shop.id,\n        price: product.discount ? product.price * (100 - product.discount) * 0.01 * product.quantity : product.price * product.quantity,\n        quantity: product.quantity,\n        ShopName: product.Shop.name,\n        ProductTitle: product.title\n      };\n      const custom_data = JSON.stringify([originData]);\n      console.log(process.env.IAM_PORT_KEY);\n      onWindowScroll();\n\n      if (IMP !== null) {\n        IMP.init(process.env.IAM_PORTKEY);\n        const today = Date.now();\n        IMP.request_pay({\n          pay_method: 'card',\n          name: product.title,\n          Merchant_uid: 'uid' + today,\n          amount: product.Discount ? product.price * (100 - product.Discount.rate) * 0.01 * product.quantity : product.price * product.quantity,\n          custom_data\n        }, callback);\n      }\n    } else {\n      onChangeToggleModal();\n    }\n  };\n\n  const callback = async response => {\n    const {\n      success,\n      error_msg\n    } = response;\n\n    if (success) {\n      axios // .post(`${process.env.hostIp}/payments/complete/${product.id}/${product.Shop.id}/${session.id}`, { data: response })\n      .post(`http://127.0.0.1:3065/payments/complete`, {\n        data: response\n      }).then(response => {\n        dispatch({\n          type: PAYMENT_SUCCESS\n        }, {\n          data: response\n        });\n      }).catch(e => {\n        console.log(e);\n        dispatch({\n          type: PAYMENT_FAILURE\n        }, {\n          error: e\n        });\n      });\n    } else {\n      alert(`결제 실패: ${error_msg}`);\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Modal, {\n    header: null,\n    visible: toggleModal,\n    onCancel: onChangeToggleModal,\n    footer: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, \"\\uB85C\\uADF8\\uC778\\uC744 \\uD558\\uC154\\uC57C\\uD569\\uB2C8\\uB2E4.\"), __jsx(Card, {\n    key: product.id,\n    title: __jsx(React.Fragment, null, product.Discount ? __jsx(Space, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }\n    }, __jsx(Typography.Title, {\n      level: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, product.title), ' ', __jsx(Tag, {\n      color: 'magenta',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, \"-\", product.Discount.rate, \"%\")) : __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }\n    }, product.title)),\n    actions: [__jsx(\"div\", {\n      onClick: onClickPayment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }, \"\\uC989\\uC2DC \\uAD6C\\uB9E4\"), __jsx(\"div\", {\n      onClick: onClickAddCart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }, \"\\uC7A5\\uBC14\\uAD6C\\uB2C8\")],\n    cover: __jsx(\"img\", {\n      style: {\n        border: `1px solid #EFF2F5`\n      },\n      src: product.Images[0] && `http://127.0.0.1:3065/uploads/${product.Images[0].url}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }),\n    hoverable: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, __jsx(Card.Meta, {\n    description: __jsx(React.Fragment, null, __jsx(Row, {\n      gutter: [16, 16],\n      align: 'middle',\n      justify: 'end',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }\n    }, __jsx(Col, {\n      md: 16,\n      xs: 16,\n      style: {\n        display: 'inline-block'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, product.Discount ? __jsx(React.Fragment, null, __jsx(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 23\n      }\n    }, \"\\uAC00\\uACA9\"), __jsx(Space, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 23\n      }\n    }, __jsx(\"h1\", {\n      style: {\n        color: '#FF5733',\n        fontWeight: 'bold'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 25\n      }\n    }, __jsx(NumberFormat, {\n      value: product.price * (100 - product.Discount.rate) * 0.01,\n      displayType: 'text',\n      thousandSeparator: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 27\n      }\n    }), \"\\uC6D0\"), __jsx(Tag, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 25\n      }\n    }, __jsx(NumberFormat, {\n      value: product.price,\n      displayType: 'text',\n      thousandSeparator: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 27\n      }\n    }), \"\\uC6D0\"), '  ')) : __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }\n    }, __jsx(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 23\n      }\n    }, \"\\uAC00\\uACA9\"), __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 23\n      }\n    }, __jsx(NumberFormat, {\n      value: product.price,\n      displayType: 'text',\n      thousandSeparator: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 25\n      }\n    }), \"\\uC6D0\")), ' '), __jsx(Col, {\n      md: 8,\n      xs: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }\n    }, __jsx(AmountToggle, {\n      id: product.id,\n      quantity: product.quantity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 19\n      }\n    }))), __jsx(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 15\n      }\n    }), __jsx(Row, {\n      align: 'middle',\n      justify: 'center',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 15\n      }\n    }, __jsx(Col, {\n      span: 8,\n      xs: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 19\n      }\n    }, \"\\uCD1D \\uC8FC\\uBB38\\uAE08\\uC561\")), __jsx(Col, {\n      span: 16,\n      xs: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      style: {\n        textAlign: 'right'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 19\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 21\n      }\n    }, __jsx(NumberFormat, {\n      value: product.Discount ? product.price * (100 - product.Discount.rate) * 0.01 * product.quantity : product.price * product.quantity,\n      displayType: 'text',\n      thousandSeparator: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 23\n      }\n    }), \"\\uC6D0\"))))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default ProductCard;","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/components/ProductCard.js"],"names":["Card","Col","Space","Row","Divider","message","Typography","Modal","Tag","NumberFormat","AmountToggle","useDispatch","ADD_CART_ITEM_REQUEST","CLEAR_CART_REQUEST","INITIATE_QUANTITY_REQUEST","useSelector","axios","PAYMENT_FAILURE","PAYMENT_SUCCESS","useState","ProductCard","product","toggleModal","setToggleModal","onChangeToggleModal","prev","dispatch","isLoggedIn","session","state","user","onClickAddCart","discountedProduct","price","discount","amount","quantity","type","data","onWindowScroll","window","scrollTo","top","onClickPayment","originData","UserId","id","UserName","name","ProductId","ShopId","Shop","ShopName","ProductTitle","title","custom_data","JSON","stringify","console","log","process","env","IAM_PORT_KEY","IMP","init","IAM_PORTKEY","today","Date","now","request_pay","pay_method","Merchant_uid","Discount","rate","callback","response","success","error_msg","post","then","catch","e","error","alert","border","Images","url","display","color","fontWeight","textAlign"],"mappings":"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","sourcesContent":["import { Card, Col, Space, Row, Divider, message, Typography, Modal, Tag } from 'antd';\r\nimport NumberFormat from 'react-number-format';\r\nimport AmountToggle from './Generalui/AmountToggle';\r\nimport { useDispatch } from 'react-redux';\r\nimport { ADD_CART_ITEM_REQUEST, CLEAR_CART_REQUEST } from '../reducers/cart';\r\nimport { INITIATE_QUANTITY_REQUEST } from '../reducers/menu';\r\nimport { useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { PAYMENT_FAILURE, PAYMENT_SUCCESS } from '../reducers/payment';\r\nimport { useState } from 'react';\r\n\r\nconst ProductCard = ({ product }) => {\r\n  const [toggleModal, setToggleModal] = useState(false);\r\n  const onChangeToggleModal = () => setToggleModal((prev) => !prev);\r\n  const dispatch = useDispatch();\r\n\r\n  const { isLoggedIn, session } = useSelector((state) => state.user);\r\n\r\n  const onClickAddCart = () => {\r\n    const discountedProduct = {\r\n      ...product,\r\n      price: product.discount ? product.price * (1 - product.discount) : product.price,\r\n      amount: product.discount\r\n        ? product.price * (1 - product.discount) * product.quantity\r\n        : product.price * product.quantity,\r\n    };\r\n    dispatch({\r\n      type: ADD_CART_ITEM_REQUEST,\r\n      product: discountedProduct,\r\n    });\r\n    dispatch({ type: INITIATE_QUANTITY_REQUEST, data: product });\r\n  };\r\n\r\n  const onWindowScroll = () => {\r\n    window.scrollTo({ top: 0 });\r\n  };\r\n\r\n  const onClickPayment = () => {\r\n    if (isLoggedIn) {\r\n      dispatch({ type: CLEAR_CART_REQUEST });\r\n\r\n      const originData = {\r\n        UserId: session.id,\r\n        UserName: session.name,\r\n        ProductId: product.id,\r\n        ShopId: product.Shop.id,\r\n        price: product.discount\r\n          ? product.price * (100 - product.discount) * 0.01 * product.quantity\r\n          : product.price * product.quantity,\r\n        quantity: product.quantity,\r\n        ShopName: product.Shop.name,\r\n        ProductTitle: product.title,\r\n      };\r\n\r\n      const custom_data = JSON.stringify([originData]);\r\n\r\n      console.log(process.env.IAM_PORT_KEY);\r\n\r\n      onWindowScroll();\r\n      if (IMP !== null) {\r\n        IMP.init(process.env.IAM_PORTKEY);\r\n        const today = Date.now();\r\n        IMP.request_pay(\r\n          {\r\n            pay_method: 'card',\r\n            name: product.title,\r\n            Merchant_uid: 'uid' + today,\r\n            amount: product.Discount\r\n              ? product.price * (100 - product.Discount.rate) * 0.01 * product.quantity\r\n              : product.price * product.quantity,\r\n            custom_data,\r\n          },\r\n          callback,\r\n        );\r\n      }\r\n    } else {\r\n      onChangeToggleModal();\r\n    }\r\n  };\r\n\r\n  const callback = async (response) => {\r\n    const { success, error_msg } = response;\r\n    if (success) {\r\n      axios\r\n        // .post(`${process.env.hostIp}/payments/complete/${product.id}/${product.Shop.id}/${session.id}`, { data: response })\r\n        .post(`http://127.0.0.1:3065/payments/complete`, { data: response })\r\n        .then((response) => {\r\n          dispatch({ type: PAYMENT_SUCCESS }, { data: response });\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n          dispatch({ type: PAYMENT_FAILURE }, { error: e });\r\n        });\r\n    } else {\r\n      alert(`결제 실패: ${error_msg}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal header={null} visible={toggleModal} onCancel={onChangeToggleModal} footer={null}>\r\n        로그인을 하셔야합니다.\r\n      </Modal>\r\n      <Card\r\n        key={product.id}\r\n        title={\r\n          <>\r\n            {product.Discount ? (\r\n              <Space>\r\n                <Typography.Title level={3}>{product.title}</Typography.Title>{' '}\r\n                <Tag color={'magenta'}>-{product.Discount.rate}%</Tag>\r\n              </Space>\r\n            ) : (\r\n              <h1>{product.title}</h1>\r\n            )}\r\n          </>\r\n        }\r\n        actions={[\r\n          <div onClick={onClickPayment}>즉시 구매</div>,\r\n          <div onClick={onClickAddCart}>장바구니</div>,\r\n        ]}\r\n        cover={\r\n          <img\r\n            style={{ border: `1px solid #EFF2F5` }}\r\n            src={product.Images[0] && `http://127.0.0.1:3065/uploads/${product.Images[0].url}`}\r\n          />\r\n        }\r\n        hoverable\r\n      >\r\n        <Card.Meta\r\n          description={\r\n            <>\r\n              <Row gutter={[16, 16]} align={'middle'} justify={'end'}>\r\n                <Col md={16} xs={16} style={{ display: 'inline-block' }}>\r\n                  {product.Discount ? (\r\n                    <>\r\n                      <h5>가격</h5>\r\n                      <Space align=\"center\">\r\n                        <h1 style={{ color: '#FF5733', fontWeight: 'bold' }}>\r\n                          <NumberFormat\r\n                            value={product.price * (100 - product.Discount.rate) * 0.01}\r\n                            displayType={'text'}\r\n                            thousandSeparator={true}\r\n                          />\r\n                          원\r\n                        </h1>\r\n                        <Tag>\r\n                          <NumberFormat\r\n                            value={product.price}\r\n                            displayType={'text'}\r\n                            thousandSeparator={true}\r\n                          />\r\n                          원\r\n                        </Tag>\r\n                        {'  '}\r\n                      </Space>\r\n                    </>\r\n                  ) : (\r\n                    <div>\r\n                      <h5>가격</h5>\r\n                      <h1>\r\n                        <NumberFormat\r\n                          value={product.price}\r\n                          displayType={'text'}\r\n                          thousandSeparator={true}\r\n                        />\r\n                        원\r\n                      </h1>\r\n                    </div>\r\n                  )}{' '}\r\n                </Col>\r\n                <Col md={8} xs={8}>\r\n                  <AmountToggle id={product.id} quantity={product.quantity} />\r\n                </Col>\r\n              </Row>\r\n              <Divider />\r\n              <Row align={'middle'} justify={'center'}>\r\n                <Col span={8} xs={8}>\r\n                  <div>총 주문금액</div>\r\n                </Col>\r\n                <Col span={16} xs={16}>\r\n                  <div style={{ textAlign: 'right' }}>\r\n                    <h1>\r\n                      <NumberFormat\r\n                        value={\r\n                          product.Discount\r\n                            ? product.price *\r\n                              (100 - product.Discount.rate) *\r\n                              0.01 *\r\n                              product.quantity\r\n                            : product.price * product.quantity\r\n                        }\r\n                        displayType={'text'}\r\n                        thousandSeparator={true}\r\n                      />\r\n                      원\r\n                    </h1>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </>\r\n          }\r\n        />\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductCard;\r\n"]},"metadata":{},"sourceType":"module"}