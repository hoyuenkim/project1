{"ast":null,"code":"import { List, Button, Space, Modal, Avatar, Card, Empty, Checkbox, Popconfirm, Affix, message, Tag } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { ADMIN_PRODUCTS_REQUEST, CHECK_ALL_PRODUCTS_SUCCESS, CHECK_PRODUCT_SUCCESS, DELETE_PRODUCT_REQUEST } from \"../../../../../reducers/shop\";\nimport PropTypes from \"prop-types\";\nimport EditProduct from \"../../../../../components/Forms/EditProduct\";\nimport DiscountForm from \"../../../../../components/Forms/DiscountForm\";\nimport MenuNavibarLayout from \"../../../../../components/Layout/MenuNavibarLayout \";\nimport NumberFormat from \"react-number-format\";\nimport { PAGE_CHANGE_SUCCESS } from \"../../../../../reducers/admin\";\nimport Link from \"next/link\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nconst Console = () => {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const {\n    session\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    dispatch({\n      type: PAGE_CHANGE_SUCCESS,\n      data: \"admin\"\n    });\n  }, []);\n\n  if (!session || session.division === false) {\n    return router.back();\n  } else {\n    useEffect(() => {\n      dispatch({\n        type: ADMIN_PRODUCTS_REQUEST,\n        ShopId: session.Shops[0].id\n      });\n    }, []);\n  }\n\n  message.config({\n    top: 100\n  });\n  const {\n    0: edit,\n    1: setEdit\n  } = useState(false);\n  const {\n    0: discount,\n    1: setDiscount\n  } = useState(false);\n  const {\n    0: product,\n    1: setProduct\n  } = useState();\n  const {\n    0: category,\n    1: setCategory\n  } = useState(0);\n\n  const onToggleEdit = item => {\n    setProduct(item);\n    setEdit(prev => !prev);\n  };\n\n  const onClickCheckBox = ({\n    id\n  }) => {\n    dispatch({\n      type: CHECK_PRODUCT_SUCCESS,\n      id\n    });\n  };\n\n  const onClickCheckAllBoxs = e => {\n    dispatch({\n      type: CHECK_ALL_PRODUCTS_SUCCESS,\n      checked: e.target.checked\n    });\n  };\n\n  const onToggleDiscount = () => {\n    const checked = products.filter(product => product.checked == true);\n\n    if (checked.length == 0) {\n      message.error(\"한가지 제품이라도 선택해주세요\");\n    } else {\n      setDiscount(prev => !prev);\n    }\n  };\n\n  const onToggleOneDiscount = item => {\n    setProduct(item);\n    setDiscount(prev => !prev);\n  };\n\n  const {\n    products,\n    categories,\n    originProducts\n  } = useSelector(state => state.shop);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Affix, {\n      children: /*#__PURE__*/_jsx(MenuNavibarLayout, {\n        type: \"admin\",\n        categories: categories,\n        setCategory: setCategory,\n        ShopId: session.Shops[0].id,\n        products: products,\n        originProducts: originProducts\n      })\n    }), /*#__PURE__*/_jsxs(Card, {\n      title: /*#__PURE__*/_jsxs(Space, {\n        children: [/*#__PURE__*/_jsx(Link, {\n          href: \"/shop/admin/product/add\",\n          children: /*#__PURE__*/_jsx(Button, {\n            children: \"\\uC0C1\\uD488\\uCD94\\uAC00\"\n          })\n        }), /*#__PURE__*/_jsx(Button, {\n          type: \"primary\",\n          onClick: onToggleDiscount,\n          children: \"\\uC120\\uD0DD\\uD560\\uC778\"\n        })]\n      }),\n      extra: /*#__PURE__*/_jsx(Checkbox, {\n        onChange: onClickCheckAllBoxs,\n        children: \"\\uC804\\uCCB4\\uC120\\uD0DD\"\n      }),\n      children: [discount && /*#__PURE__*/_jsx(Modal, {\n        title: \"세일\",\n        visible: discount,\n        onCancel: () => {\n          setDiscount(false);\n        },\n        footer: null,\n        children: /*#__PURE__*/_jsx(DiscountForm, {\n          products: products,\n          product: product,\n          setProduct: setProduct,\n          setDiscount: setDiscount,\n          category: category,\n          ShopId: session.Shops[0].id\n        })\n      }), edit && /*#__PURE__*/_jsx(Modal, {\n        title: \"수정하기\",\n        visible: edit,\n        onCancel: () => {\n          setEdit(false);\n          setProduct(null);\n        },\n        footer: null,\n        children: /*#__PURE__*/_jsx(EditProduct, {\n          product: product,\n          setEdit: setEdit,\n          setProduct: setProduct,\n          categories: categories\n        })\n      }), products ? /*#__PURE__*/_jsx(List, {\n        itemLayout: \"horizontal\",\n        dataSource: products,\n        renderItem: item => {\n          return /*#__PURE__*/_jsx(_Fragment, {\n            children: /*#__PURE__*/_jsx(List.Item, {\n              children: /*#__PURE__*/_jsx(Card, {\n                style: {\n                  width: \"100%\"\n                },\n                actions: [/*#__PURE__*/_jsx(\"div\", {\n                  onClick: () => onToggleOneDiscount(item),\n                  children: \"\\uD560\\uC778\"\n                }), /*#__PURE__*/_jsx(\"div\", {\n                  onClick: () => onToggleEdit(item),\n                  children: \"\\uC218\\uC815\"\n                }), /*#__PURE__*/_jsx(Popconfirm, {\n                  title: `${item.title}을 정말로 삭제하시겠습니까?`,\n                  onConfirm: () => dispatch({\n                    type: DELETE_PRODUCT_REQUEST,\n                    id: item.id\n                  }),\n                  onCancel: () => console.log(\"cancel\"),\n                  okText: \"Yes\",\n                  cancelText: \"No\",\n                  children: /*#__PURE__*/_jsx(\"div\", {\n                    children: \"\\uC0AD\\uC81C\"\n                  })\n                })],\n                extra: /*#__PURE__*/_jsx(Checkbox, {\n                  checked: item.checked,\n                  onClick: () => onClickCheckBox(item)\n                }),\n                title: item.title,\n                children: /*#__PURE__*/_jsx(List.Item.Meta, {\n                  avatar: /*#__PURE__*/_jsx(Avatar, {\n                    src: item.Images[0] && `${process.env.BACKEND_IP}/uploads/${item.Images[0].url}`,\n                    shape: \"square\",\n                    size: \"large\"\n                  }),\n                  description: /*#__PURE__*/_jsxs(_Fragment, {\n                    children: [/*#__PURE__*/_jsx(\"p\", {\n                      children: !item.Discount ? /*#__PURE__*/_jsxs(Space, {\n                        direction: \"horizontal\",\n                        align: \"start\",\n                        children: [/*#__PURE__*/_jsx(Tag, {\n                          children: \"\\uAC00\\uACA9\"\n                        }), /*#__PURE__*/_jsx(NumberFormat, {\n                          value: item.price,\n                          displayType: \"text\",\n                          thousandSeparator: true\n                        }), \"\\uC6D0\"]\n                      }) : /*#__PURE__*/_jsxs(Space, {\n                        direction: \"horizontal\",\n                        align: \"start\",\n                        children: [/*#__PURE__*/_jsxs(Tag, {\n                          color: \"magenta\",\n                          children: [\"-\", item.Discount.rate, \"%\"]\n                        }), /*#__PURE__*/_jsx(NumberFormat, {\n                          value: item.price * (100 - item.Discount.rate) * 0.01,\n                          displayType: \"text\",\n                          thousandSeparator: true\n                        }), \"\\uC6D0\"]\n                      })\n                    }), /*#__PURE__*/_jsxs(\"p\", {\n                      children: [/*#__PURE__*/_jsx(Tag, {\n                        children: \"\\uC0C1\\uC138\"\n                      }), item.description]\n                    })]\n                  })\n                })\n              })\n            }, item.id)\n          });\n        }\n      }) : /*#__PURE__*/_jsx(_Fragment, {\n        children: /*#__PURE__*/_jsx(Empty, {})\n      })]\n    })]\n  });\n};\n\nConsole.protoType = {\n  productList: PropTypes.object.isRequired\n};\nexport default Console;","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/dev/project1/frontend/pages/shop/admin/[id]/product/index.js"],"names":["List","Button","Space","Modal","Avatar","Card","Empty","Checkbox","Popconfirm","Affix","message","Tag","useDispatch","useSelector","useEffect","useState","useRouter","ADMIN_PRODUCTS_REQUEST","CHECK_ALL_PRODUCTS_SUCCESS","CHECK_PRODUCT_SUCCESS","DELETE_PRODUCT_REQUEST","PropTypes","EditProduct","DiscountForm","MenuNavibarLayout","NumberFormat","PAGE_CHANGE_SUCCESS","Link","Console","dispatch","router","session","state","user","type","data","division","back","ShopId","Shops","id","config","top","edit","setEdit","discount","setDiscount","product","setProduct","category","setCategory","onToggleEdit","item","prev","onClickCheckBox","onClickCheckAllBoxs","e","checked","target","onToggleDiscount","products","filter","length","error","onToggleOneDiscount","categories","originProducts","shop","width","title","console","log","Images","process","env","BACKEND_IP","url","Discount","price","rate","description","protoType","productList","object","isRequired"],"mappings":"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","sourcesContent":["import {\n  List,\n  Button,\n  Space,\n  Modal,\n  Avatar,\n  Card,\n  Empty,\n  Checkbox,\n  Popconfirm,\n  Affix,\n  message,\n  Tag,\n} from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport {\n  ADMIN_PRODUCTS_REQUEST,\n  CHECK_ALL_PRODUCTS_SUCCESS,\n  CHECK_PRODUCT_SUCCESS,\n  DELETE_PRODUCT_REQUEST,\n} from \"../../../../../reducers/shop\";\nimport PropTypes from \"prop-types\";\n\nimport EditProduct from \"../../../../../components/Forms/EditProduct\";\nimport DiscountForm from \"../../../../../components/Forms/DiscountForm\";\nimport MenuNavibarLayout from \"../../../../../components/Layout/MenuNavibarLayout \";\nimport NumberFormat from \"react-number-format\";\nimport { PAGE_CHANGE_SUCCESS } from \"../../../../../reducers/admin\";\n\nimport Link from \"next/link\";\n\nconst Console = () => {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const { session } = useSelector((state) => state.user);\n  useEffect(() => {\n    dispatch({ type: PAGE_CHANGE_SUCCESS, data: \"admin\" });\n  }, []);\n\n  if (!session || session.division === false) {\n    return router.back();\n  } else {\n    useEffect(() => {\n      dispatch({ type: ADMIN_PRODUCTS_REQUEST, ShopId: session.Shops[0].id });\n    }, []);\n  }\n\n  message.config({ top: 100 });\n\n  const [edit, setEdit] = useState(false);\n  const [discount, setDiscount] = useState(false);\n  const [product, setProduct] = useState();\n  const [category, setCategory] = useState(0);\n\n  const onToggleEdit = (item) => {\n    setProduct(item);\n    setEdit((prev) => !prev);\n  };\n\n  const onClickCheckBox = ({ id }) => {\n    dispatch({ type: CHECK_PRODUCT_SUCCESS, id });\n  };\n\n  const onClickCheckAllBoxs = (e) => {\n    dispatch({ type: CHECK_ALL_PRODUCTS_SUCCESS, checked: e.target.checked });\n  };\n\n  const onToggleDiscount = () => {\n    const checked = products.filter((product) => product.checked == true);\n    if (checked.length == 0) {\n      message.error(\"한가지 제품이라도 선택해주세요\");\n    } else {\n      setDiscount((prev) => !prev);\n    }\n  };\n\n  const onToggleOneDiscount = (item) => {\n    setProduct(item);\n    setDiscount((prev) => !prev);\n  };\n\n  const { products, categories, originProducts } = useSelector((state) => state.shop);\n\n  return (\n    <>\n      <Affix>\n        <MenuNavibarLayout\n          type={\"admin\"}\n          categories={categories}\n          setCategory={setCategory}\n          ShopId={session.Shops[0].id}\n          products={products}\n          originProducts={originProducts}\n        />\n      </Affix>\n      <Card\n        title={\n          <Space>\n            <Link href={\"/shop/admin/product/add\"}>\n              <Button>상품추가</Button>\n            </Link>\n            <Button type=\"primary\" onClick={onToggleDiscount}>\n              선택할인\n            </Button>\n          </Space>\n        }\n        extra={<Checkbox onChange={onClickCheckAllBoxs}>전체선택</Checkbox>}\n      >\n        {discount && (\n          <Modal\n            title={\"세일\"}\n            visible={discount}\n            onCancel={() => {\n              setDiscount(false);\n            }}\n            footer={null}\n          >\n            <DiscountForm\n              products={products}\n              product={product}\n              setProduct={setProduct}\n              setDiscount={setDiscount}\n              category={category}\n              ShopId={session.Shops[0].id}\n            />\n          </Modal>\n        )}\n        {edit && (\n          <Modal\n            title={\"수정하기\"}\n            visible={edit}\n            onCancel={() => {\n              setEdit(false);\n              setProduct(null);\n            }}\n            footer={null}\n          >\n            <EditProduct\n              product={product}\n              setEdit={setEdit}\n              setProduct={setProduct}\n              categories={categories}\n            />\n          </Modal>\n        )}\n        {products ? (\n          <List\n            itemLayout={\"horizontal\"}\n            dataSource={products}\n            renderItem={(item) => {\n              return (\n                <>\n                  <List.Item key={item.id}>\n                    <Card\n                      style={{ width: \"100%\" }}\n                      actions={[\n                        <div onClick={() => onToggleOneDiscount(item)}>할인</div>,\n                        <div onClick={() => onToggleEdit(item)}>수정</div>,\n                        <Popconfirm\n                          title={`${item.title}을 정말로 삭제하시겠습니까?`}\n                          onConfirm={() =>\n                            dispatch({\n                              type: DELETE_PRODUCT_REQUEST,\n                              id: item.id,\n                            })\n                          }\n                          onCancel={() => console.log(\"cancel\")}\n                          okText=\"Yes\"\n                          cancelText=\"No\"\n                        >\n                          <div>삭제</div>\n                        </Popconfirm>,\n                      ]}\n                      extra={\n                        <Checkbox checked={item.checked} onClick={() => onClickCheckBox(item)} />\n                      }\n                      title={item.title}\n                    >\n                      <List.Item.Meta\n                        avatar={\n                          <Avatar\n                            src={\n                              item.Images[0] &&\n                              `${process.env.BACKEND_IP}/uploads/${item.Images[0].url}`\n                            }\n                            shape={\"square\"}\n                            size={\"large\"}\n                          />\n                        }\n                        description={\n                          <>\n                            <p>\n                              {!item.Discount ? (\n                                <Space direction={\"horizontal\"} align={\"start\"}>\n                                  <Tag>가격</Tag>\n                                  <NumberFormat\n                                    value={item.price}\n                                    displayType={\"text\"}\n                                    thousandSeparator={true}\n                                  />\n                                  원\n                                </Space>\n                              ) : (\n                                <Space direction={\"horizontal\"} align={\"start\"}>\n                                  <Tag color={\"magenta\"}>-{item.Discount.rate}%</Tag>\n                                  <NumberFormat\n                                    value={item.price * (100 - item.Discount.rate) * 0.01}\n                                    displayType={\"text\"}\n                                    thousandSeparator={true}\n                                  />\n                                  원\n                                </Space>\n                              )}\n                            </p>\n                            <p>\n                              <Tag>상세</Tag>\n                              {item.description}\n                            </p>\n                          </>\n                        }\n                      />\n                    </Card>\n                  </List.Item>\n                </>\n              );\n            }}\n          />\n        ) : (\n          <>\n            <Empty />\n          </>\n        )}\n      </Card>\n    </>\n  );\n};\n\nConsole.protoType = {\n  productList: PropTypes.object.isRequired,\n};\n\nexport default Console;\n"]},"metadata":{},"sourceType":"module"}