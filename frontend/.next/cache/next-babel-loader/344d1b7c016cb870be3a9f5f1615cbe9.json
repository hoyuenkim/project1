{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hoyuen\\\\Documents\\\\project\\\\project1\\\\frontend\\\\pages\\\\_app.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Head from \"next/head\";\nimport wrapper from \"../store/configureStore\";\nimport withReduxSaga from \"next-redux-saga\";\nimport CentralAppLayout from \"../components/Layout/CentralAppLayout\";\nimport NavibarLayout from \"../components/Layout/NavibarLayout\";\nimport useSize from \"@react-hook/size\";\nimport { useEffect, useCallback, useRef } from \"react\";\nimport { GET_NAVIBAR_SIZE } from \"../reducers/menu\";\nimport { useDispatch } from \"react-redux\";\nimport { Affix } from \"antd\";\n\nconst App = ({\n  Component\n}) => {\n  const dispatch = useDispatch();\n  const target = useRef(null);\n  const [naviHeight, naviWidth] = useSize(target);\n  useEffect(() => {\n    dispatch({\n      type: GET_NAVIBAR_SIZE,\n      data: {\n        naviWidth,\n        naviHeight\n      }\n    });\n  }, [naviHeight, naviWidth]);\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, \"Order\"), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"width=device-width, user-scalable=no\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://cdnjs.cloudflare.com/ajax/libs/antd/4.2.4/antd.compact.css\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }), __jsx(\"script\", {\n    type: \"text/javascript\",\n    src: \"https://code.jquery.com/jquery-1.12.4.min.js\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), __jsx(\"script\", {\n    type: \"text/javascript\",\n    src: \"https://cdn.iamport.kr/js/iamport.payment-1.1.5.js\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }), __jsx(\"link\", {\n    href: \"https://fonts.googleapis.com/css2?family=Noto+Sans+KR&display=swap\",\n    rel: \"stylesheet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), __jsx(\"script\", {\n    src: \"http://dmaps.daum.net/map_js_init/postcode.v2.js?autoload=false\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), __jsx(\"style\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, `body {\n            background-color: #EFF2F5!important;\n            font-family: 'Noto Sans KR', sans-serif;\n          }`)), __jsx(CentralAppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    ref: target,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, __jsx(Affix, {\n    offset: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, __jsx(NavibarLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }))), __jsx(Component, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  })));\n}; // export const getServerSideProps = wrapper.getServerSideProps(async (context) => {\n//   context.store.dispatch({ type: GET_NAVIBAR_SIZE, data: { naviHeight, naviWidth } });\n//   context.store.dispatch(END);\n//   await context.store.sagaTask.toPromise();\n// });\n\n\nexport default wrapper.withRedux(withReduxSaga(App));","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/pages/_app.js"],"names":["React","Head","wrapper","withReduxSaga","CentralAppLayout","NavibarLayout","useSize","useEffect","useCallback","useRef","GET_NAVIBAR_SIZE","useDispatch","Affix","App","Component","dispatch","target","naviHeight","naviWidth","type","data","withRedux"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,MAAjC,QAA+C,OAA/C;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,KAAT,QAAsB,MAAtB;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAC7B,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,MAAM,GAAGP,MAAM,CAAC,IAAD,CAArB;AACA,QAAM,CAACQ,UAAD,EAAaC,SAAb,IAA0BZ,OAAO,CAACU,MAAD,CAAvC;AACAT,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAET,gBAAR;AAA0BU,MAAAA,IAAI,EAAE;AAAEF,QAAAA,SAAF;AAAaD,QAAAA;AAAb;AAAhC,KAAD,CAAR;AACD,GAFQ,EAEN,CAACA,UAAD,EAAaC,SAAb,CAFM,CAAT;AAGA,SACE,4BACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAM,IAAA,IAAI,EAAC,UAAX;AAAsB,IAAA,OAAO,EAAC,sCAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AACE,IAAA,GAAG,EAAC,YADN;AAEE,IAAA,IAAI,EAAC,oEAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAOE;AAAQ,IAAA,IAAI,EAAC,iBAAb;AAA+B,IAAA,GAAG,EAAC,8CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE;AACE,IAAA,IAAI,EAAC,iBADP;AAEE,IAAA,GAAG,EAAC,oDAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAYE;AACE,IAAA,IAAI,EAAC,oEADP;AAEE,IAAA,GAAG,EAAC,YAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,EAgBE;AAAQ,IAAA,GAAG,EAAC,iEAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,EAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;;;YADJ,CAjBF,CADF,EAyBE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEF,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,MAAM,EAAE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,EAME,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAzBF,CADF;AAoCD,CA3CD,C,CA6CA;AACA;AACA;AACA;AACA;;;AAEA,eAAed,OAAO,CAACmB,SAAR,CAAkBlB,aAAa,CAACU,GAAD,CAA/B,CAAf","sourcesContent":["import React from \"react\";\r\nimport Head from \"next/head\";\r\nimport wrapper from \"../store/configureStore\";\r\nimport withReduxSaga from \"next-redux-saga\";\r\nimport CentralAppLayout from \"../components/Layout/CentralAppLayout\";\r\nimport NavibarLayout from \"../components/Layout/NavibarLayout\";\r\nimport useSize from \"@react-hook/size\";\r\nimport { useEffect, useCallback, useRef } from \"react\";\r\nimport { GET_NAVIBAR_SIZE } from \"../reducers/menu\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Affix } from \"antd\";\r\n\r\nconst App = ({ Component }) => {\r\n  const dispatch = useDispatch();\r\n  const target = useRef(null);\r\n  const [naviHeight, naviWidth] = useSize(target);\r\n  useEffect(() => {\r\n    dispatch({ type: GET_NAVIBAR_SIZE, data: { naviWidth, naviHeight } });\r\n  }, [naviHeight, naviWidth]);\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>Order</title>\r\n        <meta name=\"viewport\" content=\"width=device-width, user-scalable=no\" />\r\n        <link\r\n          rel=\"stylesheet\"\r\n          href=\"https://cdnjs.cloudflare.com/ajax/libs/antd/4.2.4/antd.compact.css\"\r\n        />\r\n        <script type=\"text/javascript\" src=\"https://code.jquery.com/jquery-1.12.4.min.js\"></script>\r\n        <script\r\n          type=\"text/javascript\"\r\n          src=\"https://cdn.iamport.kr/js/iamport.payment-1.1.5.js\"\r\n        ></script>\r\n        <link\r\n          href=\"https://fonts.googleapis.com/css2?family=Noto+Sans+KR&display=swap\"\r\n          rel=\"stylesheet\"\r\n        />\r\n        <script src=\"http://dmaps.daum.net/map_js_init/postcode.v2.js?autoload=false\"></script>\r\n        <style>\r\n          {`body {\r\n            background-color: #EFF2F5!important;\r\n            font-family: 'Noto Sans KR', sans-serif;\r\n          }`}\r\n        </style>\r\n      </Head>\r\n      <CentralAppLayout>\r\n        <div ref={target}>\r\n          <Affix offset={\"top\"}>\r\n            <NavibarLayout />\r\n          </Affix>\r\n        </div>\r\n        <Component />\r\n      </CentralAppLayout>\r\n    </>\r\n  );\r\n};\r\n\r\n// export const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n//   context.store.dispatch({ type: GET_NAVIBAR_SIZE, data: { naviHeight, naviWidth } });\r\n//   context.store.dispatch(END);\r\n//   await context.store.sagaTask.toPromise();\r\n// });\r\n\r\nexport default wrapper.withRedux(withReduxSaga(App));\r\n"]},"metadata":{},"sourceType":"module"}