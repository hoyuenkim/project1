{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\hoyuen\\\\Documents\\\\project\\\\project1\\\\frontend\\\\pages\\\\shop\\\\admin\\\\product\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { List, Button, Modal, Avatar, Card } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState, useCallback } from 'react';\nimport { useRouter } from 'next/router';\nimport { ADMIN_PRODUCTS_REQUEST, DELETE_PRODUCT_REQUEST } from '../../../../reducers/shop';\nimport PropTypes from 'prop-types';\nimport EditProduct from '../../../../components/Generalui/EditProduct';\n\nvar Console = function Console() {\n  _s();\n\n  var dispatch = useDispatch();\n  var router = useRouter();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      session = _useSelector.session;\n\n  if (!session || session.division === false) {\n    return router.back();\n  } else {\n    useEffect(function () {\n      dispatch({\n        type: ADMIN_PRODUCTS_REQUEST,\n        ShopId: session.Shops[0].id\n      });\n    }, []);\n  }\n\n  var _useState = useState(false),\n      edit = _useState[0],\n      setEdit = _useState[1];\n\n  var _useState2 = useState({}),\n      product = _useState2[0],\n      setProduct = _useState2[1];\n\n  var onToggleEdit = function onToggleEdit(item) {\n    W;\n    setEdit(function (prev) {\n      return !prev;\n    });\n    setProduct(item);\n  };\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.shop;\n  }),\n      products = _useSelector2.products;\n\n  return __jsx(React.Fragment, null, __jsx(Modal, {\n    title: '수정하기',\n    visible: edit,\n    onCancel: function onCancel() {\n      return setEdit(false);\n    },\n    footer: null,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, __jsx(EditProduct, {\n    item: product,\n    setEdit: setEdit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  })), __jsx(List, {\n    itemLayout: 'horizontal',\n    dataSource: products,\n    renderItem: function renderItem(item) {\n      return __jsx(React.Fragment, null, __jsx(List.Item, {\n        key: item.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }\n      }, __jsx(Card, {\n        style: {\n          width: '100%'\n        },\n        actions: [__jsx(\"div\", {\n          onClick: function onClick() {\n            return onToggleEdit(item);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }\n        }, \"\\uC218\\uC815\"), // 수정을 클릭하면 Modal State가 바뀌어서 모달열림\n        __jsx(\"div\", {\n          onClick: function onClick() {\n            var flag = confirm(\"\\uC774 \\uC81C\\uD488\\uC744 \\uC815\\uB9D0\\uB85C \\uC0AD\\uC81C\\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\");\n\n            if (!flag) {\n              return false;\n            } else {\n              dispatch({\n                type: DELETE_PRODUCT_REQUEST,\n                id: item.id\n              });\n            }\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }\n        }, \"\\uC0AD\\uC81C\")],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }\n      }, __jsx(List.Item.Meta, {\n        avatar: __jsx(Avatar, {\n          src: \"http://127.0.0.1:3065/uploads/\".concat(item.Images[0].url),\n          shape: 'square',\n          size: 'large',\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 23\n          }\n        }),\n        title: item.title,\n        description: __jsx(React.Fragment, null, __jsx(\"p\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }\n        }, item.price, \",\", item.description)),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 19\n        }\n      }))));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(Console, \"GgBGQzkS0/n84HGC+6hefVekF9A=\", false, function () {\n  return [useDispatch, useRouter, useSelector, useSelector];\n});\n\n_c = Console;\nConsole.protoType = {\n  productList: PropTypes.object.isRequired\n};\nexport default Console;\n\nvar _c;\n\n$RefreshReg$(_c, \"Console\");","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/pages/shop/admin/product/index.js"],"names":["List","Button","Modal","Avatar","Card","useDispatch","useSelector","useEffect","useState","useCallback","useRouter","ADMIN_PRODUCTS_REQUEST","DELETE_PRODUCT_REQUEST","PropTypes","EditProduct","Console","dispatch","router","state","user","session","division","back","type","ShopId","Shops","id","edit","setEdit","product","setProduct","onToggleEdit","item","W","prev","shop","products","width","flag","confirm","Images","url","title","price","description","protoType","productList","object","isRequired"],"mappings":"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","sourcesContent":["import { List, Button, Modal, Avatar, Card } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect, useState, useCallback } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport { ADMIN_PRODUCTS_REQUEST, DELETE_PRODUCT_REQUEST } from '../../../../reducers/shop';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport EditProduct from '../../../../components/Generalui/EditProduct';\r\n\r\nconst Console = () => {\r\n  const dispatch = useDispatch();\r\n  const router = useRouter();\r\n  const { session } = useSelector((state) => state.user);\r\n  if (!session || session.division === false) {\r\n    return router.back();\r\n  } else {\r\n    useEffect(() => {\r\n      dispatch({ type: ADMIN_PRODUCTS_REQUEST, ShopId: session.Shops[0].id });\r\n    }, []);\r\n  }\r\n\r\n  const [edit, setEdit] = useState(false);\r\n  const [product, setProduct] = useState({});\r\n\r\n  const onToggleEdit = (item) => {W\r\n    setEdit((prev) => !prev);\r\n    setProduct(item);\r\n  };\r\n\r\n  const { products } = useSelector((state) => state.shop);\r\n\r\n  return (\r\n    <>\r\n      <Modal title={'수정하기'} visible={edit} onCancel={() => setEdit(false)} footer={null}>\r\n        <EditProduct item={product} setEdit={setEdit} />\r\n      </Modal>\r\n      <List\r\n        itemLayout={'horizontal'}\r\n        dataSource={products}\r\n        renderItem={(item) => {\r\n          return (\r\n            <>\r\n              <List.Item key={item.id}>\r\n                <Card\r\n                  style={{ width: '100%' }}\r\n                  actions={[\r\n                    <div onClick={() => onToggleEdit(item)}>수정</div>, // 수정을 클릭하면 Modal State가 바뀌어서 모달열림\r\n                    <div\r\n                      onClick={() => {\r\n                        const flag = confirm(`이 제품을 정말로 삭제하시겠습니까?`);\r\n                        if (!flag) {\r\n                          return false;\r\n                        } else {\r\n                          dispatch({ type: DELETE_PRODUCT_REQUEST, id: item.id });\r\n                        }\r\n                      }}\r\n                    >\r\n                      삭제\r\n                    </div>,\r\n                  ]}\r\n                >\r\n                  <List.Item.Meta\r\n                    avatar={\r\n                      <Avatar\r\n                        src={`http://127.0.0.1:3065/uploads/${item.Images[0].url}`}\r\n                        shape={'square'}\r\n                        size={'large'}\r\n                      />\r\n                    }\r\n                    title={item.title}\r\n                    description={\r\n                      <>\r\n                        <p>\r\n                          {item.price},{item.description}\r\n                        </p>\r\n                      </>\r\n                    }\r\n                  />\r\n                </Card>\r\n              </List.Item>\r\n            </>\r\n          );\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nConsole.protoType = {\r\n  productList: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Console;\r\n"]},"metadata":{},"sourceType":"module"}