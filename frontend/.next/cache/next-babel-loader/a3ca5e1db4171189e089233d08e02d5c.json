{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\hoyuen\\\\Documents\\\\project\\\\project1\\\\frontend\\\\pages\\\\user\\\\signup.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Card, Button, Avatar, Form, Input } from \"antd\";\nimport { LeftOutlined } from \"@ant-design/icons\";\nimport { useState, useCallback, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useInput } from \"../../components/CustomHooks\";\nimport CentralAppLayout from \"../../components/CenteralAppLayout\";\nimport NavibarLayout from \"../../components/NavibarLayout\";\nimport { SIGN_UP_REQUEST } from \"../../reducers/user\";\nimport Router, { withRouter } from \"next/router\";\n\nvar Signup = function Signup() {\n  var _useInput = useInput(),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      email = _useInput2[0],\n      onChangeEmail = _useInput2[1];\n\n  var _useInput3 = useInput(),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      password = _useInput4[0],\n      onChangePassword = _useInput4[1];\n\n  var _useState = useState(),\n      passwordCheck = _useState[0],\n      setPasswordCheck = _useState[1];\n\n  var _useState2 = useState(false),\n      passwordError = _useState2[0],\n      setPasswordError = _useState2[1];\n\n  var _useState3 = useState(false),\n      checkbox = _useState3[0],\n      onChangeCheckbox = _useState3[1];\n\n  var dispatch = useDispatch();\n\n  var onChangePasswordCheck = function onChangePasswordCheck(e) {\n    setPasswordCheck(e.target.value);\n    setPasswordError(password != e.target.value);\n  };\n\n  var onSubmitForm = useCallback(function (e) {\n    // e.preventDefault();\n    console.log(email, password);\n    dispatch({\n      type: SIGN_UP_REQUEST,\n      data: {\n        username: email,\n        password: password\n      }\n    });\n  }, [email, password, passwordCheck]);\n  return __jsx(NavibarLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, __jsx(CentralAppLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, __jsx(Form, {\n    onFinish: onSubmitForm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, __jsx(Card, {\n    title: __jsx(\"div\", {\n      onClick: function onClick() {\n        return Router.back();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, __jsx(LeftOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }\n    }))),\n    style: {\n      height: \"100%\"\n    },\n    actions: [],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, __jsx(Form.Item, {\n    name: \"email\",\n    label: \"Email\",\n    rules: [{\n      type: \"email\",\n      message: \"올바른 이메일 형식을 입력해주세요!\"\n    }, {\n      required: true,\n      message: \"이메일를 입력해 주세요!\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, __jsx(Input, {\n    value: email,\n    onChange: onChangeEmail,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  })), __jsx(Form.Item, {\n    label: \"Password\",\n    name: \"password\",\n    rules: [{\n      required: true,\n      message: \"비밀번호를 입력해 주세요\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, __jsx(Input.Password, {\n    value: password,\n    onChange: onChangePassword,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  })), __jsx(Form.Item, {\n    label: \"Password check\",\n    name: \"passwordCheck\",\n    rules: [{\n      required: true,\n      message: \"비밀번호를 입력해 주세요\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, __jsx(Input.Password, {\n    value: passwordCheck,\n    onChange: onChangePasswordCheck,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  })), __jsx(Button, {\n    htmlType: \"submit\",\n    type: \"primary\",\n    style: {\n      width: \"100%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\")))));\n};\n\nexport default withRouter(Signup);","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/pages/user/signup.js"],"names":["Card","Button","Avatar","Form","Input","LeftOutlined","useState","useCallback","useEffect","useDispatch","useInput","CentralAppLayout","NavibarLayout","SIGN_UP_REQUEST","Router","withRouter","Signup","email","onChangeEmail","password","onChangePassword","passwordCheck","setPasswordCheck","passwordError","setPasswordError","checkbox","onChangeCheckbox","dispatch","onChangePasswordCheck","e","target","value","onSubmitForm","console","log","type","data","username","back","height","message","required","width"],"mappings":"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","sourcesContent":["import { Card, Button, Avatar, Form, Input } from \"antd\";\r\nimport { LeftOutlined } from \"@ant-design/icons\";\r\nimport { useState, useCallback, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useInput } from \"../../components/CustomHooks\";\r\nimport CentralAppLayout from \"../../components/CenteralAppLayout\";\r\nimport NavibarLayout from \"../../components/NavibarLayout\";\r\nimport { SIGN_UP_REQUEST } from \"../../reducers/user\";\r\nimport Router, { withRouter } from \"next/router\";\r\n\r\nconst Signup = () => {\r\n  const [email, onChangeEmail] = useInput();\r\n  const [password, onChangePassword] = useInput();\r\n  const [passwordCheck, setPasswordCheck] = useState();\r\n  const [passwordError, setPasswordError] = useState(false);\r\n  const [checkbox, onChangeCheckbox] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onChangePasswordCheck = (e) => {\r\n    setPasswordCheck(e.target.value);\r\n    setPasswordError(password != e.target.value);\r\n  };\r\n\r\n  const onSubmitForm = useCallback(\r\n    (e) => {\r\n      // e.preventDefault();\r\n      console.log(email, password);\r\n      dispatch({\r\n        type: SIGN_UP_REQUEST,\r\n        data: {\r\n          username: email,\r\n          password: password,\r\n        },\r\n      });\r\n    },\r\n    [email, password, passwordCheck]\r\n  );\r\n  return (\r\n    <NavibarLayout>\r\n      <CentralAppLayout>\r\n        <Form onFinish={onSubmitForm}>\r\n          <Card\r\n            title={\r\n              <div onClick={() => Router.back()}>\r\n                <a>\r\n                  <LeftOutlined />\r\n                </a>\r\n              </div>\r\n            }\r\n            style={{ height: \"100%\" }}\r\n            actions={[]}\r\n          >\r\n            <Form.Item\r\n              name=\"email\"\r\n              label=\"Email\"\r\n              rules={[\r\n                {\r\n                  type: \"email\",\r\n                  message: \"올바른 이메일 형식을 입력해주세요!\",\r\n                },\r\n                {\r\n                  required: true,\r\n                  message: \"이메일를 입력해 주세요!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input value={email} onChange={onChangeEmail} />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Password\"\r\n              name=\"password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"비밀번호를 입력해 주세요\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input.Password value={password} onChange={onChangePassword} />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Password check\"\r\n              name=\"passwordCheck\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"비밀번호를 입력해 주세요\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input.Password value={passwordCheck} onChange={onChangePasswordCheck} />\r\n            </Form.Item>\r\n            <Button htmlType={\"submit\"} type={\"primary\"} style={{ width: \"100%\" }}>\r\n              회원가입\r\n            </Button>\r\n          </Card>\r\n        </Form>\r\n      </CentralAppLayout>\r\n    </NavibarLayout>\r\n  );\r\n};\r\n\r\nexport default withRouter(Signup);\r\n"]},"metadata":{},"sourceType":"module"}