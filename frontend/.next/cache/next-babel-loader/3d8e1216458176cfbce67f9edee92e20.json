{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\hoyuen\\\\Documents\\\\project\\\\project1\\\\frontend\\\\components\\\\Generalui\\\\SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Input, Form } from 'antd';\nimport { useDispatch } from 'react-redux';\nimport { SEARCH_PRODUCT_SUCCESS } from '../../reducers/menu';\nimport { useInput } from './CustomHooks';\n\nvar SearchBar = function SearchBar(_ref) {\n  _s();\n\n  var setToggleSearch = _ref.setToggleSearch;\n  var dispatch = useDispatch();\n\n  var _useInput = useInput(),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      text = _useInput2[0],\n      onChangeText = _useInput2[1],\n      setText = _useInput2[2];\n\n  var onSearch = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return dispatch({\n                type: SEARCH_PRODUCT_SUCCESS,\n                data: {\n                  text: text\n                }\n              });\n\n            case 2:\n              setText('');\n              setToggleSearch(false);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSearch() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Input.Search, {\n    size: 'large',\n    onChange: onChangeText,\n    enterButton: true,\n    onSearch: onSearch,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 10\n    }\n  });\n};\n\n_s(SearchBar, \"xTbeVqeqqZ9U5Xoy+ecgSZ+DAnI=\", false, function () {\n  return [useDispatch, useInput];\n});\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/components/Generalui/SearchBar.js"],"names":["Input","Form","useDispatch","SEARCH_PRODUCT_SUCCESS","useInput","SearchBar","setToggleSearch","dispatch","text","onChangeText","setText","onSearch","type","data"],"mappings":";;;;;;;;;;AAAA,SAASA,KAAT,EAAgBC,IAAhB,QAA4B,MAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,sBAAT,QAAuC,qBAAvC;AACA,SAASC,QAAT,QAAyB,eAAzB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAyB;AAAA;;AAAA,MAAtBC,eAAsB,QAAtBA,eAAsB;AACzC,MAAMC,QAAQ,GAAGL,WAAW,EAA5B;;AADyC,kBAEHE,QAAQ,EAFL;AAAA;AAAA,MAElCI,IAFkC;AAAA,MAE5BC,YAF4B;AAAA,MAEdC,OAFc;;AAIzC,MAAMC,QAAQ;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACTJ,QAAQ,CAAC;AAAEK,gBAAAA,IAAI,EAAET,sBAAR;AAAgCU,gBAAAA,IAAI,EAAE;AAAEL,kBAAAA,IAAI,EAAJA;AAAF;AAAtC,eAAD,CADC;;AAAA;AAEfE,cAAAA,OAAO,CAAC,EAAD,CAAP;AACAJ,cAAAA,eAAe,CAAC,KAAD,CAAf;;AAHe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAARK,QAAQ;AAAA;AAAA;AAAA,KAAd;;AAMA,SAAO,MAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAE,OAApB;AAA6B,IAAA,QAAQ,EAAEF,YAAvC;AAAqD,IAAA,WAAW,MAAhE;AAAiE,IAAA,QAAQ,EAAEE,QAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAXD;;GAAMN,S;UACaH,W,EACqBE,Q;;;KAFlCC,S;AAaN,eAAeA,SAAf","sourcesContent":["import { Input, Form } from 'antd';\r\nimport { useDispatch } from 'react-redux';\r\nimport { SEARCH_PRODUCT_SUCCESS } from '../../reducers/menu';\r\nimport { useInput } from './CustomHooks';\r\n\r\nconst SearchBar = ({ setToggleSearch }) => {\r\n  const dispatch = useDispatch();\r\n  const [text, onChangeText, setText] = useInput();\r\n\r\n  const onSearch = async () => {\r\n    await dispatch({ type: SEARCH_PRODUCT_SUCCESS, data: { text } });\r\n    setText('');\r\n    setToggleSearch(false);\r\n  };\r\n\r\n  return <Input.Search size={'large'} onChange={onChangeText} enterButton onSearch={onSearch} />;\r\n};\r\n\r\nexport default SearchBar;\r\n"]},"metadata":{},"sourceType":"module"}