{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst initialState = {\n  products: [],\n  naviSize: null,\n  TableId: null\n};\nexport const LOAD_PRODUCTS_REQUEST = 'LOAD_PRODUCTS_REQUEST';\nexport const LOAD_PRODUCTS_SUCCESS = 'LOAD_PRODUCTS_SUCCESS';\nexport const LOAD_PRODUCTS_FAILURE = 'LOAD_PRODUCTS_FAILURE';\nexport const ADD_QUANTITY_REQUEST = 'ADD_QUANTITY_REQUEST';\nexport const ADD_QUANTITY_SUCCESS = 'ADD_QUANTITY_SUCCESS';\nexport const ADD_QUANTITY_FAILURE = 'ADD_QUANTITY_FAILURE';\nexport const SUBSTRACT_QUANTITY_REQUEST = 'SUBSTRACT_QUANTITY_REQUEST';\nexport const SUBSTRACT_QUANTITY_SUCCESS = 'SUBSTRACT_QUANTITY_SUCCESS';\nexport const SUBSTRACT_QUANTITY_FAILURE = 'SUBSTRACT_QUANTITY_FAILURE';\nexport const ADD_PRODUCT_REQUEST = 'ADD_PRODUCT_REQUEST';\nexport const ADD_PRODUCT_SUCCESS = 'ADD_PRODUCT_SUCCESS';\nexport const ADD_PRODUCT_FAILURE = 'ADD_PRODUCT_FAILURE';\nexport const LOAD_CART_REQUEST = 'LOAD_CART_REQUEST';\nexport const LOAD_CART_SUCCESS = 'LOAD_CART_SUCCESS';\nexport const LOAD_CART_FAILURE = 'LOAD_CART_FAILURE';\nexport const INITIATE_QUANTITY_REQUEST = 'INITIATE_QUANTITY_REQUEST';\nexport const GET_NAVIBAR_SIZE = 'GET_NAVIBAR_SIZE';\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_NAVIBAR_SIZE:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          naviSize: action.data\n        });\n      }\n\n    case ADD_QUANTITY_SUCCESS:\n      {\n        const index = state.products.findIndex(product => product.id === action.data.id);\n        const product = state.products[index];\n        let quantity = product.quantity;\n        quantity < 9 ? quantity += 1 : 9;\n        const products = [...state.products];\n        products[index] = _objectSpread(_objectSpread({}, product), {}, {\n          quantity\n        });\n        return _objectSpread(_objectSpread({}, state), {}, {\n          products\n        });\n      }\n\n    case SUBSTRACT_QUANTITY_SUCCESS:\n      {\n        const index = state.products.findIndex(product => product.id === action.data.id);\n        const product = state.products[index];\n        let quantity = product.quantity;\n        quantity > 1 ? quantity -= 1 : 1;\n        const products = [...state.products];\n        products[index] = _objectSpread(_objectSpread({}, product), {}, {\n          quantity\n        });\n        return _objectSpread(_objectSpread({}, state), {}, {\n          products\n        });\n      }\n\n    case LOAD_PRODUCTS_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_PRODUCTS_SUCCESS:\n      {\n        console.log('------------------------------------------------------------');\n        console.log(action.data);\n\n        if (action.data.tableId) {\n          return _objectSpread(_objectSpread({}, state), {}, {\n            products: [...action.data.menus],\n            TableId: action.data.tableId\n          });\n        }\n\n        return _objectSpread(_objectSpread({}, state), {}, {\n          products: [...action.data]\n        });\n      }\n\n    case LOAD_PRODUCTS_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case ADD_PRODUCT_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case ADD_PRODUCT_SUCCESS:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          products: [action.data, ...state.products]\n        });\n      }\n\n    case ADD_PRODUCT_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_CART_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_CART_SUCCESS:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          cart: [...state.cart, action.data]\n        });\n      }\n\n    case LOAD_CART_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case INITIATE_QUANTITY_REQUEST:\n      {\n        const product = action.data;\n\n        const initiated = _objectSpread(_objectSpread({}, product), {}, {\n          quantity: 1\n        });\n\n        const productList = state.products.filter(v => v.id !== product.id);\n        const finalProductList = [...productList, initiated].sort((a, b) => {\n          return a.id - b.id;\n        });\n        return _objectSpread(_objectSpread({}, state), {}, {\n          products: finalProductList\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/reducers/menu.js"],"names":["initialState","products","naviSize","TableId","LOAD_PRODUCTS_REQUEST","LOAD_PRODUCTS_SUCCESS","LOAD_PRODUCTS_FAILURE","ADD_QUANTITY_REQUEST","ADD_QUANTITY_SUCCESS","ADD_QUANTITY_FAILURE","SUBSTRACT_QUANTITY_REQUEST","SUBSTRACT_QUANTITY_SUCCESS","SUBSTRACT_QUANTITY_FAILURE","ADD_PRODUCT_REQUEST","ADD_PRODUCT_SUCCESS","ADD_PRODUCT_FAILURE","LOAD_CART_REQUEST","LOAD_CART_SUCCESS","LOAD_CART_FAILURE","INITIATE_QUANTITY_REQUEST","GET_NAVIBAR_SIZE","reducer","state","action","type","data","index","findIndex","product","id","quantity","console","log","tableId","menus","cart","initiated","productList","filter","v","finalProductList","sort","a","b"],"mappings":"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","sourcesContent":["const initialState = {\r\n  products: [],\r\n  naviSize: null,\r\n  TableId: null,\r\n};\r\n\r\nexport const LOAD_PRODUCTS_REQUEST = 'LOAD_PRODUCTS_REQUEST';\r\nexport const LOAD_PRODUCTS_SUCCESS = 'LOAD_PRODUCTS_SUCCESS';\r\nexport const LOAD_PRODUCTS_FAILURE = 'LOAD_PRODUCTS_FAILURE';\r\n\r\nexport const ADD_QUANTITY_REQUEST = 'ADD_QUANTITY_REQUEST';\r\nexport const ADD_QUANTITY_SUCCESS = 'ADD_QUANTITY_SUCCESS';\r\nexport const ADD_QUANTITY_FAILURE = 'ADD_QUANTITY_FAILURE';\r\n\r\nexport const SUBSTRACT_QUANTITY_REQUEST = 'SUBSTRACT_QUANTITY_REQUEST';\r\nexport const SUBSTRACT_QUANTITY_SUCCESS = 'SUBSTRACT_QUANTITY_SUCCESS';\r\nexport const SUBSTRACT_QUANTITY_FAILURE = 'SUBSTRACT_QUANTITY_FAILURE';\r\n\r\nexport const ADD_PRODUCT_REQUEST = 'ADD_PRODUCT_REQUEST';\r\nexport const ADD_PRODUCT_SUCCESS = 'ADD_PRODUCT_SUCCESS';\r\nexport const ADD_PRODUCT_FAILURE = 'ADD_PRODUCT_FAILURE';\r\n\r\nexport const LOAD_CART_REQUEST = 'LOAD_CART_REQUEST';\r\nexport const LOAD_CART_SUCCESS = 'LOAD_CART_SUCCESS';\r\nexport const LOAD_CART_FAILURE = 'LOAD_CART_FAILURE';\r\n\r\nexport const INITIATE_QUANTITY_REQUEST = 'INITIATE_QUANTITY_REQUEST';\r\n\r\nexport const GET_NAVIBAR_SIZE = 'GET_NAVIBAR_SIZE';\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_NAVIBAR_SIZE: {\r\n      return {\r\n        ...state,\r\n        naviSize: action.data,\r\n      };\r\n    }\r\n\r\n    case ADD_QUANTITY_SUCCESS: {\r\n      const index = state.products.findIndex((product) => product.id === action.data.id);\r\n      const product = state.products[index];\r\n      let quantity = product.quantity;\r\n      quantity < 9 ? (quantity += 1) : 9;\r\n      const products = [...state.products];\r\n      products[index] = { ...product, quantity };\r\n\r\n      return {\r\n        ...state,\r\n        products,\r\n      };\r\n    }\r\n\r\n    case SUBSTRACT_QUANTITY_SUCCESS: {\r\n      const index = state.products.findIndex((product) => product.id === action.data.id);\r\n      const product = state.products[index];\r\n      let quantity = product.quantity;\r\n      quantity > 1 ? (quantity -= 1) : 1;\r\n      const products = [...state.products];\r\n      products[index] = { ...product, quantity };\r\n      return {\r\n        ...state,\r\n        products,\r\n      };\r\n    }\r\n\r\n    case LOAD_PRODUCTS_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n\r\n    case LOAD_PRODUCTS_SUCCESS: {\r\n      console.log('------------------------------------------------------------');\r\n      console.log(action.data);\r\n      if (action.data.tableId) {\r\n        return {\r\n          ...state,\r\n          products: [...action.data.menus],\r\n          TableId: action.data.tableId,\r\n        };\r\n      }\r\n      return {\r\n        ...state,\r\n        products: [...action.data],\r\n      };\r\n    }\r\n\r\n    case LOAD_PRODUCTS_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n\r\n    case ADD_PRODUCT_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n\r\n    case ADD_PRODUCT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        products: [action.data, ...state.products],\r\n      };\r\n    }\r\n\r\n    case ADD_PRODUCT_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n\r\n    case LOAD_CART_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n\r\n    case LOAD_CART_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        cart: [...state.cart, action.data],\r\n      };\r\n    }\r\n\r\n    case LOAD_CART_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n\r\n    case INITIATE_QUANTITY_REQUEST: {\r\n      const product = action.data;\r\n      const initiated = { ...product, quantity: 1 };\r\n      const productList = state.products.filter((v) => v.id !== product.id);\r\n      const finalProductList = [...productList, initiated].sort((a, b) => {\r\n        return a.id - b.id;\r\n      });\r\n      return {\r\n        ...state,\r\n        products: finalProductList,\r\n      };\r\n    }\r\n\r\n    default: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}