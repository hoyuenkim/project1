{"ast":null,"code":"import axios from 'axios';\nimport { all, put, fork, call, takeLatest } from 'redux-saga/effects';\nimport { ADD_PRODUCT_REQUEST, ADD_PRODUCT_SUCCESS, ADD_PRODUCT_FAILURE, ADMIN_PRODUCTS_REQUEST, ADMIN_PRODUCTS_SUCCESS, ADMIN_PRODUCTS_FAILURE, DELETE_PRODUCT_FAILURE, DELETE_PRODUCT_SUCCESS, DELETE_PRODUCT_REQUEST } from '../reducers/shop';\n\nfunction addProductApi(data) {\n  return axios.post('/products/add', data, {\n    withCredentials: true\n  });\n}\n\nfunction* addProduct(action) {\n  try {\n    const result = yield call(addProductApi, action.formData);\n    yield put({\n      type: ADD_PRODUCT_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.log(e);\n    yield put({\n      type: ADD_PRODUCT_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchAddProduct() {\n  yield takeLatest(ADD_PRODUCT_REQUEST, addProduct);\n}\n\nfunction loadProductsApi(ShopId) {\n  // console.log()\n  return axios.post('/products/load', {\n    ShopId\n  });\n}\n\nfunction* loadProducts(action) {\n  try {\n    console.log(action);\n    const result = yield call(loadProductsApi, action.ShopId);\n    yield put({\n      type: ADMIN_PRODUCTS_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.log(e);\n    yield put({\n      type: ADMIN_PRODUCTS_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchLoadProducts() {\n  yield takeLatest(ADMIN_PRODUCTS_REQUEST, loadProducts);\n}\n\nfunction deleteProductAPI(id) {\n  console.log(id);\n  return axios.post('/products/delete', {\n    id\n  });\n}\n\nfunction* deleteProduct(action) {\n  try {\n    const result = yield call(deleteProductAPI, action.id);\n    yield put({\n      type: DELETE_PRODUCT_SUCCESS,\n      data: result\n    });\n  } catch (e) {\n    console.log(e);\n    yield put({\n      type: DELETE_PRODUCT_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchDeleteProduct() {\n  yield takeLatest(DELETE_PRODUCT_REQUEST, deleteProduct);\n}\n\nexport default function* productsSaga() {\n  yield all([fork(watchAddProduct), fork(watchLoadProducts), fork(watchDeleteProduct)]);\n}","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/sagas/shop.js"],"names":["axios","all","put","fork","call","takeLatest","ADD_PRODUCT_REQUEST","ADD_PRODUCT_SUCCESS","ADD_PRODUCT_FAILURE","ADMIN_PRODUCTS_REQUEST","ADMIN_PRODUCTS_SUCCESS","ADMIN_PRODUCTS_FAILURE","DELETE_PRODUCT_FAILURE","DELETE_PRODUCT_SUCCESS","DELETE_PRODUCT_REQUEST","addProductApi","data","post","withCredentials","addProduct","action","result","formData","type","e","console","log","error","watchAddProduct","loadProductsApi","ShopId","loadProducts","watchLoadProducts","deleteProductAPI","id","deleteProduct","watchDeleteProduct","productsSaga"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { all, put, fork, call, takeLatest } from 'redux-saga/effects';\r\nimport {\r\n  ADD_PRODUCT_REQUEST,\r\n  ADD_PRODUCT_SUCCESS,\r\n  ADD_PRODUCT_FAILURE,\r\n  ADMIN_PRODUCTS_REQUEST,\r\n  ADMIN_PRODUCTS_SUCCESS,\r\n  ADMIN_PRODUCTS_FAILURE,\r\n  DELETE_PRODUCT_FAILURE,\r\n  DELETE_PRODUCT_SUCCESS,\r\n  DELETE_PRODUCT_REQUEST,\r\n} from '../reducers/shop';\r\n\r\nfunction addProductApi(data) {\r\n  return axios.post('/products/add', data, {\r\n    withCredentials: true,\r\n  });\r\n}\r\nfunction* addProduct(action) {\r\n  try {\r\n    const result = yield call(addProductApi, action.formData);\r\n    yield put({ type: ADD_PRODUCT_SUCCESS, data: result.data });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({ type: ADD_PRODUCT_FAILURE, error: e });\r\n  }\r\n}\r\nfunction* watchAddProduct() {\r\n  yield takeLatest(ADD_PRODUCT_REQUEST, addProduct);\r\n}\r\n\r\nfunction loadProductsApi(ShopId) {\r\n  // console.log()\r\n  return axios.post('/products/load', { ShopId });\r\n}\r\nfunction* loadProducts(action) {\r\n  try {\r\n    console.log(action);\r\n    const result = yield call(loadProductsApi, action.ShopId);\r\n    yield put({ type: ADMIN_PRODUCTS_SUCCESS, data: result.data });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({ type: ADMIN_PRODUCTS_FAILURE, error: e });\r\n  }\r\n}\r\nfunction* watchLoadProducts() {\r\n  yield takeLatest(ADMIN_PRODUCTS_REQUEST, loadProducts);\r\n}\r\n\r\nfunction deleteProductAPI(id) {\r\n  console.log(id);\r\n  return axios.post('/products/delete', { id });\r\n}\r\nfunction* deleteProduct(action) {\r\n  try {\r\n   \r\n    const result = yield call(deleteProductAPI, action.id);\r\n    yield put({ type: DELETE_PRODUCT_SUCCESS, data: result });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({ type: DELETE_PRODUCT_FAILURE, error: e });\r\n  }\r\n}\r\nfunction* watchDeleteProduct() {\r\n  yield takeLatest(DELETE_PRODUCT_REQUEST, deleteProduct);\r\n}\r\n\r\nexport default function* productsSaga() {\r\n  yield all([fork(watchAddProduct), fork(watchLoadProducts), fork(watchDeleteProduct)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}