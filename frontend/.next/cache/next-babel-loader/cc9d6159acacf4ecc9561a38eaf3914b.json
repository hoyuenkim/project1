{"ast":null,"code":"import { Card, Carousel, Image, Modal, List } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport OneSignal from \"react-onesignal\";\nimport axios from \"axios\";\nimport { useRouter } from \"next/router\";\nimport { LOAD_EVENTS_REQUEST, PAGE_CHANGE_SUCCESS } from \"../reducers/admin\";\nimport MapComponent from \"../components/Generalui/MapComponent\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nconst Index = () => {\n  axios.defaults.baseURL = `${process.env.BACKEND_IP}`;\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const {\n    0: list,\n    1: setList\n  } = useState([]);\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false);\n  const {\n    0: coordinates,\n    1: setCoordinates\n  } = useState();\n  useEffect(() => {\n    dispatch({\n      type: LOAD_EVENTS_REQUEST\n    });\n  });\n  useEffect(() => {\n    dispatch({\n      type: PAGE_CHANGE_SUCCESS,\n      data: \"index\"\n    });\n  });\n  const {\n    events\n  } = useSelector(state => state.admin);\n  const {\n    isLoggedIn,\n    session\n  } = useSelector(state => state.user);\n\n  if (session && coordinates == null) {\n    axios.post(\"/\", {\n      id: session.id\n    }).then(result => {\n      setCoordinates(result.data);\n    }).catch(err => console.error(err));\n  }\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: isLoggedIn && session ? /*#__PURE__*/_jsx(_Fragment, {\n      children: /*#__PURE__*/_jsx(MapComponent, {\n        session: session,\n        coordinates: coordinates\n      })\n    }) : /*#__PURE__*/_jsx(Card, {\n      children: /*#__PURE__*/_jsx(Card.Meta, {\n        description: /*#__PURE__*/_jsx(\"div\", {\n          style: {\n            height: \"100vh\",\n            width: \"100%\"\n          },\n          children: /*#__PURE__*/_jsx(Carousel, {\n            autoplay: true,\n            dots: false,\n            children: events.map(event => /*#__PURE__*/_jsx(Image, {\n              onClick: router.push(`/event/${event.id}`),\n              style: {\n                height: \"100vh\",\n                width: \"100%\"\n              },\n              src: `${process.env.BACKEND_IP}/uploads/${event.Images[0].url}`\n            }))\n          })\n        })\n      })\n    })\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/dev/project1/frontend/pages/index.js"],"names":["Card","Carousel","Image","Modal","List","useEffect","useState","useDispatch","useSelector","OneSignal","axios","useRouter","LOAD_EVENTS_REQUEST","PAGE_CHANGE_SUCCESS","MapComponent","Index","defaults","baseURL","process","env","BACKEND_IP","dispatch","router","list","setList","visible","setVisible","coordinates","setCoordinates","type","data","events","state","admin","isLoggedIn","session","user","post","id","then","result","catch","err","console","error","height","width","map","event","push","Images","url"],"mappings":"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","sourcesContent":["import { Card, Carousel, Image, Modal, List } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport OneSignal from \"react-onesignal\";\nimport axios from \"axios\";\nimport { useRouter } from \"next/router\";\nimport { LOAD_EVENTS_REQUEST, PAGE_CHANGE_SUCCESS } from \"../reducers/admin\";\nimport MapComponent from \"../components/Generalui/MapComponent\";\n\nconst Index = () => {\n  axios.defaults.baseURL = `${process.env.BACKEND_IP}`;\n\n  const dispatch = useDispatch();\n  const router = useRouter();\n\n  const [list, setList] = useState([]);\n  const [visible, setVisible] = useState(false);\n\n  const [coordinates, setCoordinates] = useState();\n\n  useEffect(() => {\n    dispatch({ type: LOAD_EVENTS_REQUEST });\n  });\n\n  useEffect(() => {\n    dispatch({ type: PAGE_CHANGE_SUCCESS, data: \"index\" });\n  });\n\n  const { events } = useSelector((state) => state.admin);\n  const { isLoggedIn, session } = useSelector((state) => state.user);\n\n  if (session && coordinates == null) {\n    axios\n      .post(\"/\", { id: session.id })\n      .then((result) => {\n        setCoordinates(result.data);\n      })\n      .catch((err) => console.error(err));\n  }\n\n  return (\n    <>\n      {isLoggedIn && session ? (\n        <>\n          <MapComponent session={session} coordinates={coordinates} />\n        </>\n      ) : (\n        <Card>\n          <Card.Meta\n            description={\n              <div style={{ height: \"100vh\", width: \"100%\" }}>\n                <Carousel autoplay dots={false}>\n                  {events.map((event) => (\n                    <Image\n                      onClick={router.push(`/event/${event.id}`)}\n                      style={{ height: \"100vh\", width: \"100%\" }}\n                      src={`${process.env.BACKEND_IP}/uploads/${event.Images[0].url}`}\n                    />\n                  ))}\n                </Carousel>\n              </div>\n            }\n          />\n        </Card>\n      )}\n    </>\n  );\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}