{"ast":null,"code":"// import { useDispatch, useSelector } from 'react-redux';\nimport axios from 'axios'; // import { PAYMENT_FAILURE, PAYMENT_SUCCESS } from '../../reducers/payment';\n\nexport const onClickPayment = (type, product, IMP) => {\n  const dispatch = useDispatch();\n\n  const onWindowScroll = () => {\n    window.scrollTo({\n      top: 0\n    });\n  }; // const { cart, ShopId, TableId } = useSelector((state) => state.cart);\n\n\n  const {\n    isLoggedIn,\n    session\n  } = useSelector(state => state.user);\n  let originData;\n  let amount = 0;\n  let name;\n\n  if (isLoggedIn) {\n    if (type !== 'cart') {\n      dispatch({\n        type: CLEAR_CART_REQUEST\n      });\n      originData = {\n        UserId: session.id,\n        UserName: session.name,\n        ProductId: product.id,\n        ShopId: product.Shop.id,\n        price: product.discount ? product.price * (100 - product.discount) * 0.01 * product.quantity : product.price * product.quantity,\n        quantity: product.quantity,\n        ShopName: product.Shop.name,\n        ProductTitle: product.title\n      };\n    } else {\n      const product = cart[0];\n      cart.map(product => amount += product.Discount ? product.price * (100 - product.Discount.rate) * 0.01 * product.quantity : product.price * product.quantity);\n      name = cart.length > 1 ? `${product.title} 외 ${cart.length - 1} 건` : product.title;\n      originData = cart.map(product => {\n        return {\n          ProductId: product.id,\n          ShopId: product.Shop.id,\n          UserId: session.id,\n          UserName: session.name,\n          price: product.Discount ? product.price * (100 - product.Discount.rate) * 0.01 : product.price,\n          quantity: product.quantity,\n          ShopName: product.Shop.name,\n          ProductTitle: product.title\n        };\n      });\n    }\n\n    const custom_data = JSON.stringify(type !== 'cart' ? [originData] : originData);\n\n    if (IMP !== null) {\n      dispatch({\n        type: CLEAR_CART_REQUEST\n      });\n      IMP.init(process.env.IAMPORT_KEY);\n      onWindowScroll();\n      IMP.init(process.env.IAMPORT_KEY);\n      const today = Date.now();\n      IMP.request_pay({\n        pay_method: 'card',\n        name: type !== 'cart' ? product.title : name,\n        Merchant_uid: 'uid' + today,\n        amount: type !== 'cart' ? product.Discount ? product.price * (100 - product.Discount.rate) * 0.01 * product.quantity : product.price * product.quantity : amount,\n        custom_data\n      }, callback);\n    }\n\n    const callback = async response => {\n      const {\n        success,\n        merchant_uid,\n        error_msg\n      } = response;\n\n      if (success) {\n        axios.post(`${process.env.BACKEND_IP}/payments/complete`, {\n          data: response\n        }).then(response => {\n          // dispatch({ type: PAYMENT_SUCCESS, data: response.data });\n          if (type == 'cart') {\n            return router.push(TableId === undefined ? `/menu/${ShopId}` : `/menu/${ShopId}/${TableId}`);\n          }\n        }).catch(err => {\n          console.error(err); // return dispatch({ type: PAYMENT_FAILURE });\n        });\n      } else {\n        alert(`결제 실패: ${error_msg}`);\n      }\n    };\n  } else {\n    alert('error');\n  }\n};","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/dev/project1/frontend/components/Generalui/Payment.js"],"names":["axios","onClickPayment","type","product","IMP","dispatch","useDispatch","onWindowScroll","window","scrollTo","top","isLoggedIn","session","useSelector","state","user","originData","amount","name","CLEAR_CART_REQUEST","UserId","id","UserName","ProductId","ShopId","Shop","price","discount","quantity","ShopName","ProductTitle","title","cart","map","Discount","rate","length","custom_data","JSON","stringify","init","process","env","IAMPORT_KEY","today","Date","now","request_pay","pay_method","Merchant_uid","callback","response","success","merchant_uid","error_msg","post","BACKEND_IP","data","then","router","push","TableId","undefined","catch","err","console","error","alert"],"mappings":"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","sourcesContent":["// import { useDispatch, useSelector } from 'react-redux';\nimport axios from 'axios';\n// import { PAYMENT_FAILURE, PAYMENT_SUCCESS } from '../../reducers/payment';\n\nexport const onClickPayment = (type, product, IMP) => {\n  const dispatch = useDispatch();\n\n  const onWindowScroll = () => {\n    window.scrollTo({ top: 0 });\n  };\n\n  // const { cart, ShopId, TableId } = useSelector((state) => state.cart);\n  const { isLoggedIn, session } = useSelector((state) => state.user);\n  let originData;\n  let amount = 0;\n\n  let name;\n  if (isLoggedIn) {\n    if (type !== 'cart') {\n      dispatch({ type: CLEAR_CART_REQUEST });\n      originData = {\n        UserId: session.id,\n        UserName: session.name,\n        ProductId: product.id,\n        ShopId: product.Shop.id,\n        price: product.discount\n          ? product.price * (100 - product.discount) * 0.01 * product.quantity\n          : product.price * product.quantity,\n        quantity: product.quantity,\n        ShopName: product.Shop.name,\n        ProductTitle: product.title,\n      };\n    } else {\n      const product = cart[0];\n      cart.map(\n        (product) =>\n          (amount += product.Discount\n            ? product.price *\n              (100 - product.Discount.rate) *\n              0.01 *\n              product.quantity\n            : product.price * product.quantity)\n      );\n      name =\n        cart.length > 1\n          ? `${product.title} 외 ${cart.length - 1} 건`\n          : product.title;\n      originData = cart.map((product) => {\n        return {\n          ProductId: product.id,\n          ShopId: product.Shop.id,\n          UserId: session.id,\n          UserName: session.name,\n          price: product.Discount\n            ? product.price * (100 - product.Discount.rate) * 0.01\n            : product.price,\n          quantity: product.quantity,\n          ShopName: product.Shop.name,\n          ProductTitle: product.title,\n        };\n      });\n    }\n\n    const custom_data = JSON.stringify(\n      type !== 'cart' ? [originData] : originData\n    );\n\n    if (IMP !== null) {\n      dispatch({ type: CLEAR_CART_REQUEST });\n      IMP.init(process.env.IAMPORT_KEY);\n      onWindowScroll();\n      IMP.init(process.env.IAMPORT_KEY);\n      const today = Date.now();\n      IMP.request_pay(\n        {\n          pay_method: 'card',\n          name: type !== 'cart' ? product.title : name,\n          Merchant_uid: 'uid' + today,\n          amount:\n            type !== 'cart'\n              ? product.Discount\n                ? product.price *\n                  (100 - product.Discount.rate) *\n                  0.01 *\n                  product.quantity\n                : product.price * product.quantity\n              : amount,\n          custom_data,\n        },\n        callback\n      );\n    }\n    const callback = async (response) => {\n      const { success, merchant_uid, error_msg } = response;\n      if (success) {\n        axios\n          .post(`${process.env.BACKEND_IP}/payments/complete`, {\n            data: response,\n          })\n          .then((response) => {\n            // dispatch({ type: PAYMENT_SUCCESS, data: response.data });\n            if (type == 'cart') {\n              return router.push(\n                TableId === undefined\n                  ? `/menu/${ShopId}`\n                  : `/menu/${ShopId}/${TableId}`\n              );\n            }\n          })\n          .catch((err) => {\n            console.error(err);\n            // return dispatch({ type: PAYMENT_FAILURE });\n          });\n      } else {\n        alert(`결제 실패: ${error_msg}`);\n      }\n    };\n  } else {\n    alert('error');\n  }\n};\n"]},"metadata":{},"sourceType":"module"}