{"ast":null,"code":"import { fork, takeEvery, all, put, call, takeLatest } from 'redux-saga/effects';\nimport { LOAD_PAYMENT_HISTORY_FAILURE, LOAD_PAYMENT_HISTORY_REQUEST, LOAD_PAYMENT_HISTORY_SUCCESS } from '../reducers/payment';\n\nfunction paymentHistoryAPI(data) {\n  return axios.post('/payment/history', {\n    id: data.id\n  });\n}\n\nfunction* paymentHistory() {\n  try {\n    const result = yield call(paymentHistoryAPI, action.data);\n    yield put({\n      type: LOAD_PAYMENT_HISTORY_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    yield put({\n      type: LOAD_PAYMENT_HISTORY_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchPaymentHistory() {\n  yield takeLatest(LOAD_PAYMENT_HISTORY_REQUEST, paymentHistory);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchPaymentHistory)]);\n}","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/sagas/payment.js"],"names":["fork","takeEvery","all","put","call","takeLatest","LOAD_PAYMENT_HISTORY_FAILURE","LOAD_PAYMENT_HISTORY_REQUEST","LOAD_PAYMENT_HISTORY_SUCCESS","paymentHistoryAPI","data","axios","post","id","paymentHistory","result","action","type","e","error","watchPaymentHistory","userSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,SAAf,EAA0BC,GAA1B,EAA+BC,GAA/B,EAAoCC,IAApC,EAA0CC,UAA1C,QAA4D,oBAA5D;AAEA,SACEC,4BADF,EAEEC,4BAFF,EAGEC,4BAHF,QAIO,qBAJP;;AAMA,SAASC,iBAAT,CAA2BC,IAA3B,EAAiC;AAC/B,SAAOC,KAAK,CAACC,IAAN,CAAW,kBAAX,EAA+B;AAAEC,IAAAA,EAAE,EAAEH,IAAI,CAACG;AAAX,GAA/B,CAAP;AACD;;AAED,UAAUC,cAAV,GAA2B;AACzB,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMX,IAAI,CAACK,iBAAD,EAAoBO,MAAM,CAACN,IAA3B,CAAzB;AACA,UAAMP,GAAG,CAAC;AACRc,MAAAA,IAAI,EAAET,4BADE;AAERE,MAAAA,IAAI,EAAEK,MAAM,CAACL;AAFL,KAAD,CAAT;AAID,GAND,CAME,OAAOQ,CAAP,EAAU;AACV,UAAMf,GAAG,CAAC;AAAEc,MAAAA,IAAI,EAAEX,4BAAR;AAAsCa,MAAAA,KAAK,EAAED;AAA7C,KAAD,CAAT;AACD;AACF;;AAED,UAAUE,mBAAV,GAAgC;AAC9B,QAAMf,UAAU,CAACE,4BAAD,EAA+BO,cAA/B,CAAhB;AACD;;AAED,eAAe,UAAUO,QAAV,GAAqB;AAClC,QAAMnB,GAAG,CAAC,CAACF,IAAI,CAACoB,mBAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { fork, takeEvery, all, put, call, takeLatest } from 'redux-saga/effects';\r\n\r\nimport {\r\n  LOAD_PAYMENT_HISTORY_FAILURE,\r\n  LOAD_PAYMENT_HISTORY_REQUEST,\r\n  LOAD_PAYMENT_HISTORY_SUCCESS,\r\n} from '../reducers/payment';\r\n\r\nfunction paymentHistoryAPI(data) {\r\n  return axios.post('/payment/history', { id: data.id });\r\n}\r\n\r\nfunction* paymentHistory() {\r\n  try {\r\n    const result = yield call(paymentHistoryAPI, action.data);\r\n    yield put({\r\n      type: LOAD_PAYMENT_HISTORY_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    yield put({ type: LOAD_PAYMENT_HISTORY_FAILURE, error: e });\r\n  }\r\n}\r\n\r\nfunction* watchPaymentHistory() {\r\n  yield takeLatest(LOAD_PAYMENT_HISTORY_REQUEST, paymentHistory);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([fork(watchPaymentHistory)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}