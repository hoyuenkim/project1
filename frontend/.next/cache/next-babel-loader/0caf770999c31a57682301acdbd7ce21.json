{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(login),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogin),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(signUp),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchSignUp),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(loadUser),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadUser),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(passwordChange),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(watchPasswordChange),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(paymentHistory),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(watchPaymentHistory),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(userSaga);\n\nimport { fork, takeEvery, all, put, call, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOAD_USER_SUCCESS, LOAD_USER_FAILURE, LOAD_USER_REQUEST, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, PASSWORD_CHANGE_REQUEST, PASSWORD_CHANGE_SUCCESS, PASSWORD_CHANGE_FAILURE } from '../reducers/user';\nimport { PAYMENT_HISTORY_REQUEST, PAYMENT_HISTORY_SUCCESS } from '../reducers/payment';\n\nfunction loginApi(loginData) {\n  return axios.post('/user/login', loginData, {\n    withCredentials: true\n  });\n}\n\nfunction login(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function login$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(loginApi, action.data);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            type: LOG_IN_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context.next = 13;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n          _context.next = 13;\n          return put({\n            type: LOG_IN_FAILURE,\n            error: _context.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction watchLogin() {\n  return _regeneratorRuntime.wrap(function watchLogin$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          console.log('Try logging in');\n          _context2.next = 3;\n          return takeEvery(LOG_IN_REQUEST, login);\n\n        case 3:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction signUpApi(signUpData) {\n  return axios.post('/user/signup', signUpData);\n}\n\nfunction signUp(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function signUp$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(signUpApi, action.data);\n\n        case 3:\n          result = _context3.sent;\n          _context3.next = 6;\n          return put({\n            type: SIGN_UP_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context3.next = 13;\n          break;\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(_context3.t0);\n          _context3.next = 13;\n          return put({\n            type: SIGN_UP_FAILURE,\n            error: _context3.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 8]]);\n}\n\nfunction watchSignUp() {\n  return _regeneratorRuntime.wrap(function watchSignUp$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeEvery(SIGN_UP_REQUEST, signUp);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction loadUserApi() {\n  // 서버에 요청을 보내는 부분\n  return axios.get('/user', {\n    withCredentials: true\n  });\n}\n\nfunction loadUser() {\n  var result;\n  return _regeneratorRuntime.wrap(function loadUser$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          console.log('load user request');\n          _context5.next = 4;\n          return call(loadUserApi);\n\n        case 4:\n          result = _context5.sent;\n          _context5.next = 7;\n          return put({\n            type: LOAD_USER_SUCCESS,\n            data: result.data\n          });\n\n        case 7:\n          _context5.next = 14;\n          break;\n\n        case 9:\n          _context5.prev = 9;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.log(_context5.t0);\n          _context5.next = 14;\n          return put({\n            type: LOAD_USER_FAILURE,\n            error: _context5.t0\n          });\n\n        case 14:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 9]]);\n}\n\nfunction watchLoadUser() {\n  return _regeneratorRuntime.wrap(function watchLoadUser$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeEvery(LOAD_USER_REQUEST, loadUser);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nfunction changePasswordApi(_ref) {\n  var id = _ref.id,\n      password = _ref.password;\n  return axios.post('/user/password/change', {\n    id: id,\n    password: password\n  });\n}\n\nfunction passwordChange(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function passwordChange$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _context7.next = 3;\n          return call(changePasswordApi, action.data);\n\n        case 3:\n          result = _context7.sent;\n          _context7.next = 6;\n          return put({\n            type: PASSWORD_CHANGE_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context7.next = 12;\n          break;\n\n        case 8:\n          _context7.prev = 8;\n          _context7.t0 = _context7[\"catch\"](0);\n          _context7.next = 12;\n          return put({\n            type: PASSWORD_CHANGE_FAILURE,\n            error: _context7.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 8]]);\n}\n\nfunction watchPasswordChange() {\n  return _regeneratorRuntime.wrap(function watchPasswordChange$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeLatest(PASSWORD_CHANGE_REQUEST, passwordChange);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\n\nfunction paymentHistoryAPI(data) {\n  return axios.post('/payment/history', {\n    id: data.id\n  });\n}\n\nfunction paymentHistory() {\n  var result;\n  return _regeneratorRuntime.wrap(function paymentHistory$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.prev = 0;\n          _context9.next = 3;\n          return call(paymentHistoryAPI, action.data);\n\n        case 3:\n          result = _context9.sent;\n          _context9.next = 6;\n          return put({\n            type: PAYMENT_HISTORY_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context9.next = 12;\n          break;\n\n        case 8:\n          _context9.prev = 8;\n          _context9.t0 = _context9[\"catch\"](0);\n          _context9.next = 12;\n          return put({\n            type: PA\n          });\n\n        case 12:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9, null, [[0, 8]]);\n}\n\nfunction watchPaymentHistory() {\n  return _regeneratorRuntime.wrap(function watchPaymentHistory$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeLatest(PAYMENT_HISTORY_REQUEST);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return all([fork(watchLogin), fork(watchLoadUser), fork(watchSignUp), fork(watchPasswordChange)]);\n\n        case 2:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11);\n}","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/sagas/user.js"],"names":["login","watchLogin","signUp","watchSignUp","loadUser","watchLoadUser","passwordChange","watchPasswordChange","paymentHistory","watchPaymentHistory","userSaga","fork","takeEvery","all","put","call","takeLatest","axios","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","LOAD_USER_REQUEST","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","PASSWORD_CHANGE_REQUEST","PASSWORD_CHANGE_SUCCESS","PASSWORD_CHANGE_FAILURE","PAYMENT_HISTORY_REQUEST","PAYMENT_HISTORY_SUCCESS","loginApi","loginData","post","withCredentials","action","data","result","type","console","log","error","signUpApi","signUpData","loadUserApi","get","changePasswordApi","id","password","paymentHistoryAPI","PA"],"mappings":"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","sourcesContent":["import { fork, takeEvery, all, put, call, takeLatest } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {\r\n  LOAD_USER_SUCCESS,\r\n  LOAD_USER_FAILURE,\r\n  LOAD_USER_REQUEST,\r\n  LOG_IN_REQUEST,\r\n  LOG_IN_SUCCESS,\r\n  LOG_IN_FAILURE,\r\n  SIGN_UP_REQUEST,\r\n  SIGN_UP_SUCCESS,\r\n  SIGN_UP_FAILURE,\r\n  PASSWORD_CHANGE_REQUEST,\r\n  PASSWORD_CHANGE_SUCCESS,\r\n  PASSWORD_CHANGE_FAILURE,\r\n} from '../reducers/user';\r\nimport { PAYMENT_HISTORY_REQUEST, PAYMENT_HISTORY_SUCCESS } from '../reducers/payment';\r\n\r\nfunction loginApi(loginData) {\r\n  return axios.post('/user/login', loginData, { withCredentials: true });\r\n}\r\n\r\nfunction* login(action) {\r\n  try {\r\n    const result = yield call(loginApi, action.data);\r\n    yield put({\r\n      type: LOG_IN_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({\r\n      type: LOG_IN_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLogin() {\r\n  console.log('Try logging in');\r\n  yield takeEvery(LOG_IN_REQUEST, login);\r\n}\r\n\r\nfunction signUpApi(signUpData) {\r\n  return axios.post('/user/signup', signUpData);\r\n}\r\n\r\nfunction* signUp(action) {\r\n  try {\r\n    const result = yield call(signUpApi, action.data);\r\n    yield put({\r\n      type: SIGN_UP_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({\r\n      type: SIGN_UP_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchSignUp() {\r\n  yield takeEvery(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\nfunction loadUserApi() {\r\n  // 서버에 요청을 보내는 부분\r\n\r\n  return axios.get('/user', { withCredentials: true });\r\n}\r\n\r\nfunction* loadUser() {\r\n  try {\r\n    console.log('load user request');\r\n    const result = yield call(loadUserApi);\r\n    yield put({\r\n      type: LOAD_USER_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({\r\n      type: LOAD_USER_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLoadUser() {\r\n  yield takeEvery(LOAD_USER_REQUEST, loadUser);\r\n}\r\n\r\nfunction changePasswordApi({ id, password }) {\r\n  return axios.post('/user/password/change', { id, password });\r\n}\r\n\r\nfunction* passwordChange(action) {\r\n  try {\r\n    const result = yield call(changePasswordApi, action.data);\r\n    yield put({\r\n      type: PASSWORD_CHANGE_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: PASSWORD_CHANGE_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchPasswordChange() {\r\n  yield takeLatest(PASSWORD_CHANGE_REQUEST, passwordChange);\r\n}\r\n\r\nfunction paymentHistoryAPI(data) {\r\n  return axios.post('/payment/history', { id: data.id });\r\n}\r\n\r\nfunction* paymentHistory() {\r\n  try {\r\n    const result = yield call(paymentHistoryAPI, action.data);\r\n    yield put({\r\n      type: PAYMENT_HISTORY_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    yield put({ type: PA})\r\n  }\r\n}\r\n\r\nfunction* watchPaymentHistory() {\r\n  yield takeLatest(PAYMENT_HISTORY_REQUEST);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([fork(watchLogin), fork(watchLoadUser), fork(watchSignUp), fork(watchPasswordChange)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}