{"ast":null,"code":"import { fork, takeEvery, all, put, call, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { LOAD_USER_SUCCESS, LOAD_USER_FAILURE, LOAD_USER_REQUEST, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, PASSWORD_CHANGE_REQUEST, PASSWORD_CHANGE_SUCCESS, PASSWORD_CHANGE_FAILURE } from \"../reducers/user\";\n\nfunction loginApi(loginData) {\n  return axios.post(\"/user/login\", loginData);\n}\n\nfunction* login(action) {\n  console.log(result);\n\n  try {\n    const result = yield call(loginApi, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.log(e);\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchLogin() {\n  console.log(\"Try logging in\");\n  yield takeEvery(LOG_IN_REQUEST, login);\n}\n\nfunction signUpApi(signUpData) {\n  return axios.post(\"/user/signup\", signUpData);\n}\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpApi, action.data);\n    yield put({\n      type: SIGN_UP_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.log(e);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchSignUp() {\n  yield takeEvery(SIGN_UP_REQUEST, signUp);\n}\n\nfunction loadUserApi() {\n  return axios.get(\"/user\");\n}\n\nfunction* loadUser() {\n  try {\n    const result = yield call(loadUserApi);\n    yield put({\n      type: LOAD_USER_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.log(e);\n    yield put({\n      type: LOAD_USER_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchLoadUser() {\n  yield takeEvery(LOAD_USER_REQUEST, loadUser);\n}\n\nfunction changePasswordApi({\n  id,\n  password\n}) {\n  return axios.post(\"/user/password/change\", {\n    id,\n    password\n  });\n}\n\nfunction* passwordChange(action) {\n  try {\n    const result = yield call(changePasswordApi, action.data);\n    yield put({\n      type: PASSWORD_CHANGE_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    yield put({\n      type: PASSWORD_CHANGE_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchPasswordChange() {\n  yield takeLatest(PASSWORD_CHANGE_REQUEST, passwordChange);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchLoadUser), fork(watchSignUp), fork(watchPasswordChange)]);\n}","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/dev/project1/frontend/sagas/user.js"],"names":["fork","takeEvery","all","put","call","takeLatest","axios","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","LOAD_USER_REQUEST","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","PASSWORD_CHANGE_REQUEST","PASSWORD_CHANGE_SUCCESS","PASSWORD_CHANGE_FAILURE","loginApi","loginData","post","login","action","console","log","result","data","type","e","error","watchLogin","signUpApi","signUpData","signUp","watchSignUp","loadUserApi","get","loadUser","watchLoadUser","changePasswordApi","id","password","passwordChange","watchPasswordChange","userSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,SAAf,EAA0BC,GAA1B,EAA+BC,GAA/B,EAAoCC,IAApC,EAA0CC,UAA1C,QAA4D,oBAA5D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,iBADF,EAEEC,iBAFF,EAGEC,iBAHF,EAIEC,cAJF,EAKEC,cALF,EAMEC,cANF,EAOEC,eAPF,EAQEC,eARF,EASEC,eATF,EAUEC,uBAVF,EAWEC,uBAXF,EAYEC,uBAZF,QAaO,kBAbP;;AAeA,SAASC,QAAT,CAAkBC,SAAlB,EAA6B;AAC3B,SAAOd,KAAK,CAACe,IAAN,CAAW,aAAX,EAA0BD,SAA1B,CAAP;AACD;;AAED,UAAUE,KAAV,CAAgBC,MAAhB,EAAwB;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;;AACA,MAAI;AACF,UAAMA,MAAM,GAAG,MAAMtB,IAAI,CAACe,QAAD,EAAWI,MAAM,CAACI,IAAlB,CAAzB;AACA,UAAMxB,GAAG,CAAC;AACRyB,MAAAA,IAAI,EAAEjB,cADE;AAERgB,MAAAA,IAAI,EAAED,MAAM,CAACC;AAFL,KAAD,CAAT;AAID,GAND,CAME,OAAOE,CAAP,EAAU;AACVL,IAAAA,OAAO,CAACC,GAAR,CAAYI,CAAZ;AACA,UAAM1B,GAAG,CAAC;AACRyB,MAAAA,IAAI,EAAEhB,cADE;AAERkB,MAAAA,KAAK,EAAED;AAFC,KAAD,CAAT;AAID;AACF;;AAED,UAAUE,UAAV,GAAuB;AACrBP,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,QAAMxB,SAAS,CAACS,cAAD,EAAiBY,KAAjB,CAAf;AACD;;AAED,SAASU,SAAT,CAAmBC,UAAnB,EAA+B;AAC7B,SAAO3B,KAAK,CAACe,IAAN,CAAW,cAAX,EAA2BY,UAA3B,CAAP;AACD;;AAED,UAAUC,MAAV,CAAiBX,MAAjB,EAAyB;AACvB,MAAI;AACF,UAAMG,MAAM,GAAG,MAAMtB,IAAI,CAAC4B,SAAD,EAAYT,MAAM,CAACI,IAAnB,CAAzB;AACA,UAAMxB,GAAG,CAAC;AACRyB,MAAAA,IAAI,EAAEd,eADE;AAERa,MAAAA,IAAI,EAAED,MAAM,CAACC;AAFL,KAAD,CAAT;AAID,GAND,CAME,OAAOE,CAAP,EAAU;AACVL,IAAAA,OAAO,CAACC,GAAR,CAAYI,CAAZ;AACA,UAAM1B,GAAG,CAAC;AACRyB,MAAAA,IAAI,EAAEb,eADE;AAERe,MAAAA,KAAK,EAAED;AAFC,KAAD,CAAT;AAID;AACF;;AAED,UAAUM,WAAV,GAAwB;AACtB,QAAMlC,SAAS,CAACY,eAAD,EAAkBqB,MAAlB,CAAf;AACD;;AAED,SAASE,WAAT,GAAuB;AACrB,SAAO9B,KAAK,CAAC+B,GAAN,CAAU,OAAV,CAAP;AACD;;AAED,UAAUC,QAAV,GAAqB;AACnB,MAAI;AACF,UAAMZ,MAAM,GAAG,MAAMtB,IAAI,CAACgC,WAAD,CAAzB;AACA,UAAMjC,GAAG,CAAC;AACRyB,MAAAA,IAAI,EAAErB,iBADE;AAERoB,MAAAA,IAAI,EAAED,MAAM,CAACC;AAFL,KAAD,CAAT;AAID,GAND,CAME,OAAOE,CAAP,EAAU;AACVL,IAAAA,OAAO,CAACC,GAAR,CAAYI,CAAZ;AACA,UAAM1B,GAAG,CAAC;AACRyB,MAAAA,IAAI,EAAEpB,iBADE;AAERsB,MAAAA,KAAK,EAAED;AAFC,KAAD,CAAT;AAID;AACF;;AAED,UAAUU,aAAV,GAA0B;AACxB,QAAMtC,SAAS,CAACQ,iBAAD,EAAoB6B,QAApB,CAAf;AACD;;AAED,SAASE,iBAAT,CAA2B;AAAEC,EAAAA,EAAF;AAAMC,EAAAA;AAAN,CAA3B,EAA6C;AAC3C,SAAOpC,KAAK,CAACe,IAAN,CAAW,uBAAX,EAAoC;AAAEoB,IAAAA,EAAF;AAAMC,IAAAA;AAAN,GAApC,CAAP;AACD;;AAED,UAAUC,cAAV,CAAyBpB,MAAzB,EAAiC;AAC/B,MAAI;AACF,UAAMG,MAAM,GAAG,MAAMtB,IAAI,CAACoC,iBAAD,EAAoBjB,MAAM,CAACI,IAA3B,CAAzB;AACA,UAAMxB,GAAG,CAAC;AACRyB,MAAAA,IAAI,EAAEX,uBADE;AAERU,MAAAA,IAAI,EAAED,MAAM,CAACC;AAFL,KAAD,CAAT;AAID,GAND,CAME,OAAOE,CAAP,EAAU;AACV,UAAM1B,GAAG,CAAC;AACRyB,MAAAA,IAAI,EAAEV,uBADE;AAERY,MAAAA,KAAK,EAAED;AAFC,KAAD,CAAT;AAID;AACF;;AAED,UAAUe,mBAAV,GAAgC;AAC9B,QAAMvC,UAAU,CAACW,uBAAD,EAA0B2B,cAA1B,CAAhB;AACD;;AAED,eAAe,UAAUE,QAAV,GAAqB;AAClC,QAAM3C,GAAG,CAAC,CAACF,IAAI,CAAC+B,UAAD,CAAL,EAAmB/B,IAAI,CAACuC,aAAD,CAAvB,EAAwCvC,IAAI,CAACmC,WAAD,CAA5C,EAA2DnC,IAAI,CAAC4C,mBAAD,CAA/D,CAAD,CAAT;AACD","sourcesContent":["import { fork, takeEvery, all, put, call, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport {\n  LOAD_USER_SUCCESS,\n  LOAD_USER_FAILURE,\n  LOAD_USER_REQUEST,\n  LOG_IN_REQUEST,\n  LOG_IN_SUCCESS,\n  LOG_IN_FAILURE,\n  SIGN_UP_REQUEST,\n  SIGN_UP_SUCCESS,\n  SIGN_UP_FAILURE,\n  PASSWORD_CHANGE_REQUEST,\n  PASSWORD_CHANGE_SUCCESS,\n  PASSWORD_CHANGE_FAILURE,\n} from \"../reducers/user\";\n\nfunction loginApi(loginData) {\n  return axios.post(\"/user/login\", loginData);\n}\n\nfunction* login(action) {\n  console.log(result);\n  try {\n    const result = yield call(loginApi, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data,\n    });\n  } catch (e) {\n    console.log(e);\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: e,\n    });\n  }\n}\n\nfunction* watchLogin() {\n  console.log(\"Try logging in\");\n  yield takeEvery(LOG_IN_REQUEST, login);\n}\n\nfunction signUpApi(signUpData) {\n  return axios.post(\"/user/signup\", signUpData);\n}\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpApi, action.data);\n    yield put({\n      type: SIGN_UP_SUCCESS,\n      data: result.data,\n    });\n  } catch (e) {\n    console.log(e);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: e,\n    });\n  }\n}\n\nfunction* watchSignUp() {\n  yield takeEvery(SIGN_UP_REQUEST, signUp);\n}\n\nfunction loadUserApi() {\n  return axios.get(\"/user\");\n}\n\nfunction* loadUser() {\n  try {\n    const result = yield call(loadUserApi);\n    yield put({\n      type: LOAD_USER_SUCCESS,\n      data: result.data,\n    });\n  } catch (e) {\n    console.log(e);\n    yield put({\n      type: LOAD_USER_FAILURE,\n      error: e,\n    });\n  }\n}\n\nfunction* watchLoadUser() {\n  yield takeEvery(LOAD_USER_REQUEST, loadUser);\n}\n\nfunction changePasswordApi({ id, password }) {\n  return axios.post(\"/user/password/change\", { id, password });\n}\n\nfunction* passwordChange(action) {\n  try {\n    const result = yield call(changePasswordApi, action.data);\n    yield put({\n      type: PASSWORD_CHANGE_SUCCESS,\n      data: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: PASSWORD_CHANGE_FAILURE,\n      error: e,\n    });\n  }\n}\n\nfunction* watchPasswordChange() {\n  yield takeLatest(PASSWORD_CHANGE_REQUEST, passwordChange);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchLoadUser), fork(watchSignUp), fork(watchPasswordChange)]);\n}\n"]},"metadata":{},"sourceType":"module"}