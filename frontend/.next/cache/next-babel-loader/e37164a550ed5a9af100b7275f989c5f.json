{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { Card, Col, Space, Row, Divider } from \"antd\";\nimport NumberFormat from \"react-number-format\";\nimport AmountToggle from \"./Generalui/AmountToggle\";\n\nconst ProductCard = ({\n  product,\n  discount\n}) => {\n  return __jsx(Card, {\n    key: product.id,\n    title: __jsx(React.Fragment, null, __jsx(\"h1\", {\n      style: {\n        display: \"inline\"\n      }\n    }, product.title)),\n    actions: [__jsx(\"div\", null, \"\\uC989\\uC2DC \\uAD6C\\uB9E4\"), __jsx(\"div\", null, \"\\uC7A5\\uBC14\\uAD6C\\uB2C8\")],\n    cover: __jsx(\"img\", {\n      style: {\n        width: \"99%\"\n      },\n      src: product.cover\n    }),\n    hoverable: true\n  }, __jsx(Card.Meta, {\n    description: __jsx(React.Fragment, null, __jsx(Row, {\n      gutter: [16],\n      align: \"middle\"\n    }, __jsx(Col, {\n      md: 16,\n      xs: 16\n    }, discount ? __jsx(React.Fragment, null, __jsx(\"h1\", {\n      style: {\n        color: \"#FF5733\",\n        fontWeight: \"bold\",\n        display: \"inline-block\"\n      }\n    }, __jsx(NumberFormat, {\n      value: product.price * (1 - discount),\n      displayType: \"text\",\n      thousandSeparator: true\n    }), \"\\uC6D0\"), \"  \", __jsx(\"h3\", {\n      style: {\n        color: \"#AA9C99\",\n        display: \"inline-block\"\n      }\n    }, (1 - discount) * 100, \"%\")) : __jsx(React.Fragment, null, __jsx(\"h1\", null, __jsx(NumberFormat, {\n      value: price,\n      displayType: \"text\",\n      thousandSeparator: true\n    }), \"\\uC6D0\")), \" \"), __jsx(Col, {\n      md: 8,\n      xs: 8\n    }, __jsx(AmountToggle, {\n      id: product.id,\n      quantity: product.quantity\n    }))), __jsx(Divider, null), __jsx(\"div\", {\n      style: {\n        textAlign: \"right\"\n      }\n    }, __jsx(\"h1\", null, __jsx(NumberFormat, {\n      value: discount ? product.price * (1 - discount) * product.quantity : product.price * product.quantity,\n      displayType: \"text\",\n      thousandSeparator: true\n    }), \"\\uC6D0\")))\n  }));\n};\n\nexport default ProductCard;","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/components/ProductCard.js"],"names":["Card","Col","Space","Row","Divider","NumberFormat","AmountToggle","ProductCard","product","discount","id","display","title","width","cover","color","fontWeight","price","quantity","textAlign"],"mappings":";;AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,KAApB,EAA2BC,GAA3B,EAAgCC,OAAhC,QAA+C,MAA/C;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAA2B;AAC7C,SACE,MAAC,IAAD;AACE,IAAA,GAAG,EAAED,OAAO,CAACE,EADf;AAEE,IAAA,KAAK,EACH,4BACE;AAAI,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX;AAAX,OAAmCH,OAAO,CAACI,KAA3C,CADF,CAHJ;AAOE,IAAA,OAAO,EAAE,CAAC,+CAAD,EAAmB,8CAAnB,CAPX;AAQE,IAAA,KAAK,EAAE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAZ;AAA8B,MAAA,GAAG,EAAEL,OAAO,CAACM;AAA3C,MART;AASE,IAAA,SAAS;AATX,KAWE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,WAAW,EACT,4BACE,MAAC,GAAD;AAAK,MAAA,MAAM,EAAE,CAAC,EAAD,CAAb;AAAmB,MAAA,KAAK,EAAC;AAAzB,OACE,MAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,EAAE,EAAE;AAAjB,OACGL,QAAQ,GACP,4BACE;AAAI,MAAA,KAAK,EAAE;AAAEM,QAAAA,KAAK,EAAE,SAAT;AAAoBC,QAAAA,UAAU,EAAE,MAAhC;AAAwCL,QAAAA,OAAO,EAAE;AAAjD;AAAX,OACE,MAAC,YAAD;AACE,MAAA,KAAK,EAAEH,OAAO,CAACS,KAAR,IAAiB,IAAIR,QAArB,CADT;AAEE,MAAA,WAAW,EAAE,MAFf;AAGE,MAAA,iBAAiB,EAAE;AAHrB,MADF,WADF,EASG,IATH,EAUE;AAAI,MAAA,KAAK,EAAE;AAAEM,QAAAA,KAAK,EAAE,SAAT;AAAoBJ,QAAAA,OAAO,EAAE;AAA7B;AAAX,OACG,CAAC,IAAIF,QAAL,IAAiB,GADpB,MAVF,CADO,GAgBP,4BACE,kBACE,MAAC,YAAD;AAAc,MAAA,KAAK,EAAEQ,KAArB;AAA4B,MAAA,WAAW,EAAE,MAAzC;AAAiD,MAAA,iBAAiB,EAAE;AAApE,MADF,WADF,CAjBJ,EAsBK,GAtBL,CADF,EAyBE,MAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAY,MAAA,EAAE,EAAE;AAAhB,OACE,MAAC,YAAD;AAAc,MAAA,EAAE,EAAET,OAAO,CAACE,EAA1B;AAA8B,MAAA,QAAQ,EAAEF,OAAO,CAACU;AAAhD,MADF,CAzBF,CADF,EA8BE,MAAC,OAAD,OA9BF,EA+BE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb;AAAZ,OACE,kBACE,MAAC,YAAD;AACE,MAAA,KAAK,EACHV,QAAQ,GACJD,OAAO,CAACS,KAAR,IAAiB,IAAIR,QAArB,IAAiCD,OAAO,CAACU,QADrC,GAEJV,OAAO,CAACS,KAAR,GAAgBT,OAAO,CAACU,QAJhC;AAME,MAAA,WAAW,EAAE,MANf;AAOE,MAAA,iBAAiB,EAAE;AAPrB,MADF,WADF,CA/BF;AAFJ,IAXF,CADF;AAgED,CAjED;;AAmEA,eAAeX,WAAf","sourcesContent":["import { Card, Col, Space, Row, Divider } from \"antd\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport AmountToggle from \"./Generalui/AmountToggle\";\r\n\r\nconst ProductCard = ({ product, discount }) => {\r\n  return (\r\n    <Card\r\n      key={product.id}\r\n      title={\r\n        <>\r\n          <h1 style={{ display: \"inline\" }}>{product.title}</h1>\r\n        </>\r\n      }\r\n      actions={[<div>즉시 구매</div>, <div>장바구니</div>]}\r\n      cover={<img style={{ width: \"99%\" }} src={product.cover} />}\r\n      hoverable\r\n    >\r\n      <Card.Meta\r\n        description={\r\n          <>\r\n            <Row gutter={[16]} align=\"middle\">\r\n              <Col md={16} xs={16}>\r\n                {discount ? (\r\n                  <>\r\n                    <h1 style={{ color: \"#FF5733\", fontWeight: \"bold\", display: \"inline-block\" }}>\r\n                      <NumberFormat\r\n                        value={product.price * (1 - discount)}\r\n                        displayType={\"text\"}\r\n                        thousandSeparator={true}\r\n                      />\r\n                      원\r\n                    </h1>\r\n                    {\"  \"}\r\n                    <h3 style={{ color: \"#AA9C99\", display: \"inline-block\" }}>\r\n                      {(1 - discount) * 100}%\r\n                    </h3>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <h1>\r\n                      <NumberFormat value={price} displayType={\"text\"} thousandSeparator={true} />원\r\n                    </h1>\r\n                  </>\r\n                )}{\" \"}\r\n              </Col>\r\n              <Col md={8} xs={8}>\r\n                <AmountToggle id={product.id} quantity={product.quantity} />\r\n              </Col>\r\n            </Row>\r\n            <Divider />\r\n            <div style={{ textAlign: \"right\" }}>\r\n              <h1>\r\n                <NumberFormat\r\n                  value={\r\n                    discount\r\n                      ? product.price * (1 - discount) * product.quantity\r\n                      : product.price * product.quantity\r\n                  }\r\n                  displayType={\"text\"}\r\n                  thousandSeparator={true}\r\n                />\r\n                원\r\n              </h1>\r\n            </div>\r\n          </>\r\n        }\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ProductCard;\r\n"]},"metadata":{},"sourceType":"module"}