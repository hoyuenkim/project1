{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nimport { Button, Form, Input, Card, Space, Switch } from \"antd\";\nimport { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useInput, useChecked } from \"../../components/Generalui/CustomHooks\";\nimport DaumPostcode from \"react-daum-postcode\";\nimport Terms from \"../../components/Generalui/Terms\";\nimport axios from \"axios\";\nimport { SIGN_UP_REQUEST } from \"../../reducers/user\";\nimport Router from \"next/router\";\nimport { PAGE_CHANGE_SUCCESS } from \"../../reducers/admin\";\nimport KakaoAddress from \"../../components/Generalui/KakaoAddress\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\naxios.defaults.baseURL = \"\".concat(process.env.BACKEND_IP);\n\nvar Signup = function Signup() {\n  _s();\n\n  var _useInput = useInput(),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      email = _useInput2[0],\n      onChangeEmail = _useInput2[1];\n\n  var _useInput3 = useInput(),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      password = _useInput4[0],\n      onChangePassword = _useInput4[1];\n\n  var _useInput5 = useInput(),\n      _useInput6 = _slicedToArray(_useInput5, 2),\n      passwordCheck = _useInput6[0],\n      onChangePasswordCheck = _useInput6[1];\n\n  var _useInput7 = useInput(),\n      _useInput8 = _slicedToArray(_useInput7, 2),\n      name = _useInput8[0],\n      onChangeName = _useInput8[1];\n\n  var _useInput9 = useInput(),\n      _useInput10 = _slicedToArray(_useInput9, 2),\n      shopName = _useInput10[0],\n      onChangeShopName = _useInput10[1];\n\n  var _useState = useState(),\n      bizcode = _useState[0],\n      setBizcode = _useState[1];\n\n  var _useState2 = useState(),\n      address = _useState2[0],\n      setAddress = _useState2[1];\n\n  var _useInput11 = useInput(),\n      _useInput12 = _slicedToArray(_useInput11, 2),\n      addressDetail = _useInput12[0],\n      onChangeAddressDetail = _useInput12[1];\n\n  var _useState3 = useState(false),\n      termToggle = _useState3[0],\n      setTermToggle = _useState3[1];\n\n  var _useState4 = useState(false),\n      termError = _useState4[0],\n      setTermError = _useState4[1];\n\n  var _useState5 = useState(false),\n      divisionToggle = _useState5[0],\n      setDivisionToggle = _useState5[1]; // const [addressToggle, setAddressToggle] = useState(false);\n\n\n  var _useState6 = useState([]),\n      coordinates = _useState6[0],\n      setCoordinates = _useState6[1];\n\n  var _useChecked = useChecked(false),\n      _useChecked2 = _slicedToArray(_useChecked, 3),\n      personalInformationTerm = _useChecked2[0],\n      togglePersonalInformationTerm = _useChecked2[1],\n      setPersonalInformationTerm = _useChecked2[2];\n\n  var _useChecked3 = useChecked(false),\n      _useChecked4 = _slicedToArray(_useChecked3, 3),\n      thirdPartyIngormationTerm = _useChecked4[0],\n      toggleThirdPartyInformationTerm = _useChecked4[1],\n      setThirdPartyInformationTerm = _useChecked4[2];\n\n  var _useChecked5 = useChecked(false),\n      _useChecked6 = _slicedToArray(_useChecked5, 3),\n      locationTerm = _useChecked6[0],\n      toggleLocationTerm = _useChecked6[1],\n      setLocationTerm = _useChecked6[2];\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch({\n      type: PAGE_CHANGE_SUCCESS,\n      data: \"signup\"\n    });\n  });\n\n  var onClickTermToggle = function onClickTermToggle() {\n    return setTermToggle(!termToggle);\n  }; // const handleComplete = (data) => {\n  //   let fullAddress = data.address;\n  //   let extraAddress = \"\";\n  //   if (data.addressType === \"R\") {\n  //     if (data.bname !== \"\") {\n  //       extraAddress += data.bname;\n  //     }\n  //     if (data.buildingName !== \"\") {\n  //       extraAddress += extraAddress !== \"\" ? `, ${data.buildingName}` : data.buildingName;\n  //     }\n  //     fullAddress += extraAddress !== \"\" ? ` (${extraAddress})` : \"\";\n  //   }\n  //   setAddress(fullAddress);\n  //   axios\n  //     .get(`https://dapi.kakao.com/v2/local/search/address.json?query=${fullAddress}`, {\n  //       headers: {\n  //         Authorization: `KakaoAK ${process.env.KAKAO_APIKEY}`,\n  //       },\n  //     })\n  //     .then((res) => {\n  //       const location = res.data.documents[0];\n  //       console.log(location.address);\n  //       setCoordinates([Number(location.address.x), Number(location.address.y)]);\n  //     });\n  //   setAddressToggle(false);\n  // };\n\n\n  var onFinish = function onFinish() {\n    dispatch({\n      type: SIGN_UP_REQUEST,\n      data: {\n        username: email,\n        password: password,\n        name: name,\n        bizcode: bizcode,\n        address: address,\n        addressDetail: addressDetail,\n        coordinates: coordinates,\n        shopName: shopName,\n        division: divisionToggle\n      }\n    });\n    Router.push(\"/user/certificate/\".concat(email));\n  };\n\n  var onChangeDivisionToggle = function onChangeDivisionToggle() {\n    setDivisionToggle(!divisionToggle);\n  };\n\n  var onChangeBizcode = function onChangeBizcode(e) {\n    setBizcode(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsx(Card, {\n      title: /*#__PURE__*/_jsxs(Space, {\n        direction: \"horizental\",\n        align: \"baseline\",\n        size: \"large\",\n        children: [divisionToggle ? /*#__PURE__*/_jsx(\"h1\", {\n          children: \"\\uAC00\\uB9F9\\uC810\"\n        }) : /*#__PURE__*/_jsx(\"h1\", {\n          children: \"\\uC77C\\uBC18\\uD68C\\uC6D0\"\n        }), /*#__PURE__*/_jsx(Switch, {\n          onClick: onChangeDivisionToggle,\n          checkedChildren: \"\\uAC00\\uB9F9\\uC810\",\n          unCheckedChildren: \"\\uC77C\\uBC18\\uD68C\\uC6D0\",\n          size: \"middle\"\n        })]\n      }),\n      children: /*#__PURE__*/_jsx(Form, {\n        onFinish: onFinish,\n        encType: \"multipart/form-data\",\n        children: /*#__PURE__*/_jsxs(Space, {\n          direction: \"vertical\",\n          size: \"large\",\n          style: {\n            width: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsx(Terms, {\n            setTerms: [[personalInformationTerm, togglePersonalInformationTerm, setPersonalInformationTerm], [thirdPartyIngormationTerm, toggleThirdPartyInformationTerm, setThirdPartyInformationTerm]]\n          }), /*#__PURE__*/_jsx(Form.Item, {\n            name: \"email\",\n            validateTrigger: \"onBlur\",\n            rules: [{\n              required: true,\n              message: \"이메일를 입력해 주세요!\"\n            }, function () {\n              return {\n                validator: function validator(rule, value) {\n                  return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                    var regex, result;\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            regex = new RegExp(/^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i);\n\n                            if (!(value && value.match(regex))) {\n                              _context.next = 12;\n                              break;\n                            }\n\n                            _context.next = 4;\n                            return axios.post(\"/user/confirm/email\", {\n                              email: value\n                            });\n\n                          case 4:\n                            result = _context.sent;\n\n                            if (!result.data) {\n                              _context.next = 9;\n                              break;\n                            }\n\n                            return _context.abrupt(\"return\", Promise.reject(\"이미 존재하는 이메일입니다\"));\n\n                          case 9:\n                            return _context.abrupt(\"return\", Promise.resolve());\n\n                          case 10:\n                            _context.next = 13;\n                            break;\n\n                          case 12:\n                            return _context.abrupt(\"return\", Promise.reject(\"형식에 맞지 않는 이메일입니다\"));\n\n                          case 13:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }))();\n                }\n              };\n            }],\n            children: /*#__PURE__*/_jsx(Input, {\n              size: \"large\",\n              prefix: \"* Email\",\n              value: email,\n              onChange: onChangeEmail,\n              placeholder: \"Email\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n            })\n          }), /*#__PURE__*/_jsx(Form.Item, {\n            name: \"password\",\n            rules: [{\n              required: true,\n              message: \"비밀번호를 확인해주세요\"\n            }, {\n              pattern: /^[A-Za-z0-9]{6,12}$/,\n              message: \"비밀번호가 형식에 맞지 않습니다\"\n            }],\n            children: /*#__PURE__*/_jsx(Input.Password, {\n              prefix: \"* \\uBE44\\uBC00\\uBC88\\uD638\",\n              size: \"large\",\n              value: password,\n              onChange: onChangePassword,\n              placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n            })\n          }), /*#__PURE__*/_jsx(Form.Item, {\n            name: \"passwordCheck\",\n            dependencies: [\"password\"],\n            rules: [{\n              required: true,\n              message: \"비밀번호를 확인해 주세요\"\n            }, function (_ref) {\n              var getFieldValue = _ref.getFieldValue;\n              return {\n                validator: function validator(rule, value) {\n                  if (!value || getFieldValue(\"password\") === value) {\n                    return Promise.resolve();\n                  }\n\n                  return Promise.reject(\"비밀번호가 일치하지 않습니다.\");\n                }\n              };\n            }],\n            children: /*#__PURE__*/_jsx(Input.Password, {\n              prefix: \"* \\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n              size: \"large\",\n              value: passwordCheck,\n              onChange: onChangePasswordCheck,\n              placeholder: \"\\uB2E4\\uC2DC \\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n            })\n          }), /*#__PURE__*/_jsx(Form.Item, {\n            name: \"name\",\n            rules: [{\n              required: true,\n              message: \"이름을 입력해주세요\"\n            }],\n            children: /*#__PURE__*/_jsx(Input, {\n              prefix: divisionToggle ? \"* 대표자명\" : \"* 이름\",\n              size: \"large\",\n              onChange: onChangeName,\n              value: name\n            })\n          }), divisionToggle && /*#__PURE__*/_jsxs(_Fragment, {\n            children: [/*#__PURE__*/_jsx(Form.Item, {\n              name: \"shopName\",\n              rules: [{\n                required: true,\n                message: \"점포명을 입력해주세요\"\n              }],\n              children: /*#__PURE__*/_jsx(Input, {\n                prefix: \"* 점포명\",\n                size: \"large\",\n                onChange: onChangeShopName,\n                value: shopName\n              })\n            }), /*#__PURE__*/_jsx(Form.Item, {\n              name: \"bizcode\",\n              validateTrigger: \"onBlur\",\n              rules: [{\n                required: true,\n                message: \"사업자 등록번호를 입력해주세요\"\n              }, function () {\n                return {\n                  validator: function validator(rule, value) {\n                    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n                      var checkBizID, result;\n                      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                        while (1) {\n                          switch (_context2.prev = _context2.next) {\n                            case 0:\n                              if (!(!value || !value.match(/\\d{1}/g) || !value.length === 10)) {\n                                _context2.next = 4;\n                                break;\n                              }\n\n                              return _context2.abrupt(\"return\", Promise.reject(\"형식에 맞지 않은 사업자 등록번호입니다\"));\n\n                            case 4:\n                              checkBizID = function checkBizID(bizID) {\n                                var checkID = new Array(1, 3, 7, 1, 3, 7, 1, 3, 5, 1);\n                                var tmpBizID,\n                                    i,\n                                    chkSum = 0,\n                                    c2,\n                                    remander;\n                                bizID = bizID.replace(/-/gi, \"\");\n\n                                for (i = 0; i <= 7; i++) {\n                                  chkSum += checkID[i] * bizID.charAt(i);\n                                }\n\n                                c2 = \"0\" + checkID[8] * bizID.charAt(8);\n                                c2 = c2.substring(c2.length - 2, c2.length);\n                                chkSum += Math.floor(c2.charAt(0)) + Math.floor(c2.charAt(1));\n                                remander = (10 - chkSum % 10) % 10;\n                                if (Math.floor(bizID.charAt(9)) == remander) return true;\n                                return false;\n                              };\n\n                              if (!checkBizID(value)) {\n                                _context2.next = 16;\n                                break;\n                              }\n\n                              _context2.next = 8;\n                              return axios.post(\"/user/confirm/bizcode\", {\n                                bizcode: value\n                              });\n\n                            case 8:\n                              result = _context2.sent;\n\n                              if (result.data) {\n                                _context2.next = 13;\n                                break;\n                              }\n\n                              return _context2.abrupt(\"return\", Promise.resolve());\n\n                            case 13:\n                              return _context2.abrupt(\"return\", Promise.reject(\"이미 존재하는 사업자 등록번호입니다\"));\n\n                            case 14:\n                              _context2.next = 17;\n                              break;\n\n                            case 16:\n                              return _context2.abrupt(\"return\", Promise.reject(\"형식에 맞지 않은 사업자 등록번호입니다\"));\n\n                            case 17:\n                            case \"end\":\n                              return _context2.stop();\n                          }\n                        }\n                      }, _callee2);\n                    }))();\n                  }\n                };\n              }],\n              children: /*#__PURE__*/_jsx(Input, {\n                prefix: \"* 사업자등록번호\",\n                size: \"large\",\n                name: \"bizcode\",\n                value: bizcode,\n                onChange: onChangeBizcode\n              })\n            })]\n          }), /*#__PURE__*/_jsx(KakaoAddress, {\n            address: address,\n            addressDetail: addressDetail,\n            setAddress: setAddress,\n            onChangeAddressDetail: onChangeAddressDetail\n          }), /*#__PURE__*/_jsx(Form.Item, {\n            children: /*#__PURE__*/_jsx(Button, {\n              type: \"primary\",\n              htmlType: \"submit\",\n              style: {\n                width: \"100%\"\n              },\n              children: \"\\uC81C\\uCD9C\"\n            })\n          })]\n        })\n      })\n    })\n  });\n};\n\n_s(Signup, \"eY0QZbmfHXGDp6g0P+DuKWF82CI=\", false, function () {\n  return [useInput, useInput, useInput, useInput, useInput, useInput, useChecked, useChecked, useChecked, useDispatch];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/dev/project1/frontend/pages/user/signup.js"],"names":["Button","Form","Input","Card","Space","Switch","useState","useEffect","useDispatch","useInput","useChecked","DaumPostcode","Terms","axios","SIGN_UP_REQUEST","Router","PAGE_CHANGE_SUCCESS","KakaoAddress","defaults","baseURL","process","env","BACKEND_IP","Signup","email","onChangeEmail","password","onChangePassword","passwordCheck","onChangePasswordCheck","name","onChangeName","shopName","onChangeShopName","bizcode","setBizcode","address","setAddress","addressDetail","onChangeAddressDetail","termToggle","setTermToggle","termError","setTermError","divisionToggle","setDivisionToggle","coordinates","setCoordinates","personalInformationTerm","togglePersonalInformationTerm","setPersonalInformationTerm","thirdPartyIngormationTerm","toggleThirdPartyInformationTerm","setThirdPartyInformationTerm","locationTerm","toggleLocationTerm","setLocationTerm","dispatch","type","data","onClickTermToggle","onFinish","username","division","push","onChangeDivisionToggle","onChangeBizcode","e","target","value","width","required","message","validator","rule","regex","RegExp","match","post","result","Promise","reject","resolve","pattern","getFieldValue","length","checkBizID","bizID","checkID","Array","tmpBizID","i","chkSum","c2","remander","replace","charAt","substring","Math","floor"],"mappings":";;;;;;AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,IAA9B,EAAoCC,KAApC,EAA2CC,MAA3C,QAAyD,MAAzD;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,wCAArC;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,KAAP,MAAkB,kCAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,mBAAT,QAAoC,sBAApC;AACA,OAAOC,YAAP,MAAyB,yCAAzB;;;;AAEAJ,KAAK,CAACK,QAAN,CAAeC,OAAf,aAA4BC,OAAO,CAACC,GAAR,CAAYC,UAAxC;;AACA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA;;AACnB,kBAA+Bd,QAAQ,EAAvC;AAAA;AAAA,MAAOe,KAAP;AAAA,MAAcC,aAAd;;AACA,mBAAqChB,QAAQ,EAA7C;AAAA;AAAA,MAAOiB,QAAP;AAAA,MAAiBC,gBAAjB;;AACA,mBAA+ClB,QAAQ,EAAvD;AAAA;AAAA,MAAOmB,aAAP;AAAA,MAAsBC,qBAAtB;;AACA,mBAA6BpB,QAAQ,EAArC;AAAA;AAAA,MAAOqB,IAAP;AAAA,MAAaC,YAAb;;AACA,mBAAqCtB,QAAQ,EAA7C;AAAA;AAAA,MAAOuB,QAAP;AAAA,MAAiBC,gBAAjB;;AACA,kBAA8B3B,QAAQ,EAAtC;AAAA,MAAO4B,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAA8B7B,QAAQ,EAAtC;AAAA,MAAO8B,OAAP;AAAA,MAAgBC,UAAhB;;AACA,oBAA+C5B,QAAQ,EAAvD;AAAA;AAAA,MAAO6B,aAAP;AAAA,MAAsBC,qBAAtB;;AACA,mBAAoCjC,QAAQ,CAAC,KAAD,CAA5C;AAAA,MAAOkC,UAAP;AAAA,MAAmBC,aAAnB;;AACA,mBAAkCnC,QAAQ,CAAC,KAAD,CAA1C;AAAA,MAAOoC,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAA4CrC,QAAQ,CAAC,KAAD,CAApD;AAAA,MAAOsC,cAAP;AAAA,MAAuBC,iBAAvB,iBAXmB,CAYnB;;;AACA,mBAAsCvC,QAAQ,CAAC,EAAD,CAA9C;AAAA,MAAOwC,WAAP;AAAA,MAAoBC,cAApB;;AACA,oBACErC,UAAU,CAAC,KAAD,CADZ;AAAA;AAAA,MAAOsC,uBAAP;AAAA,MAAgCC,6BAAhC;AAAA,MAA+DC,0BAA/D;;AAEA,qBACExC,UAAU,CAAC,KAAD,CADZ;AAAA;AAAA,MAAOyC,yBAAP;AAAA,MAAkCC,+BAAlC;AAAA,MAAmEC,4BAAnE;;AAGA,qBAA4D3C,UAAU,CAAC,KAAD,CAAtE;AAAA;AAAA,MAAO4C,YAAP;AAAA,MAAqBC,kBAArB;AAAA,MAAyCC,eAAzC;;AAEA,MAAMC,QAAQ,GAAGjD,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,YAAM;AACdkD,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE1C,mBAAR;AAA6B2C,MAAAA,IAAI,EAAE;AAAnC,KAAD,CAAR;AACD,GAFQ,CAAT;;AAIA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9B,WAAOnB,aAAa,CAAC,CAACD,UAAF,CAApB;AACD,GAFD,CA3BmB,CA+BnB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AAEA,MAAMqB,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrBJ,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAE5C,eADC;AAEP6C,MAAAA,IAAI,EAAE;AACJG,QAAAA,QAAQ,EAAEtC,KADN;AAEJE,QAAAA,QAAQ,EAARA,QAFI;AAGJI,QAAAA,IAAI,EAAJA,IAHI;AAIJI,QAAAA,OAAO,EAAPA,OAJI;AAKJE,QAAAA,OAAO,EAAPA,OALI;AAMJE,QAAAA,aAAa,EAAbA,aANI;AAOJQ,QAAAA,WAAW,EAAXA,WAPI;AAQJd,QAAAA,QAAQ,EAARA,QARI;AASJ+B,QAAAA,QAAQ,EAAEnB;AATN;AAFC,KAAD,CAAR;AAcA7B,IAAAA,MAAM,CAACiD,IAAP,6BAAiCxC,KAAjC;AACD,GAhBD;;AAkBA,MAAMyC,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAM;AACnCpB,IAAAA,iBAAiB,CAAC,CAACD,cAAF,CAAjB;AACD,GAFD;;AAIA,MAAMsB,eAAe,GAAG,SAAlBA,eAAkB,CAACC,CAAD,EAAO;AAC7BhC,IAAAA,UAAU,CAACgC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACD,GAFD;;AAIA,sBACE;AAAA,2BACE,KAAC,IAAD;AACE,MAAA,KAAK,eACH,MAAC,KAAD;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,KAAK,YAAnC;AAAiD,QAAA,IAAI,SAArD;AAAA,mBACGzB,cAAc,gBAAG;AAAA;AAAA,UAAH,gBAAkB;AAAA;AAAA,UADnC,eAEE,KAAC,MAAD;AACE,UAAA,OAAO,EAAEqB,sBADX;AAEE,UAAA,eAAe,sBAFjB;AAGE,UAAA,iBAAiB,4BAHnB;AAIE,UAAA,IAAI,EAAE;AAJR,UAFF;AAAA,QAFJ;AAAA,6BAaE,KAAC,IAAD;AAAM,QAAA,QAAQ,EAAEJ,QAAhB;AAA0B,QAAA,OAAO,EAAE,qBAAnC;AAAA,+BACE,MAAC,KAAD;AAAO,UAAA,SAAS,EAAC,UAAjB;AAA4B,UAAA,IAAI,EAAE,OAAlC;AAA2C,UAAA,KAAK,EAAE;AAAES,YAAAA,KAAK,EAAE;AAAT,WAAlD;AAAA,kCACE,KAAC,KAAD;AACE,YAAA,QAAQ,EAAE,CACR,CACEtB,uBADF,EAEEC,6BAFF,EAGEC,0BAHF,CADQ,EAMR,CACEC,yBADF,EAEEC,+BAFF,EAGEC,4BAHF,CANQ;AADZ,YADF,eAgBE,KAAC,IAAD,CAAM,IAAN;AACE,YAAA,IAAI,EAAC,OADP;AAEE,YAAA,eAAe,EAAC,QAFlB;AAGE,YAAA,KAAK,EAAE,CACL;AACEkB,cAAAA,QAAQ,EAAE,IADZ;AAEEC,cAAAA,OAAO,EAAE;AAFX,aADK,EAKL;AAAA,qBAAO;AACCC,gBAAAA,SADD,qBACWC,IADX,EACiBL,KADjB,EACwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACrBM,4BAAAA,KADqB,GACb,IAAIC,MAAJ,CACZ,kFADY,CADa;;AAAA,kCAIvBP,KAAK,IAAIA,KAAK,CAACQ,KAAN,CAAYF,KAAZ,CAJc;AAAA;AAAA;AAAA;;AAAA;AAAA,mCAKJ9D,KAAK,CAACiE,IAAN,CAAW,qBAAX,EAAkC;AACrDtD,8BAAAA,KAAK,EAAE6C;AAD8C,6BAAlC,CALI;;AAAA;AAKnBU,4BAAAA,MALmB;;AAAA,iCAQrBA,MAAM,CAACpB,IARc;AAAA;AAAA;AAAA;;AAAA,6DAShBqB,OAAO,CAACC,MAAR,CAAe,gBAAf,CATgB;;AAAA;AAAA,6DAWhBD,OAAO,CAACE,OAAR,EAXgB;;AAAA;AAAA;AAAA;;AAAA;AAAA,6DAclBF,OAAO,CAACC,MAAR,CAAe,kBAAf,CAdkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgB5B;AAjBI,eAAP;AAAA,aALK,CAHT;AAAA,mCA6BE,KAAC,KAAD;AACE,cAAA,IAAI,SADN;AAEE,cAAA,MAAM,WAFR;AAGE,cAAA,KAAK,EAAEzD,KAHT;AAIE,cAAA,QAAQ,EAAEC,aAJZ;AAKE,cAAA,WAAW,EAAC;AALd;AA7BF,YAhBF,eAqDE,KAAC,IAAD,CAAM,IAAN;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,KAAK,EAAE,CACL;AACE8C,cAAAA,QAAQ,EAAE,IADZ;AAEEC,cAAAA,OAAO,EAAE;AAFX,aADK,EAKL;AACEW,cAAAA,OAAO,EAAE,qBADX;AAEEX,cAAAA,OAAO,EAAE;AAFX,aALK,CAFT;AAAA,mCAaE,KAAC,KAAD,CAAO,QAAP;AACE,cAAA,MAAM,8BADR;AAEE,cAAA,IAAI,SAFN;AAGE,cAAA,KAAK,EAAE9C,QAHT;AAIE,cAAA,QAAQ,EAAEC,gBAJZ;AAKE,cAAA,WAAW,EAAC;AALd;AAbF,YArDF,eA0EE,KAAC,IAAD,CAAM,IAAN;AACE,YAAA,IAAI,EAAC,eADP;AAEE,YAAA,YAAY,EAAE,CAAC,UAAD,CAFhB;AAGE,YAAA,KAAK,EAAE,CACL;AACE4C,cAAAA,QAAQ,EAAE,IADZ;AAEEC,cAAAA,OAAO,EAAE;AAFX,aADK,EAKL;AAAA,kBAAGY,aAAH,QAAGA,aAAH;AAAA,qBAAwB;AACtBX,gBAAAA,SADsB,qBACZC,IADY,EACNL,KADM,EACC;AACrB,sBAAI,CAACA,KAAD,IAAUe,aAAa,CAAC,UAAD,CAAb,KAA8Bf,KAA5C,EAAmD;AACjD,2BAAOW,OAAO,CAACE,OAAR,EAAP;AACD;;AACD,yBAAOF,OAAO,CAACC,MAAR,CAAe,kBAAf,CAAP;AACD;AANqB,eAAxB;AAAA,aALK,CAHT;AAAA,mCAkBE,KAAC,KAAD,CAAO,QAAP;AACE,cAAA,MAAM,2CADR;AAEE,cAAA,IAAI,SAFN;AAGE,cAAA,KAAK,EAAErD,aAHT;AAIE,cAAA,QAAQ,EAAEC,qBAJZ;AAKE,cAAA,WAAW,EAAC;AALd;AAlBF,YA1EF,eAoGE,KAAC,IAAD,CAAM,IAAN;AAAW,YAAA,IAAI,EAAC,MAAhB;AAAuB,YAAA,KAAK,EAAE,CAAC;AAAE0C,cAAAA,QAAQ,EAAE,IAAZ;AAAkBC,cAAAA,OAAO,EAAE;AAA3B,aAAD,CAA9B;AAAA,mCACE,KAAC,KAAD;AACE,cAAA,MAAM,EAAE5B,cAAc,GAAG,QAAH,GAAc,MADtC;AAEE,cAAA,IAAI,SAFN;AAGE,cAAA,QAAQ,EAAEb,YAHZ;AAIE,cAAA,KAAK,EAAED;AAJT;AADF,YApGF,EA4GGc,cAAc,iBACb;AAAA,oCACE,KAAC,IAAD,CAAM,IAAN;AACE,cAAA,IAAI,EAAE,UADR;AAEE,cAAA,KAAK,EAAE,CAAC;AAAE2B,gBAAAA,QAAQ,EAAE,IAAZ;AAAkBC,gBAAAA,OAAO,EAAE;AAA3B,eAAD,CAFT;AAAA,qCAIE,KAAC,KAAD;AACE,gBAAA,MAAM,EAAE,OADV;AAEE,gBAAA,IAAI,SAFN;AAGE,gBAAA,QAAQ,EAAEvC,gBAHZ;AAIE,gBAAA,KAAK,EAAED;AAJT;AAJF,cADF,eAYE,KAAC,IAAD,CAAM,IAAN;AACE,cAAA,IAAI,EAAC,SADP;AAEE,cAAA,eAAe,EAAC,QAFlB;AAGE,cAAA,KAAK,EAAE,CACL;AACEuC,gBAAAA,QAAQ,EAAE,IADZ;AAEEC,gBAAAA,OAAO,EAAE;AAFX,eADK,EAKL;AAAA,uBAAO;AACCC,kBAAAA,SADD,qBACWC,IADX,EACiBL,KADjB,EACwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCACvB,CAACA,KAAD,IAAU,CAACA,KAAK,CAACQ,KAAN,CAAY,QAAZ,CAAX,IAAoC,CAACR,KAAK,CAACgB,MAAP,KAAkB,EAD/B;AAAA;AAAA;AAAA;;AAAA,gEAElBL,OAAO,CAACC,MAAR,CAAe,uBAAf,CAFkB;;AAAA;AAIhBK,8BAAAA,UAJgB,GAIzB,SAASA,UAAT,CAAoBC,KAApB,EAA2B;AACzB,oCAAIC,OAAO,GAAG,IAAIC,KAAJ,CAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC,EAAqC,CAArC,CAAd;AACA,oCAAIC,QAAJ;AAAA,oCACEC,CADF;AAAA,oCAEEC,MAAM,GAAG,CAFX;AAAA,oCAGEC,EAHF;AAAA,oCAIEC,QAJF;AAKAP,gCAAAA,KAAK,GAAGA,KAAK,CAACQ,OAAN,CAAc,KAAd,EAAqB,EAArB,CAAR;;AAEA,qCAAKJ,CAAC,GAAG,CAAT,EAAYA,CAAC,IAAI,CAAjB,EAAoBA,CAAC,EAArB;AAAyBC,kCAAAA,MAAM,IAAIJ,OAAO,CAACG,CAAD,CAAP,GAAaJ,KAAK,CAACS,MAAN,CAAaL,CAAb,CAAvB;AAAzB;;AACAE,gCAAAA,EAAE,GAAG,MAAML,OAAO,CAAC,CAAD,CAAP,GAAaD,KAAK,CAACS,MAAN,CAAa,CAAb,CAAxB;AACAH,gCAAAA,EAAE,GAAGA,EAAE,CAACI,SAAH,CAAaJ,EAAE,CAACR,MAAH,GAAY,CAAzB,EAA4BQ,EAAE,CAACR,MAA/B,CAAL;AACAO,gCAAAA,MAAM,IAAIM,IAAI,CAACC,KAAL,CAAWN,EAAE,CAACG,MAAH,CAAU,CAAV,CAAX,IAA2BE,IAAI,CAACC,KAAL,CAAWN,EAAE,CAACG,MAAH,CAAU,CAAV,CAAX,CAArC;AACAF,gCAAAA,QAAQ,GAAG,CAAC,KAAMF,MAAM,GAAG,EAAhB,IAAuB,EAAlC;AAEA,oCAAIM,IAAI,CAACC,KAAL,CAAWZ,KAAK,CAACS,MAAN,CAAa,CAAb,CAAX,KAA+BF,QAAnC,EAA6C,OAAO,IAAP;AAC7C,uCAAO,KAAP;AACD,+BArBwB;;AAAA,mCAsBrBR,UAAU,CAACjB,KAAD,CAtBW;AAAA;AAAA;AAAA;;AAAA;AAAA,qCAuBFxD,KAAK,CAACiE,IAAN,CAAW,uBAAX,EAAoC;AACvD5C,gCAAAA,OAAO,EAAEmC;AAD8C,+BAApC,CAvBE;;AAAA;AAuBjBU,8BAAAA,MAvBiB;;AAAA,kCA0BlBA,MAAM,CAACpB,IA1BW;AAAA;AAAA;AAAA;;AAAA,gEA2BdqB,OAAO,CAACE,OAAR,EA3Bc;;AAAA;AAAA,gEA6BdF,OAAO,CAACC,MAAR,CAAe,qBAAf,CA7Bc;;AAAA;AAAA;AAAA;;AAAA;AAAA,gEAgChBD,OAAO,CAACC,MAAR,CAAe,uBAAf,CAhCgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmC5B;AApCI,iBAAP;AAAA,eALK,CAHT;AAAA,qCAgDE,KAAC,KAAD;AACE,gBAAA,MAAM,EAAE,WADV;AAEE,gBAAA,IAAI,SAFN;AAGE,gBAAA,IAAI,EAAE,SAHR;AAIE,gBAAA,KAAK,EAAE/C,OAJT;AAKE,gBAAA,QAAQ,EAAEgC;AALZ;AAhDF,cAZF;AAAA,YA7GJ,eAoLE,KAAC,YAAD;AACE,YAAA,OAAO,EAAE9B,OADX;AAEE,YAAA,aAAa,EAAEE,aAFjB;AAGE,YAAA,UAAU,EAAED,UAHd;AAIE,YAAA,qBAAqB,EAAEE;AAJzB,YApLF,eAqNE,KAAC,IAAD,CAAM,IAAN;AAAA,mCACE,KAAC,MAAD;AAAQ,cAAA,IAAI,EAAC,SAAb;AAAuB,cAAA,QAAQ,EAAC,QAAhC;AAAyC,cAAA,KAAK,EAAE;AAAE+B,gBAAAA,KAAK;AAAP,eAAhD;AAAA;AAAA;AADF,YArNF;AAAA;AADF;AAbF;AADF,IADF;AA+OD,CAvUD;;GAAM/C,M;UAC2Bd,Q,EACMA,Q,EACUA,Q,EAClBA,Q,EACQA,Q,EAGUA,Q,EAO7CC,U,EAEAA,U,EAE0DA,U,EAE3CF,W;;;KArBbe,M;AAyUN,eAAeA,MAAf","sourcesContent":["import { Button, Form, Input, Card, Space, Switch } from \"antd\";\nimport { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useInput, useChecked } from \"../../components/Generalui/CustomHooks\";\nimport DaumPostcode from \"react-daum-postcode\";\nimport Terms from \"../../components/Generalui/Terms\";\nimport axios from \"axios\";\nimport { SIGN_UP_REQUEST } from \"../../reducers/user\";\nimport Router from \"next/router\";\nimport { PAGE_CHANGE_SUCCESS } from \"../../reducers/admin\";\nimport KakaoAddress from \"../../components/Generalui/KakaoAddress\";\n\naxios.defaults.baseURL = `${process.env.BACKEND_IP}`;\nconst Signup = () => {\n  const [email, onChangeEmail] = useInput();\n  const [password, onChangePassword] = useInput();\n  const [passwordCheck, onChangePasswordCheck] = useInput();\n  const [name, onChangeName] = useInput();\n  const [shopName, onChangeShopName] = useInput();\n  const [bizcode, setBizcode] = useState();\n  const [address, setAddress] = useState();\n  const [addressDetail, onChangeAddressDetail] = useInput();\n  const [termToggle, setTermToggle] = useState(false);\n  const [termError, setTermError] = useState(false);\n  const [divisionToggle, setDivisionToggle] = useState(false);\n  // const [addressToggle, setAddressToggle] = useState(false);\n  const [coordinates, setCoordinates] = useState([]);\n  const [personalInformationTerm, togglePersonalInformationTerm, setPersonalInformationTerm] =\n    useChecked(false);\n  const [thirdPartyIngormationTerm, toggleThirdPartyInformationTerm, setThirdPartyInformationTerm] =\n    useChecked(false);\n\n  const [locationTerm, toggleLocationTerm, setLocationTerm] = useChecked(false);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch({ type: PAGE_CHANGE_SUCCESS, data: \"signup\" });\n  });\n\n  const onClickTermToggle = () => {\n    return setTermToggle(!termToggle);\n  };\n\n  // const handleComplete = (data) => {\n  //   let fullAddress = data.address;\n  //   let extraAddress = \"\";\n\n  //   if (data.addressType === \"R\") {\n  //     if (data.bname !== \"\") {\n  //       extraAddress += data.bname;\n  //     }\n  //     if (data.buildingName !== \"\") {\n  //       extraAddress += extraAddress !== \"\" ? `, ${data.buildingName}` : data.buildingName;\n  //     }\n  //     fullAddress += extraAddress !== \"\" ? ` (${extraAddress})` : \"\";\n  //   }\n\n  //   setAddress(fullAddress);\n\n  //   axios\n  //     .get(`https://dapi.kakao.com/v2/local/search/address.json?query=${fullAddress}`, {\n  //       headers: {\n  //         Authorization: `KakaoAK ${process.env.KAKAO_APIKEY}`,\n  //       },\n  //     })\n  //     .then((res) => {\n  //       const location = res.data.documents[0];\n  //       console.log(location.address);\n  //       setCoordinates([Number(location.address.x), Number(location.address.y)]);\n  //     });\n\n  //   setAddressToggle(false);\n  // };\n\n  const onFinish = () => {\n    dispatch({\n      type: SIGN_UP_REQUEST,\n      data: {\n        username: email,\n        password,\n        name,\n        bizcode,\n        address,\n        addressDetail,\n        coordinates,\n        shopName,\n        division: divisionToggle,\n      },\n    });\n    Router.push(`/user/certificate/${email}`);\n  };\n\n  const onChangeDivisionToggle = () => {\n    setDivisionToggle(!divisionToggle);\n  };\n\n  const onChangeBizcode = (e) => {\n    setBizcode(e.target.value);\n  };\n\n  return (\n    <>\n      <Card\n        title={\n          <Space direction=\"horizental\" align={`baseline`} size={`large`}>\n            {divisionToggle ? <h1>가맹점</h1> : <h1>일반회원</h1>}\n            <Switch\n              onClick={onChangeDivisionToggle}\n              checkedChildren={`가맹점`}\n              unCheckedChildren={`일반회원`}\n              size={\"middle\"}\n            />\n          </Space>\n        }\n      >\n        <Form onFinish={onFinish} encType={\"multipart/form-data\"}>\n          <Space direction=\"vertical\" size={\"large\"} style={{ width: \"100%\" }}>\n            <Terms\n              setTerms={[\n                [\n                  personalInformationTerm,\n                  togglePersonalInformationTerm,\n                  setPersonalInformationTerm,\n                ],\n                [\n                  thirdPartyIngormationTerm,\n                  toggleThirdPartyInformationTerm,\n                  setThirdPartyInformationTerm,\n                ],\n              ]}\n            />\n\n            <Form.Item\n              name=\"email\"\n              validateTrigger=\"onBlur\"\n              rules={[\n                {\n                  required: true,\n                  message: \"이메일를 입력해 주세요!\",\n                },\n                () => ({\n                  async validator(rule, value) {\n                    const regex = new RegExp(\n                      /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i,\n                    );\n                    if (value && value.match(regex)) {\n                      const result = await axios.post(\"/user/confirm/email\", {\n                        email: value,\n                      });\n                      if (result.data) {\n                        return Promise.reject(\"이미 존재하는 이메일입니다\");\n                      } else {\n                        return Promise.resolve();\n                      }\n                    } else {\n                      return Promise.reject(\"형식에 맞지 않는 이메일입니다\");\n                    }\n                  },\n                }),\n              ]}\n            >\n              <Input\n                size={`large`}\n                prefix={`* Email`}\n                value={email}\n                onChange={onChangeEmail}\n                placeholder=\"Email을 입력해주세요\"\n              />\n            </Form.Item>\n            <Form.Item\n              name=\"password\"\n              rules={[\n                {\n                  required: true,\n                  message: \"비밀번호를 확인해주세요\",\n                },\n                {\n                  pattern: /^[A-Za-z0-9]{6,12}$/,\n                  message: \"비밀번호가 형식에 맞지 않습니다\",\n                },\n              ]}\n            >\n              <Input.Password\n                prefix={`* 비밀번호`}\n                size={`large`}\n                value={password}\n                onChange={onChangePassword}\n                placeholder=\"비밀번호를 입력해주세요\"\n              />\n            </Form.Item>\n            <Form.Item\n              name=\"passwordCheck\"\n              dependencies={[\"password\"]}\n              rules={[\n                {\n                  required: true,\n                  message: \"비밀번호를 확인해 주세요\",\n                },\n                ({ getFieldValue }) => ({\n                  validator(rule, value) {\n                    if (!value || getFieldValue(\"password\") === value) {\n                      return Promise.resolve();\n                    }\n                    return Promise.reject(\"비밀번호가 일치하지 않습니다.\");\n                  },\n                }),\n              ]}\n            >\n              <Input.Password\n                prefix={`* 비밀번호 확인`}\n                size={`large`}\n                value={passwordCheck}\n                onChange={onChangePasswordCheck}\n                placeholder=\"다시 비밀번호를 입력해주세요\"\n              />\n            </Form.Item>\n            <Form.Item name=\"name\" rules={[{ required: true, message: \"이름을 입력해주세요\" }]}>\n              <Input\n                prefix={divisionToggle ? \"* 대표자명\" : \"* 이름\"}\n                size={`large`}\n                onChange={onChangeName}\n                value={name}\n              />\n            </Form.Item>\n            {divisionToggle && (\n              <>\n                <Form.Item\n                  name={\"shopName\"}\n                  rules={[{ required: true, message: \"점포명을 입력해주세요\" }]}\n                >\n                  <Input\n                    prefix={\"* 점포명\"}\n                    size={`large`}\n                    onChange={onChangeShopName}\n                    value={shopName}\n                  />\n                </Form.Item>\n                <Form.Item\n                  name=\"bizcode\"\n                  validateTrigger=\"onBlur\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"사업자 등록번호를 입력해주세요\",\n                    },\n                    () => ({\n                      async validator(rule, value) {\n                        if (!value || !value.match(/\\d{1}/g) || !value.length === 10) {\n                          return Promise.reject(\"형식에 맞지 않은 사업자 등록번호입니다\");\n                        } else {\n                          function checkBizID(bizID) {\n                            var checkID = new Array(1, 3, 7, 1, 3, 7, 1, 3, 5, 1);\n                            var tmpBizID,\n                              i,\n                              chkSum = 0,\n                              c2,\n                              remander;\n                            bizID = bizID.replace(/-/gi, \"\");\n\n                            for (i = 0; i <= 7; i++) chkSum += checkID[i] * bizID.charAt(i);\n                            c2 = \"0\" + checkID[8] * bizID.charAt(8);\n                            c2 = c2.substring(c2.length - 2, c2.length);\n                            chkSum += Math.floor(c2.charAt(0)) + Math.floor(c2.charAt(1));\n                            remander = (10 - (chkSum % 10)) % 10;\n\n                            if (Math.floor(bizID.charAt(9)) == remander) return true;\n                            return false;\n                          }\n                          if (checkBizID(value)) {\n                            const result = await axios.post(\"/user/confirm/bizcode\", {\n                              bizcode: value,\n                            });\n                            if (!result.data) {\n                              return Promise.resolve();\n                            } else {\n                              return Promise.reject(\"이미 존재하는 사업자 등록번호입니다\");\n                            }\n                          } else {\n                            return Promise.reject(\"형식에 맞지 않은 사업자 등록번호입니다\");\n                          }\n                        }\n                      },\n                    }),\n                  ]}\n                >\n                  <Input\n                    prefix={\"* 사업자등록번호\"}\n                    size={`large`}\n                    name={\"bizcode\"}\n                    value={bizcode}\n                    onChange={onChangeBizcode}\n                  />\n                </Form.Item>\n              </>\n            )}\n\n            <KakaoAddress\n              address={address}\n              addressDetail={addressDetail}\n              setAddress={setAddress}\n              onChangeAddressDetail={onChangeAddressDetail}\n            />\n            {/* {addressToggle ? (\n              <Card>\n                <DaumPostcode onComplete={handleComplete} autoClose={true} height={\"10\"} />\n              </Card>\n            ) : (\n              <Form.Item\n                name=\"address\"\n                initialValue={address}\n                rules={[{ required: true, message: \"주소를 입력해주세요\" }]}\n              >\n                <Input\n                  prefix=\"* 주소\"\n                  name={\"address\"}\n                  readOnly\n                  onClick={() => setAddressToggle(true)}\n                  size={\"large\"}\n                />\n              </Form.Item>\n            )}\n            <Form.Item>\n              <Input\n                prefix=\"* 상세주소\"\n                name={\"addressDetail\"}\n                onChange={onChangeAddressDetail}\n                size={\"large\"}\n              />\n            </Form.Item> */}\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\" style={{ width: `100%` }}>\n                제출\n              </Button>\n            </Form.Item>\n          </Space>\n        </Form>\n      </Card>\n    </>\n  );\n};\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}