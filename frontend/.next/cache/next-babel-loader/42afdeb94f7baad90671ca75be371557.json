{"ast":null,"code":"import React, { useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Input, Button, message, Card, Space } from 'antd';\nimport { MailOutlined, LockOutlined } from '@ant-design/icons';\nimport { LOG_IN_REQUEST } from '../../reducers/user';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nconst Login = ({\n  setToggleLogin,\n  username,\n  onChangeUsername,\n  setUsername,\n  password,\n  onChangePassword,\n  setPassword\n}) => {\n  const dispatch = useDispatch();\n  const {\n    loginError\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    if (loginError) {\n      message.error(loginError);\n    }\n  }, [loginError]);\n  const {\n    isLoggedIn\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    if (isLoggedIn) {\n      setToggleLogin(false);\n    }\n  });\n\n  const onClickSignUp = () => {\n    setToggleLogin(false);\n    Router.push('/user/signup');\n  };\n\n  const onFinish = useCallback(() => {\n    dispatch({\n      type: LOG_IN_REQUEST,\n      data: {\n        username,\n        password\n      }\n    });\n  }, [username, password]);\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsx(Card, {\n      style: {\n        verticalAlign: 'middle'\n      },\n      children: /*#__PURE__*/_jsx(Form, {\n        onFinish: onFinish,\n        children: /*#__PURE__*/_jsxs(Space, {\n          direction: \"vertical\",\n          size: 'large',\n          style: {\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsx(Form.Item, {\n            name: 'email',\n            rules: [{\n              required: true,\n              message: '이메일을 입력해주세요'\n            }, {\n              type: 'email',\n              message: '형식에 맞지 않는 아이디입니다'\n            }],\n            children: /*#__PURE__*/_jsx(Input, {\n              prefix: /*#__PURE__*/_jsx(MailOutlined, {}),\n              size: 'large',\n              name: 'email',\n              onChange: onChangeUsername\n            })\n          }), /*#__PURE__*/_jsx(Form.Item, {\n            name: 'password',\n            rules: [{\n              required: true,\n              message: '비밀번호를 입력해주세요'\n            }, {\n              pattern: /^[0-9a-zA-Z]{6,12}$/,\n              message: '형식에 맞지 않는 비밀번호입니다'\n            }],\n            children: /*#__PURE__*/_jsx(Input.Password, {\n              name: 'password',\n              prefix: /*#__PURE__*/_jsx(LockOutlined, {}),\n              size: 'large',\n              onChange: onChangePassword\n            })\n          }), /*#__PURE__*/_jsx(Button, {\n            type: 'primary',\n            htmlType: 'submit',\n            style: {\n              width: '100%'\n            },\n            children: \"Login\"\n          }), /*#__PURE__*/_jsx(Button, {\n            style: {\n              width: '100%'\n            },\n            onClick: onClickSignUp,\n            children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n          })]\n        })\n      })\n    })\n  });\n};\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/dev/project1/frontend/components/Forms/Login.js"],"names":["React","useEffect","useCallback","useDispatch","useSelector","Form","Input","Button","message","Card","Space","MailOutlined","LockOutlined","LOG_IN_REQUEST","Link","Router","Login","setToggleLogin","username","onChangeUsername","setUsername","password","onChangePassword","setPassword","dispatch","loginError","state","user","error","isLoggedIn","onClickSignUp","push","onFinish","type","data","verticalAlign","width","required","pattern"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Form, Input, Button, message, Card, Space } from 'antd';\r\nimport { MailOutlined, LockOutlined } from '@ant-design/icons';\r\nimport { LOG_IN_REQUEST } from '../../reducers/user';\r\nimport Link from 'next/link';\r\nimport Router from 'next/router';\r\n\r\nconst Login = ({\r\n  setToggleLogin,\r\n  username,\r\n  onChangeUsername,\r\n  setUsername,\r\n  password,\r\n  onChangePassword,\r\n  setPassword,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { loginError } = useSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    if (loginError) {\r\n      message.error(loginError);\r\n    }\r\n  }, [loginError]);\r\n\r\n  const { isLoggedIn } = useSelector((state) => state.user);\r\n  useEffect(() => {\r\n    if (isLoggedIn) {\r\n      setToggleLogin(false);\r\n    }\r\n  });\r\n\r\n  const onClickSignUp = () => {\r\n    setToggleLogin(false);\r\n    Router.push('/user/signup');\r\n  };\r\n\r\n  const onFinish = useCallback(() => {\r\n    dispatch({\r\n      type: LOG_IN_REQUEST,\r\n      data: {\r\n        username,\r\n        password,\r\n      },\r\n    });\r\n  }, [username, password]);\r\n\r\n  return (\r\n    <>\r\n      <Card style={{ verticalAlign: 'middle' }}>\r\n        <Form onFinish={onFinish}>\r\n          <Space direction=\"vertical\" size={'large'} style={{ width: '100%' }}>\r\n            <Form.Item\r\n              name={'email'}\r\n              rules={[\r\n                { required: true, message: '이메일을 입력해주세요' },\r\n                { type: 'email', message: '형식에 맞지 않는 아이디입니다' },\r\n              ]}\r\n            >\r\n              <Input\r\n                prefix={<MailOutlined />}\r\n                size={'large'}\r\n                name={'email'}\r\n                onChange={onChangeUsername}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name={'password'}\r\n              rules={[\r\n                { required: true, message: '비밀번호를 입력해주세요' },\r\n                {\r\n                  pattern: /^[0-9a-zA-Z]{6,12}$/,\r\n                  message: '형식에 맞지 않는 비밀번호입니다',\r\n                },\r\n              ]}\r\n            >\r\n              <Input.Password\r\n                name={'password'}\r\n                prefix={<LockOutlined />}\r\n                size={'large'}\r\n                onChange={onChangePassword}\r\n              />\r\n            </Form.Item>\r\n            <Button\r\n              type={'primary'}\r\n              htmlType={'submit'}\r\n              style={{ width: '100%' }}\r\n            >\r\n              Login\r\n            </Button>\r\n\r\n            <Button style={{ width: '100%' }} onClick={onClickSignUp}>\r\n              회원가입\r\n            </Button>\r\n          </Space>\r\n        </Form>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}