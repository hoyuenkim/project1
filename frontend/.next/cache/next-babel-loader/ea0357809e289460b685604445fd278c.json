{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hoyuen\\\\Documents\\\\project\\\\project1\\\\frontend\\\\components\\\\ProductCard.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Card, Avatar, Button, Tag } from \"antd\";\nimport { DollarCircleOutlined } from \"@ant-design/icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ADD_QUANTITY_SUCCESS, SUBSTRACT_QUANTITY_SUCCESS } from \"../reducers/products\";\nimport NumberFormat from \"react-number-format\";\nimport Strike from \"react-strike\";\n\nconst ProductCard = ({\n  id,\n  title,\n  cover,\n  price,\n  quantity,\n  discount\n}) => {\n  const dispatch = useDispatch();\n\n  const onClickAdd = () => {\n    try {\n      dispatch({\n        type: ADD_QUANTITY_SUCCESS,\n        data: {\n          id\n        }\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const onClickSubstract = () => {\n    dispatch({\n      type: SUBSTRACT_QUANTITY_SUCCESS,\n      data: {\n        id\n      }\n    });\n  };\n\n  return __jsx(Card, {\n    key: id,\n    title: __jsx(React.Fragment, null, __jsx(\"h1\", {\n      style: {\n        display: \"inline\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }, title), \" \", discount && __jsx(Tag, {\n      color: \"#f50\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 24\n      }\n    }, discount * 100, \"%\")),\n    actions: [__jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, \"\\uC989\\uC2DC \\uAD6C\\uB9E4\"), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 35\n      }\n    }, \"\\uC7A5\\uBC14\\uAD6C\\uB2C8\")],\n    cover: __jsx(\"img\", {\n      src: cover,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 14\n      }\n    }),\n    hoverable: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, __jsx(Card.Meta, {\n    description: __jsx(React.Fragment, null, discount ? __jsx(React.Fragment, null, __jsx(\"h1\", {\n      style: {\n        color: \"#FF5733\",\n        fontWeight: \"bold\",\n        display: \"inline\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, __jsx(React.Fragment, null, __jsx(DollarCircleOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    }), __jsx(NumberFormat, {\n      value: price * (1 - discount),\n      displayType: \"text\",\n      thousandSeparator: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    }))), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }), __jsx(React.Fragment, null, __jsx(\"strike\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 19\n      }\n    }, __jsx(NumberFormat, {\n      value: price,\n      displayType: \"text\",\n      thousandSeparator: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    })))) : __jsx(React.Fragment, null, __jsx(DollarCircleOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }), __jsx(NumberFormat, {\n      value: price,\n      displayType: \"text\",\n      thousandSeparator: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    })), __jsx(\"div\", {\n      style: {\n        padding: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, __jsx(Button, {\n      shape: \"circle\",\n      size: \"small\",\n      onClick: onClickAdd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }, \"+\"), __jsx(NumberFormat, {\n      value: quantity,\n      displayType: \"text\",\n      thousandSeparator: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    }), __jsx(Button, {\n      shape: \"circle\",\n      size: \"small\",\n      onClick: onClickSubstract,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    }, \"-\")), __jsx(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }), __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, __jsx(NumberFormat, {\n      value: discount ? price * (1 - discount) * quantity : price * quantity,\n      displayType: \"text\",\n      thousandSeparator: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ProductCard;","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/components/ProductCard.js"],"names":["Card","Avatar","Button","Tag","DollarCircleOutlined","useDispatch","useSelector","ADD_QUANTITY_SUCCESS","SUBSTRACT_QUANTITY_SUCCESS","NumberFormat","Strike","ProductCard","id","title","cover","price","quantity","discount","dispatch","onClickAdd","type","data","e","console","log","onClickSubstract","display","color","fontWeight","padding"],"mappings":"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","sourcesContent":["import { Card, Avatar, Button, Tag } from \"antd\";\r\nimport { DollarCircleOutlined } from \"@ant-design/icons\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ADD_QUANTITY_SUCCESS, SUBSTRACT_QUANTITY_SUCCESS } from \"../reducers/products\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport Strike from \"react-strike\";\r\n\r\nconst ProductCard = ({ id, title, cover, price, quantity, discount }) => {\r\n  const dispatch = useDispatch();\r\n  const onClickAdd = () => {\r\n    try {\r\n      dispatch({ type: ADD_QUANTITY_SUCCESS, data: { id } });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n  const onClickSubstract = () => {\r\n    dispatch({ type: SUBSTRACT_QUANTITY_SUCCESS, data: { id } });\r\n  };\r\n  return (\r\n    <Card\r\n      key={id}\r\n      title={\r\n        <>\r\n          <h1 style={{ display: \"inline\" }}>{title}</h1>{\" \"}\r\n          {discount && <Tag color=\"#f50\">{discount * 100}%</Tag>}\r\n        </>\r\n      }\r\n      actions={[<div>즉시 구매</div>, <div>장바구니</div>]}\r\n      cover={<img src={cover} />}\r\n      hoverable\r\n    >\r\n      <Card.Meta\r\n        description={\r\n          <>\r\n            {discount ? (\r\n              <>\r\n                <h1 style={{ color: \"#FF5733\", fontWeight: \"bold\", display: \"inline\" }}>\r\n                  <>\r\n                    <DollarCircleOutlined />\r\n                    <NumberFormat\r\n                      value={price * (1 - discount)}\r\n                      displayType={\"text\"}\r\n                      thousandSeparator={true}\r\n                    />\r\n                  </>\r\n                </h1>\r\n                <br />\r\n                <>\r\n                  <strike>\r\n                    <NumberFormat value={price} displayType={\"text\"} thousandSeparator={true} />\r\n                  </strike>\r\n                </>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <DollarCircleOutlined />\r\n                <NumberFormat value={price} displayType={\"text\"} thousandSeparator={true} />\r\n              </>\r\n            )}\r\n            <div style={{ padding: 10 }}>\r\n              <Button shape=\"circle\" size=\"small\" onClick={onClickAdd}>\r\n                +\r\n              </Button>\r\n              <NumberFormat value={quantity} displayType={\"text\"} thousandSeparator={true} />\r\n              <Button shape=\"circle\" size=\"small\" onClick={onClickSubstract}>\r\n                -\r\n              </Button>\r\n            </div>\r\n            <hr />\r\n            <h1>\r\n              <NumberFormat\r\n                value={discount ? price * (1 - discount) * quantity : price * quantity}\r\n                displayType={\"text\"}\r\n                thousandSeparator={true}\r\n              />\r\n            </h1>\r\n          </>\r\n        }\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ProductCard;\r\n"]},"metadata":{},"sourceType":"module"}