{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\hoyuen\\\\Documents\\\\dev\\\\project1\\\\frontend\\\\components\\\\Forms\\\\Login.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Form, Input, Button, message, Card, Space } from \"antd\";\nimport { MailOutlined, LockOutlined } from \"@ant-design/icons\";\nimport { useInput } from \"../Generalui/CustomHooks\";\nimport { LOG_IN_REQUEST } from \"../../reducers/user\";\nimport Link from \"next/link\";\nimport Router from \"next/router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar Login = function Login(_ref) {\n  _s();\n\n  var setToggleLogin = _ref.setToggleLogin;\n  var dispatch = useDispatch();\n\n  var _useInput = useInput(),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      username = _useInput2[0],\n      onChangeUsername = _useInput2[1],\n      setUsername = _useInput2[2];\n\n  var _useInput3 = useInput(),\n      _useInput4 = _slicedToArray(_useInput3, 3),\n      password = _useInput4[0],\n      onChangePassword = _useInput4[1],\n      setPassword = _useInput4[2];\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      loginError = _useSelector.loginError;\n\n  useEffect(function () {\n    if (loginError) {\n      message.error(loginError);\n    }\n  }, [loginError]);\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.user;\n  }),\n      isLoggedIn = _useSelector2.isLoggedIn;\n\n  useEffect(function () {\n    if (isLoggedIn) {\n      setToggleLogin(false);\n    }\n  });\n\n  var onClickSignUp = function onClickSignUp() {\n    setToggleLogin(false);\n    Router.push(\"/user/signup\");\n  };\n\n  var onFinish = useCallback(function () {\n    dispatch({\n      type: LOG_IN_REQUEST,\n      data: {\n        username: username,\n        password: password\n      }\n    });\n  }, [username, password]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        verticalAlign: \"middle\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onFinish: onFinish,\n        children: /*#__PURE__*/_jsxDEV(Space, {\n          direction: \"vertical\",\n          size: \"large\",\n          style: {\n            width: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"email\",\n            rules: [{\n              required: true,\n              message: \"이메일을 입력해주세요\"\n            }, {\n              type: \"email\",\n              message: \"형식에 맞지 않는 아이디입니다\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              prefix: /*#__PURE__*/_jsxDEV(MailOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 25\n              }, _this),\n              size: \"large\",\n              name: \"email\",\n              value: username,\n              onChange: onChangeUsername\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"password\",\n            rules: [{\n              required: true,\n              message: \"비밀번호를 입력해주세요\"\n            }, {\n              pattern: /^[0-9a-zA-Z]{6,12}$/,\n              message: \"형식에 맞지 않는 비밀번호입니다\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input.Password, {\n              name: \"password\",\n              value: password,\n              prefix: /*#__PURE__*/_jsxDEV(LockOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 25\n              }, _this),\n              size: \"large\",\n              onChange: onChangePassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            style: {\n              width: \"100%\"\n            },\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              width: \"100%\"\n            },\n            onClick: onClickSignUp,\n            children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n\n_s(Login, \"q9ZcTwY63U4xh0ewlLUK9Mmog+E=\", false, function () {\n  return [useDispatch, useInput, useInput, useSelector, useSelector];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/dev/project1/frontend/components/Forms/Login.js"],"names":["React","useEffect","useCallback","useDispatch","useSelector","Form","Input","Button","message","Card","Space","MailOutlined","LockOutlined","useInput","LOG_IN_REQUEST","Link","Router","Login","setToggleLogin","dispatch","username","onChangeUsername","setUsername","password","onChangePassword","setPassword","state","user","loginError","error","isLoggedIn","onClickSignUp","push","onFinish","type","data","verticalAlign","width","required","pattern"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,WAA3B,QAA8C,OAA9C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,OAA9B,EAAuCC,IAAvC,EAA6CC,KAA7C,QAA0D,MAA1D;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,mBAA3C;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;;;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAwB;AAAA;;AAAA,MAArBC,cAAqB,QAArBA,cAAqB;AACpC,MAAMC,QAAQ,GAAGhB,WAAW,EAA5B;;AACA,kBAAkDU,QAAQ,EAA1D;AAAA;AAAA,MAAOO,QAAP;AAAA,MAAiBC,gBAAjB;AAAA,MAAmCC,WAAnC;;AACA,mBAAkDT,QAAQ,EAA1D;AAAA;AAAA,MAAOU,QAAP;AAAA,MAAiBC,gBAAjB;AAAA,MAAmCC,WAAnC;;AAEA,qBAAuBrB,WAAW,CAAC,UAACsB,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAAlC;AAAA,MAAQC,UAAR,gBAAQA,UAAR;;AAEA3B,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI2B,UAAJ,EAAgB;AACdpB,MAAAA,OAAO,CAACqB,KAAR,CAAcD,UAAd;AACD;AACF,GAJQ,EAIN,CAACA,UAAD,CAJM,CAAT;;AAMA,sBAAuBxB,WAAW,CAAC,UAACsB,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAAlC;AAAA,MAAQG,UAAR,iBAAQA,UAAR;;AACA7B,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI6B,UAAJ,EAAgB;AACdZ,MAAAA,cAAc,CAAC,KAAD,CAAd;AACD;AACF,GAJQ,CAAT;;AAMA,MAAMa,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1Bb,IAAAA,cAAc,CAAC,KAAD,CAAd;AACAF,IAAAA,MAAM,CAACgB,IAAP,CAAY,cAAZ;AACD,GAHD;;AAKA,MAAMC,QAAQ,GAAG/B,WAAW,CAAC,YAAM;AACjCiB,IAAAA,QAAQ,CAAC;AACPe,MAAAA,IAAI,EAAEpB,cADC;AAEPqB,MAAAA,IAAI,EAAE;AACJf,QAAAA,QAAQ,EAARA,QADI;AAEJG,QAAAA,QAAQ,EAARA;AAFI;AAFC,KAAD,CAAR;AAOD,GAR2B,EAQzB,CAACH,QAAD,EAAWG,QAAX,CARyB,CAA5B;AAUA,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEa,QAAAA,aAAa,EAAE;AAAjB,OAAb;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEH,QAAhB;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,SAAS,EAAC,UAAjB;AAA4B,UAAA,IAAI,EAAE,OAAlC;AAA2C,UAAA,KAAK,EAAE;AAAEI,YAAAA,KAAK,EAAE;AAAT,WAAlD;AAAA,kCACE,QAAC,IAAD,CAAM,IAAN;AACE,YAAA,IAAI,EAAE,OADR;AAEE,YAAA,KAAK,EAAE,CACL;AAAEC,cAAAA,QAAQ,EAAE,IAAZ;AAAkB9B,cAAAA,OAAO,EAAE;AAA3B,aADK,EAEL;AAAE0B,cAAAA,IAAI,EAAE,OAAR;AAAiB1B,cAAAA,OAAO,EAAE;AAA1B,aAFK,CAFT;AAAA,mCAOE,QAAC,KAAD;AACE,cAAA,MAAM,eAAE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,uBADV;AAEE,cAAA,IAAI,EAAE,OAFR;AAGE,cAAA,IAAI,EAAE,OAHR;AAIE,cAAA,KAAK,EAAEY,QAJT;AAKE,cAAA,QAAQ,EAAEC;AALZ;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,mBADF,eAgBE,QAAC,IAAD,CAAM,IAAN;AACE,YAAA,IAAI,EAAE,UADR;AAEE,YAAA,KAAK,EAAE,CACL;AAAEiB,cAAAA,QAAQ,EAAE,IAAZ;AAAkB9B,cAAAA,OAAO,EAAE;AAA3B,aADK,EAEL;AAAE+B,cAAAA,OAAO,EAAE,qBAAX;AAAkC/B,cAAAA,OAAO,EAAE;AAA3C,aAFK,CAFT;AAAA,mCAOE,QAAC,KAAD,CAAO,QAAP;AACE,cAAA,IAAI,EAAE,UADR;AAEE,cAAA,KAAK,EAAEe,QAFT;AAGE,cAAA,MAAM,eAAE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,uBAHV;AAIE,cAAA,IAAI,EAAE,OAJR;AAKE,cAAA,QAAQ,EAAEC;AALZ;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,mBAhBF,eA+BE,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAE,SAAd;AAAyB,YAAA,QAAQ,EAAE,QAAnC;AAA6C,YAAA,KAAK,EAAE;AAAEa,cAAAA,KAAK,EAAE;AAAT,aAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBA/BF,eAmCE,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAE;AAAEA,cAAAA,KAAK,EAAE;AAAT,aAAf;AAAkC,YAAA,OAAO,EAAEN,aAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAnCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA+CD,CAlFD;;GAAMd,K;UACad,W,EACiCU,Q,EACAA,Q,EAE3BT,W,EAQAA,W;;;KAbnBa,K;AAoFN,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Form, Input, Button, message, Card, Space } from \"antd\";\r\nimport { MailOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport { useInput } from \"../Generalui/CustomHooks\";\r\nimport { LOG_IN_REQUEST } from \"../../reducers/user\";\r\nimport Link from \"next/link\";\r\nimport Router from \"next/router\";\r\n\r\nconst Login = ({ setToggleLogin }) => {\r\n  const dispatch = useDispatch();\r\n  const [username, onChangeUsername, setUsername] = useInput();\r\n  const [password, onChangePassword, setPassword] = useInput();\r\n\r\n  const { loginError } = useSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    if (loginError) {\r\n      message.error(loginError);\r\n    }\r\n  }, [loginError]);\r\n\r\n  const { isLoggedIn } = useSelector((state) => state.user);\r\n  useEffect(() => {\r\n    if (isLoggedIn) {\r\n      setToggleLogin(false);\r\n    }\r\n  });\r\n\r\n  const onClickSignUp = () => {\r\n    setToggleLogin(false);\r\n    Router.push(\"/user/signup\");\r\n  };\r\n\r\n  const onFinish = useCallback(() => {\r\n    dispatch({\r\n      type: LOG_IN_REQUEST,\r\n      data: {\r\n        username,\r\n        password,\r\n      },\r\n    });\r\n  }, [username, password]);\r\n\r\n  return (\r\n    <>\r\n      <Card style={{ verticalAlign: \"middle\" }}>\r\n        <Form onFinish={onFinish}>\r\n          <Space direction=\"vertical\" size={\"large\"} style={{ width: \"100%\" }}>\r\n            <Form.Item\r\n              name={\"email\"}\r\n              rules={[\r\n                { required: true, message: \"이메일을 입력해주세요\" },\r\n                { type: \"email\", message: \"형식에 맞지 않는 아이디입니다\" },\r\n              ]}\r\n            >\r\n              <Input\r\n                prefix={<MailOutlined />}\r\n                size={\"large\"}\r\n                name={\"email\"}\r\n                value={username}\r\n                onChange={onChangeUsername}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name={\"password\"}\r\n              rules={[\r\n                { required: true, message: \"비밀번호를 입력해주세요\" },\r\n                { pattern: /^[0-9a-zA-Z]{6,12}$/, message: \"형식에 맞지 않는 비밀번호입니다\" },\r\n              ]}\r\n            >\r\n              <Input.Password\r\n                name={\"password\"}\r\n                value={password}\r\n                prefix={<LockOutlined />}\r\n                size={\"large\"}\r\n                onChange={onChangePassword}\r\n              />\r\n            </Form.Item>\r\n            <Button type={\"primary\"} htmlType={\"submit\"} style={{ width: \"100%\" }}>\r\n              Login\r\n            </Button>\r\n\r\n            <Button style={{ width: \"100%\" }} onClick={onClickSignUp}>\r\n              회원가입\r\n            </Button>\r\n          </Space>\r\n        </Form>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}