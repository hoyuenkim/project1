{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hoyuen\\\\Documents\\\\project\\\\project1\\\\frontend\\\\components\\\\Generalui\\\\Login.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useCallback } from 'react';\nimport { useRouter } from 'next/router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Input, Button, message } from 'antd';\nimport { MailOutlined, LockOutlined } from '@ant-design/icons';\nimport { useInput } from './CustomHooks';\nimport { LOG_IN_REQUEST } from '../../reducers/user';\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const {\n    loginError\n  } = useSelector(state => state.user);\n  const onSubmit = useCallback(() => {\n    dispatch({\n      type: LOG_IN_REQUEST,\n      data: {\n        email,\n        password\n      }\n    });\n  }, [email, password]);\n  message.config({\n    top: '50%'\n  });\n  useEffect(() => {\n    if (loginError) {\n      message.error(loginError.message);\n    }\n  }, [loginError]);\n  const {\n    isLoggedIn\n  } = useSelector(state => state.user);\n  const [username, onChangeUsername] = useInput();\n  const [password, onChangePassword] = useInput();\n  const onFinish = useCallback(() => {\n    dispatch({\n      type: LOG_IN_REQUEST,\n      data: {\n        username,\n        password\n      }\n    });\n    console.log(isLoggedIn);\n  }, [username, password]);\n\n  if (isLoggedIn) {\n    Router.back();\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Card, {\n    style: {\n      height: '100vh',\n      verticalAlign: 'middle'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, __jsx(Form, {\n    onFinish: onFinish,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, __jsx(Space, {\n    direction: \"vertical\",\n    size: 'large',\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"Login\"), __jsx(Form.Item, {\n    name: 'email',\n    rules: [{\n      required: true,\n      message: '이메일을 입력해주세요'\n    }, {\n      type: 'email',\n      message: '형식에 맞지 않는 아이디입니다'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, __jsx(Input, {\n    prefix: __jsx(MailOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    }),\n    size: 'large',\n    name: 'email',\n    value: username,\n    onChange: onChangeUsername,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  })), __jsx(Form.Item, {\n    name: 'password',\n    rules: [{\n      required: true,\n      message: '비밀번호를 입력해주세요'\n    }, {\n      pattern: /^[0-9a-zA-Z]{6,12}$/,\n      message: '형식에 맞지 않는 비밀번호입니다'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, __jsx(Input.Password, {\n    name: 'password',\n    value: password,\n    prefix: __jsx(LockOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    }),\n    size: 'large',\n    onChange: onChangePassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  })), __jsx(Button, {\n    type: 'primary',\n    htmlType: 'submit',\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, \"Login\"), __jsx(Link, {\n    href: '/user/signup',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, __jsx(Button, {\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\")))))));\n};\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/components/Generalui/Login.js"],"names":["React","useEffect","useCallback","useRouter","useDispatch","useSelector","Form","Input","Button","message","MailOutlined","LockOutlined","useInput","LOG_IN_REQUEST","Login","dispatch","router","loginError","state","user","onSubmit","type","data","email","password","config","top","error","isLoggedIn","username","onChangeUsername","onChangePassword","onFinish","console","log","Router","back","height","verticalAlign","width","required","pattern"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Form, Input, Button, message } from 'antd';\r\nimport { MailOutlined, LockOutlined } from '@ant-design/icons';\r\nimport { useInput } from './CustomHooks';\r\nimport { LOG_IN_REQUEST } from '../../reducers/user';\r\n\r\nconst Login = () => {\r\n  const dispatch = useDispatch();\r\n  const router = useRouter();\r\n\r\n  const { loginError } = useSelector((state) => state.user);\r\n\r\n  const onSubmit = useCallback(() => {\r\n    dispatch({\r\n      type: LOG_IN_REQUEST,\r\n      data: {\r\n        email,\r\n        password,\r\n      },\r\n    });\r\n  }, [email, password]);\r\n\r\n  message.config({ top: '50%' });\r\n\r\n  useEffect(() => {\r\n    if (loginError) {\r\n      message.error(loginError.message);\r\n    }\r\n  }, [loginError]);\r\n\r\n  const { isLoggedIn } = useSelector((state) => state.user);\r\n\r\n  const [username, onChangeUsername] = useInput();\r\n  const [password, onChangePassword] = useInput();\r\n\r\n  const onFinish = useCallback(() => {\r\n    dispatch({\r\n      type: LOG_IN_REQUEST,\r\n      data: {\r\n        username,\r\n        password,\r\n      },\r\n    });\r\n    console.log(isLoggedIn);\r\n  }, [username, password]);\r\n\r\n  if (isLoggedIn) {\r\n    Router.back();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card style={{ height: '100vh', verticalAlign: 'middle' }}>\r\n        <Form onFinish={onFinish}>\r\n          <Space direction=\"vertical\" size={'large'} style={{ width: '100%' }}>\r\n            <h1>Login</h1>\r\n            <Form.Item\r\n              name={'email'}\r\n              rules={[\r\n                { required: true, message: '이메일을 입력해주세요' },\r\n                { type: 'email', message: '형식에 맞지 않는 아이디입니다' },\r\n              ]}\r\n            >\r\n              <Input\r\n                prefix={<MailOutlined />}\r\n                size={'large'}\r\n                name={'email'}\r\n                value={username}\r\n                onChange={onChangeUsername}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name={'password'}\r\n              rules={[\r\n                { required: true, message: '비밀번호를 입력해주세요' },\r\n                { pattern: /^[0-9a-zA-Z]{6,12}$/, message: '형식에 맞지 않는 비밀번호입니다' },\r\n              ]}\r\n            >\r\n              <Input.Password\r\n                name={'password'}\r\n                value={password}\r\n                prefix={<LockOutlined />}\r\n                size={'large'}\r\n                onChange={onChangePassword}\r\n              />\r\n            </Form.Item>\r\n            <Button type={'primary'} htmlType={'submit'} style={{ width: '100%' }}>\r\n              Login\r\n            </Button>\r\n            <Link href={'/user/signup'}>\r\n              <a>\r\n                <Button style={{ width: '100%' }}>회원가입</Button>\r\n              </a>\r\n            </Link>\r\n          </Space>\r\n        </Form>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}