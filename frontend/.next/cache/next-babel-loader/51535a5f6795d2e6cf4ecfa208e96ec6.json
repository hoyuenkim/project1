{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hoyuen\\\\Documents\\\\project\\\\project1\\\\frontend\\\\pages\\\\shop\\\\admin\\\\product\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { List, Button, Modal, Avatar, Card, Empty, Checkbox } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { ADMIN_PRODUCTS_REQUEST, DELETE_PRODUCT_REQUEST } from '../../../../reducers/shop';\nimport PropTypes from 'prop-types';\nimport EditProduct from '../../../../components/Generalui/EditProduct';\n\nconst Console = () => {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const {\n    session\n  } = useSelector(state => state.user);\n\n  if (!session || session.division === false) {\n    return router.back();\n  } else {\n    useEffect(() => {\n      dispatch({\n        type: ADMIN_PRODUCTS_REQUEST,\n        ShopId: session.Shops[0].id\n      });\n    }, []);\n  }\n\n  const {\n    0: edit,\n    1: setEdit\n  } = useState(false);\n  const {\n    0: product,\n    1: setProduct\n  } = useState();\n\n  const onToggleEdit = item => {\n    setProduct(item);\n    setEdit(prev => !prev);\n  };\n\n  const onCheckProduct = e => {\n    // console.log(e.target.value);\n    console.log(e.target.checked);\n  };\n\n  const {\n    products\n  } = useSelector(state => state.shop);\n  return __jsx(Card, {\n    extra: __jsx(Checkbox, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 18\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, edit && __jsx(Modal, {\n    title: '수정하기',\n    visible: edit,\n    onCancel: () => {\n      setEdit(false);\n      setProduct(null);\n    },\n    footer: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, __jsx(EditProduct, {\n    product: product,\n    setEdit: setEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  })), products ? __jsx(List, {\n    itemLayout: 'horizontal',\n    dataSource: products,\n    renderItem: item => {\n      return __jsx(React.Fragment, null, __jsx(List.Item, {\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }\n      }, __jsx(Card, {\n        activeTabKey: 'test',\n        style: {\n          width: '100%'\n        },\n        actions: [__jsx(\"div\", {\n          onClick: () => onToggleEdit(item),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 23\n          }\n        }, \"\\uC218\\uC815\"), __jsx(\"div\", {\n          onClick: () => {\n            const flag = confirm(`이 제품을 정말로 삭제하시겠습니까?`);\n\n            if (!flag) {\n              return false;\n            } else {\n              dispatch({\n                type: DELETE_PRODUCT_REQUEST,\n                id: item.id\n              });\n            }\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 23\n          }\n        }, \"\\uC0AD\\uC81C\")],\n        extra: __jsx(Checkbox, {\n          onChange: onCheckProduct,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 28\n          }\n        }),\n        title: item.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 19\n        }\n      }, __jsx(List.Item.Meta, {\n        avatar: __jsx(Avatar, {\n          src: item.Images[0] && `http://127.0.0.1:3065/uploads/${item.Images[0].url}`,\n          shape: 'square',\n          size: 'large',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }\n        }),\n        description: __jsx(React.Fragment, null, __jsx(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 27\n          }\n        }, item.price)),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }\n      }))));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }) : __jsx(React.Fragment, null, __jsx(Empty, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  })));\n};\n\nConsole.protoType = {\n  productList: PropTypes.object.isRequired\n};\nexport default Console;","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/pages/shop/admin/product/index.js"],"names":["List","Button","Modal","Avatar","Card","Empty","Checkbox","useDispatch","useSelector","useEffect","useState","useRouter","ADMIN_PRODUCTS_REQUEST","DELETE_PRODUCT_REQUEST","PropTypes","EditProduct","Console","dispatch","router","session","state","user","division","back","type","ShopId","Shops","id","edit","setEdit","product","setProduct","onToggleEdit","item","prev","onCheckProduct","e","console","log","target","checked","products","shop","width","flag","confirm","title","Images","url","price","protoType","productList","object","isRequired"],"mappings":"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","sourcesContent":["import { List, Button, Modal, Avatar, Card, Empty, Checkbox } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect, useState } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport { ADMIN_PRODUCTS_REQUEST, DELETE_PRODUCT_REQUEST } from '../../../../reducers/shop';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport EditProduct from '../../../../components/Generalui/EditProduct';\r\n\r\nconst Console = () => {\r\n  const dispatch = useDispatch();\r\n  const router = useRouter();\r\n  const { session } = useSelector((state) => state.user);\r\n  if (!session || session.division === false) {\r\n    return router.back();\r\n  } else {\r\n    useEffect(() => {\r\n      dispatch({ type: ADMIN_PRODUCTS_REQUEST, ShopId: session.Shops[0].id });\r\n    }, []);\r\n  }\r\n\r\n  const [edit, setEdit] = useState(false);\r\n  const [product, setProduct] = useState();\r\n\r\n  const onToggleEdit = (item) => {\r\n    setProduct(item);\r\n    setEdit((prev) => !prev);\r\n  };\r\n\r\n  const onCheckProduct = (e) => {\r\n    // console.log(e.target.value);\r\n    console.log(e.target.checked);\r\n  };\r\n\r\n  const { products } = useSelector((state) => state.shop);\r\n\r\n  return (\r\n    <Card extra={<Checkbox />}>\r\n      {edit && (\r\n        <Modal\r\n          title={'수정하기'}\r\n          visible={edit}\r\n          onCancel={() => {\r\n            setEdit(false);\r\n            setProduct(null);\r\n          }}\r\n          footer={null}\r\n        >\r\n          <EditProduct product={product} setEdit={setEdit} />\r\n        </Modal>\r\n      )}\r\n      {products ? (\r\n        <List\r\n          itemLayout={'horizontal'}\r\n          dataSource={products}\r\n          renderItem={(item) => {\r\n            return (\r\n              <>\r\n                <List.Item key={item.id}>\r\n                  <Card\r\n                    activeTabKey={'test'}\r\n                    style={{ width: '100%' }}\r\n                    actions={[\r\n                      <div onClick={() => onToggleEdit(item)}>수정</div>,\r\n                      <div\r\n                        onClick={() => {\r\n                          const flag = confirm(`이 제품을 정말로 삭제하시겠습니까?`);\r\n                          if (!flag) {\r\n                            return false;\r\n                          } else {\r\n                            dispatch({ type: DELETE_PRODUCT_REQUEST, id: item.id });\r\n                          }\r\n                        }}\r\n                      >\r\n                        삭제\r\n                      </div>,\r\n                    ]}\r\n                    extra={<Checkbox onChange={onCheckProduct} />}\r\n                    title={item.title}\r\n                  >\r\n                    <List.Item.Meta\r\n                      avatar={\r\n                        <Avatar\r\n                          src={\r\n                            item.Images[0] && `http://127.0.0.1:3065/uploads/${item.Images[0].url}`\r\n                          }\r\n                          shape={'square'}\r\n                          size={'large'}\r\n                        />\r\n                      }\r\n                      description={\r\n                        <>\r\n                          <p>{item.price}</p>\r\n                        </>\r\n                      }\r\n                    />\r\n                  </Card>\r\n                </List.Item>\r\n              </>\r\n            );\r\n          }}\r\n        />\r\n      ) : (\r\n        <>\r\n          <Empty />\r\n        </>\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nConsole.protoType = {\r\n  productList: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Console;\r\n"]},"metadata":{},"sourceType":"module"}