{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\hoyuen\\\\Documents\\\\project\\\\project1\\\\frontend\\\\pages\\\\cart\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { List, Avatar, Card, Button, Row, Col, Divider, Empty } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RestOutlined } from '@ant-design/icons';\nimport CartAmountToggle from '../../components/Generalui/CartAmoutToggle';\nimport NumberFormat from 'react-number-format';\nimport { REMOVE_ITEM_REQUEST } from '../../reducers/cart';\nimport { useState, useEffect } from 'react';\nimport { useWindowSize } from '@react-hook/window-size';\n\nvar Cart = function Cart() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useState = useState(null),\n      IMP = _useState[0],\n      setIMP = _useState[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.cart;\n  }),\n      cart = _useSelector.cart;\n\n  var _useWindowSize = useWindowSize(),\n      _useWindowSize2 = _slicedToArray(_useWindowSize, 2),\n      windowWidth = _useWindowSize2[0],\n      windowHeight = _useWindowSize2[1];\n\n  useEffect(function () {\n    var _window = window,\n        IMP = _window.IMP;\n    setIMP(IMP);\n  }, []);\n\n  var onClickPayment = function onClickPayment() {\n    if (isLoggedIn) {\n      onWindowScroll();\n\n      if (IMP !== null) {\n        IMP.init('imp37098043');\n        var today = Date.now();\n        IMP.request_pay({\n          pay_method: 'card',\n          name: '테스트',\n          Merchant_uid: 'uid' + today,\n          amount: '테스트',\n          UserId: session.id,\n          ProductId: 1,\n          ShopId: 1\n        }, callback);\n      }\n    } else {\n      onChangeToggleModal();\n    }\n  };\n\n  var callback = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(response) {\n      var success, error_msg;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              success = response.success, error_msg = response.error_msg;\n\n              if (success) {\n                axios // .post(`${hostIp}/payments/complete/${product.id}/${product.Shop.id}/${session.id}`, { data: response })\n                .post(\"http://127.0.0.1:3065/payments/complete/\".concat(product.id, \"/\").concat(product.Shop.id, \"/\").concat(session.id), {\n                  data: response\n                }).then(function (response) {\n                  dispatch({\n                    type: PAYMENT_SUCCESS\n                  }, {\n                    data: response\n                  });\n                })[\"catch\"](function (e) {\n                  console.log(e);\n                  dispatch({\n                    type: PAYMENT_FAILURE\n                  }, {\n                    error: e\n                  });\n                });\n              } else {\n                alert(\"\\uACB0\\uC81C \\uC2E4\\uD328: \".concat(error_msg));\n              }\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function callback(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, cart.length === 0 ? __jsx(Card, {\n    style: {\n      height: '100vh'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    style: {\n      marginTop: windowHeight * 0.3,\n      textAlign: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, __jsx(Empty, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }), __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \"\\uC7A5\\uBC14\\uAD6C\\uB2C8\\uAC00 \\uBE44\\uC5C8\\uC2B5\\uB2C8\\uB2E4\"))) : __jsx(List, {\n    itemLayout: \"horizontal\",\n    dataSource: cart,\n    renderItem: function renderItem(item) {\n      return __jsx(List.Item, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }\n      }, __jsx(Card, {\n        title: __jsx(\"h1\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 24\n          }\n        }, item.title),\n        style: {\n          width: '100%'\n        },\n        extra: __jsx(\"h2\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 19\n          }\n        }, __jsx(RestOutlined, {\n          onClick: function onClick() {\n            dispatch({\n              type: REMOVE_ITEM_REQUEST,\n              id: item.id\n            });\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }\n        })),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }\n      }, __jsx(Card.Meta, {\n        description: __jsx(List.Item.Meta, {\n          avatar: __jsx(Avatar, {\n            size: 100,\n            shape: \"square\",\n            src: \"http://127.0.0.1:3065/uploads/\".concat(item.Images[0].url),\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 25\n            }\n          }),\n          description: __jsx(Row, {\n            Gutter: [8, 16],\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 25\n            }\n          }, __jsx(Col, {\n            span: 24,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 27\n            }\n          }, item.description), __jsx(Col, {\n            span: 16,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 27\n            }\n          }, \"\\uAC00\\uACA9:\", ' ', __jsx(NumberFormat, {\n            value: item.price,\n            displayType: 'text',\n            thousandSeparator: true,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }\n          })), __jsx(Col, {\n            span: 8,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 27\n            }\n          }, __jsx(CartAmountToggle, {\n            id: item.id,\n            quantity: item.quantity,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }\n          }))),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }\n        }),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }\n      }), __jsx(Divider, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }\n      }), __jsx(Row, {\n        gutter: [8, 16],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }\n      }, __jsx(Col, {\n        style: {\n          textAlign: 'right'\n        },\n        span: 24,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 19\n        }\n      }, \"\\uCD1D\\uC561:\", ' ', __jsx(NumberFormat, {\n        value: item.price * item.quantity,\n        displayType: 'text',\n        thousandSeparator: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }\n      })))));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    onClick: onClickPayment,\n    type: 'prime',\n    style: {\n      width: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, \"\\uACB0\\uC81C\\uD558\\uAE30\"));\n};\n\n_s(Cart, \"RRDfX+EG3B0UmQHsYXZImm4ovxs=\", false, function () {\n  return [useDispatch, useSelector, useWindowSize];\n});\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/pages/cart/index.js"],"names":["List","Avatar","Card","Button","Row","Col","Divider","Empty","useDispatch","useSelector","RestOutlined","CartAmountToggle","NumberFormat","REMOVE_ITEM_REQUEST","useState","useEffect","useWindowSize","Cart","dispatch","IMP","setIMP","state","cart","windowWidth","windowHeight","window","onClickPayment","isLoggedIn","onWindowScroll","init","today","Date","now","request_pay","pay_method","name","Merchant_uid","amount","UserId","session","id","ProductId","ShopId","callback","onChangeToggleModal","response","success","error_msg","axios","post","product","Shop","data","then","type","PAYMENT_SUCCESS","e","console","log","PAYMENT_FAILURE","error","alert","length","height","marginTop","textAlign","item","title","width","Images","url","description","price","quantity"],"mappings":"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","sourcesContent":["import { List, Avatar, Card, Button, Row, Col, Divider, Empty } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RestOutlined } from '@ant-design/icons';\r\nimport CartAmountToggle from '../../components/Generalui/CartAmoutToggle';\r\nimport NumberFormat from 'react-number-format';\r\nimport { REMOVE_ITEM_REQUEST } from '../../reducers/cart';\r\nimport { useState, useEffect } from 'react';\r\nimport { useWindowSize } from '@react-hook/window-size';\r\n\r\nconst Cart = () => {\r\n  const dispatch = useDispatch();\r\n  const [IMP, setIMP] = useState(null);\r\n  const { cart } = useSelector((state) => state.cart);\r\n  const [windowWidth, windowHeight] = useWindowSize();\r\n\r\n  useEffect(() => {\r\n    const { IMP } = window;\r\n    setIMP(IMP);\r\n  }, []);\r\n\r\n  const onClickPayment = () => {\r\n    if (isLoggedIn) {\r\n      onWindowScroll();\r\n      if (IMP !== null) {\r\n        IMP.init('imp37098043');\r\n        const today = Date.now();\r\n        IMP.request_pay(\r\n          {\r\n            pay_method: 'card',\r\n            name: '테스트',\r\n            Merchant_uid: 'uid' + today,\r\n            amount: '테스트',\r\n            UserId: session.id,\r\n            ProductId: 1,\r\n            ShopId: 1,\r\n          },\r\n          callback,\r\n        );\r\n      }\r\n    } else {\r\n      onChangeToggleModal();\r\n    }\r\n  };\r\n\r\n  const callback = async (response) => {\r\n    const { success, error_msg } = response;\r\n    if (success) {\r\n      axios\r\n        // .post(`${hostIp}/payments/complete/${product.id}/${product.Shop.id}/${session.id}`, { data: response })\r\n        .post(\r\n          `http://127.0.0.1:3065/payments/complete/${product.id}/${product.Shop.id}/${session.id}`,\r\n          { data: response },\r\n        )\r\n        .then((response) => {\r\n          dispatch({ type: PAYMENT_SUCCESS }, { data: response });\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n          dispatch({ type: PAYMENT_FAILURE }, { error: e });\r\n        });\r\n    } else {\r\n      alert(`결제 실패: ${error_msg}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {cart.length === 0 ? (\r\n        <Card style={{ height: '100vh' }}>\r\n          <div style={{ marginTop: windowHeight * 0.3, textAlign: 'center' }}>\r\n            <Empty />\r\n            <h1>장바구니가 비었습니다</h1>\r\n          </div>\r\n        </Card>\r\n      ) : (\r\n        <List\r\n          itemLayout=\"horizontal\"\r\n          dataSource={cart}\r\n          renderItem={(item) => (\r\n            <List.Item>\r\n              <Card\r\n                title={<h1>{item.title}</h1>}\r\n                style={{ width: '100%' }}\r\n                extra={\r\n                  <h2>\r\n                    <RestOutlined\r\n                      onClick={() => {\r\n                        dispatch({ type: REMOVE_ITEM_REQUEST, id: item.id });\r\n                      }}\r\n                    />\r\n                  </h2>\r\n                }\r\n              >\r\n                <Card.Meta\r\n                  description={\r\n                    <List.Item.Meta\r\n                      avatar={\r\n                        <Avatar\r\n                          size={100}\r\n                          shape=\"square\"\r\n                          src={`http://127.0.0.1:3065/uploads/${item.Images[0].url}`}\r\n                        />\r\n                      }\r\n                      description={\r\n                        <Row Gutter={[8, 16]}>\r\n                          <Col span={24}>{item.description}</Col>\r\n                          <Col span={16}>\r\n                            가격:{' '}\r\n                            <NumberFormat\r\n                              value={item.price}\r\n                              displayType={'text'}\r\n                              thousandSeparator={true}\r\n                            />\r\n                          </Col>\r\n                          <Col span={8}>\r\n                            <CartAmountToggle id={item.id} quantity={item.quantity} />\r\n                          </Col>\r\n                        </Row>\r\n                      }\r\n                    />\r\n                  }\r\n                />\r\n                <Divider />\r\n                <Row gutter={[8, 16]}>\r\n                  <Col style={{ textAlign: 'right' }} span={24}>\r\n                    총액:{' '}\r\n                    <NumberFormat\r\n                      value={item.price * item.quantity}\r\n                      displayType={'text'}\r\n                      thousandSeparator={true}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </Card>\r\n            </List.Item>\r\n          )}\r\n        />\r\n      )}\r\n      <Button onClick={onClickPayment} type={'prime'} style={{ width: '100%' }}>\r\n        결제하기\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n"]},"metadata":{},"sourceType":"module"}