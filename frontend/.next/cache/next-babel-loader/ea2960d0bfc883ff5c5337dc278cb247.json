{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(addProduct),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchAddProduct),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(loadProducts),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadProducts),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(productsSaga);\n\nimport axios from \"axios\";\nimport { all, put, fork, call, takeLatest } from \"redux-saga/effects\";\nimport { ADD_PRODUCT_REQUEST, ADD_PRODUCT_SUCCESS, ADD_PRODUCT_FAILURE, LOAD_PRODUCTS_REQUEST, LOAD_PRODUCTS_SUCCESS, LOAD_PRODUCTS_FAILURE } from \"../reducers/shop\";\n\nfunction addProductApi(data) {\n  return axios.post(\"/products/add\", data, {\n    withCredentials: true\n  });\n}\n\nfunction addProduct(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function addProduct$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(addProductApi, action.formData);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            type: ADD_PRODUCT_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context.next = 13;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n          _context.next = 13;\n          return put({\n            type: ADD_PRODUCT_FAILURE,\n            error: _context.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction watchAddProduct() {\n  return _regeneratorRuntime.wrap(function watchAddProduct$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(ADD_PRODUCT_REQUEST, addProduct);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction loadProductsApi(data) {\n  console.log(data);\n  return axios.post(\"/products/load\"), {\n    data: data\n  }, {\n    withCredentials: true\n  };\n}\n\nfunction loadProducts(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadProducts$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(loadProductsApi, action.data);\n\n        case 3:\n          result = _context3.sent;\n          _context3.next = 6;\n          return put({\n            type: LOAD_PRODUCTS_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context3.next = 13;\n          break;\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(_context3.t0);\n          _context3.next = 13;\n          return put({\n            type: LOAD_PRODUCTS_FAILURE,\n            error: _context3.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 8]]);\n}\n\nfunction watchLoadProducts() {\n  return _regeneratorRuntime.wrap(function watchLoadProducts$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(LOAD_PRODUCTS_REQUEST, loadProducts);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nexport default function productsSaga() {\n  return _regeneratorRuntime.wrap(function productsSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return all([fork(watchAddProduct), fork(watchLoadProducts)]);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/sagas/shop.js"],"names":["addProduct","watchAddProduct","loadProducts","watchLoadProducts","productsSaga","axios","all","put","fork","call","takeLatest","ADD_PRODUCT_REQUEST","ADD_PRODUCT_SUCCESS","ADD_PRODUCT_FAILURE","LOAD_PRODUCTS_REQUEST","LOAD_PRODUCTS_SUCCESS","LOAD_PRODUCTS_FAILURE","addProductApi","data","post","withCredentials","action","formData","result","type","console","log","error","loadProductsApi"],"mappings":";;oDAiBUA,U;qDAUAC,e;qDASAC,Y;qDAUAC,iB;qDAIeC,Y;;AAlDzB,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,UAA/B,QAAiD,oBAAjD;AACA,SACEC,mBADF,EAEEC,mBAFF,EAGEC,mBAHF,EAIEC,qBAJF,EAKEC,qBALF,EAMEC,qBANF,QAOO,kBAPP;;AASA,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AAC3B,SAAOb,KAAK,CAACc,IAAN,CAAW,eAAX,EAA4BD,IAA5B,EAAkC;AACvCE,IAAAA,eAAe,EAAE;AADsB,GAAlC,CAAP;AAGD;;AAED,SAAUpB,UAAV,CAAqBqB,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEmB,iBAAMZ,IAAI,CAACQ,aAAD,EAAgBI,MAAM,CAACC,QAAvB,CAAV;;AAFnB;AAEUC,UAAAA,MAFV;AAAA;AAGI,iBAAMhB,GAAG,CAAC;AAAEiB,YAAAA,IAAI,EAAEZ,mBAAR;AAA6BM,YAAAA,IAAI,EAAEK,MAAM,CAACL;AAA1C,WAAD,CAAT;;AAHJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAKIO,UAAAA,OAAO,CAACC,GAAR;AALJ;AAMI,iBAAMnB,GAAG,CAAC;AAAEiB,YAAAA,IAAI,EAAEX,mBAAR;AAA6Bc,YAAAA,KAAK;AAAlC,WAAD,CAAT;;AANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUA,SAAU1B,eAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMS,UAAU,CAACC,mBAAD,EAAsBX,UAAtB,CAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAS4B,eAAT,CAAyBV,IAAzB,EAA+B;AAC7BO,EAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AACA,SAAOb,KAAK,CAACc,IAAN,CAAW,gBAAX,GAA8B;AAAED,IAAAA,IAAI,EAAJA;AAAF,GAA9B,EAAwC;AAAEE,IAAAA,eAAe,EAAE;AAAnB,GAA/C;AACD;;AAED,SAAUlB,YAAV,CAAuBmB,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEmB,iBAAMZ,IAAI,CAACmB,eAAD,EAAkBP,MAAM,CAACH,IAAzB,CAAV;;AAFnB;AAEUK,UAAAA,MAFV;AAAA;AAGI,iBAAMhB,GAAG,CAAC;AAAEiB,YAAAA,IAAI,EAAET,qBAAR;AAA+BG,YAAAA,IAAI,EAAEK,MAAM,CAACL;AAA5C,WAAD,CAAT;;AAHJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAKIO,UAAAA,OAAO,CAACC,GAAR;AALJ;AAMI,iBAAMnB,GAAG,CAAC;AAAEiB,YAAAA,IAAI,EAAER,qBAAR;AAA+BW,YAAAA,KAAK;AAApC,WAAD,CAAT;;AANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUA,SAAUxB,iBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMO,UAAU,CAACI,qBAAD,EAAwBZ,YAAxB,CAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAe,SAAUE,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAME,GAAG,CAAC,CAACE,IAAI,CAACP,eAAD,CAAL,EAAwBO,IAAI,CAACL,iBAAD,CAA5B,CAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import axios from \"axios\";\r\nimport { all, put, fork, call, takeLatest } from \"redux-saga/effects\";\r\nimport {\r\n  ADD_PRODUCT_REQUEST,\r\n  ADD_PRODUCT_SUCCESS,\r\n  ADD_PRODUCT_FAILURE,\r\n  LOAD_PRODUCTS_REQUEST,\r\n  LOAD_PRODUCTS_SUCCESS,\r\n  LOAD_PRODUCTS_FAILURE,\r\n} from \"../reducers/shop\";\r\n\r\nfunction addProductApi(data) {\r\n  return axios.post(\"/products/add\", data, {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* addProduct(action) {\r\n  try {\r\n    const result = yield call(addProductApi, action.formData);\r\n    yield put({ type: ADD_PRODUCT_SUCCESS, data: result.data });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({ type: ADD_PRODUCT_FAILURE, error: e });\r\n  }\r\n}\r\n\r\nfunction* watchAddProduct() {\r\n  yield takeLatest(ADD_PRODUCT_REQUEST, addProduct);\r\n}\r\n\r\nfunction loadProductsApi(data) {\r\n  console.log(data);\r\n  return axios.post(\"/products/load\"), { data }, { withCredentials: true };\r\n}\r\n\r\nfunction* loadProducts(action) {\r\n  try {\r\n    const result = yield call(loadProductsApi, action.data);\r\n    yield put({ type: LOAD_PRODUCTS_SUCCESS, data: result.data });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({ type: LOAD_PRODUCTS_FAILURE, error: e });\r\n  }\r\n}\r\n\r\nfunction* watchLoadProducts() {\r\n  yield takeLatest(LOAD_PRODUCTS_REQUEST, loadProducts);\r\n}\r\n\r\nexport default function* productsSaga() {\r\n  yield all([fork(watchAddProduct), fork(watchLoadProducts)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}