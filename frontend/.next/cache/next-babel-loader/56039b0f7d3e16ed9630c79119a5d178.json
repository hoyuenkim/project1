{"ast":null,"code":"import { Button, Form, Input, Card, Space, Switch } from \"antd\";\nimport { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useInput, useChecked } from \"../../components/Generalui/CustomHooks\";\nimport Terms from \"../../components/Generalui/Terms\";\nimport axios from \"axios\";\nimport { SIGN_UP_REQUEST } from \"../../reducers/user\";\nimport Router from \"next/router\";\nimport { PAGE_CHANGE_SUCCESS } from \"../../reducers/admin\";\nimport KakaoAddress from \"../../components/Generalui/KakaoAddress\";\nimport AddressDetailForm from \"../../components/Generalui/AddressDetailForm\";\nimport BizcodeForm from \"../../components/Forms/BizcodeForm\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\naxios.defaults.baseURL = `${process.env.BACKEND_IP}`;\n\nconst Signup = () => {\n  const [email, onChangeEmail] = useInput();\n  const [password, onChangePassword] = useInput();\n  const [passwordCheck, onChangePasswordCheck] = useInput();\n  const [name, onChangeName] = useInput();\n  const [shopName, onChangeShopName] = useInput();\n  const {\n    0: bizcode,\n    1: setBizcode\n  } = useState();\n  const {\n    0: address,\n    1: setAddress\n  } = useState();\n  const [addressDetail, onChangeAddressDetail] = useInput();\n  const {\n    0: termToggle,\n    1: setTermToggle\n  } = useState(false);\n  const {\n    0: termError,\n    1: setTermError\n  } = useState(false);\n  const {\n    0: divisionToggle,\n    1: setDivisionToggle\n  } = useState(false);\n  const {\n    0: coordinates,\n    1: setCoordinates\n  } = useState([]);\n  const [personalInformationTerm, togglePersonalInformationTerm, setPersonalInformationTerm] = useChecked(false);\n  const [thirdPartyIngormationTerm, toggleThirdPartyInformationTerm, setThirdPartyInformationTerm] = useChecked(false);\n  const [locationTerm, toggleLocationTerm, setLocationTerm] = useChecked(false);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch({\n      type: PAGE_CHANGE_SUCCESS,\n      data: \"signup\"\n    });\n  });\n\n  const onClickTermToggle = () => {\n    return setTermToggle(!termToggle);\n  };\n\n  const onFinish = () => {\n    dispatch({\n      type: SIGN_UP_REQUEST,\n      data: {\n        username: email,\n        password,\n        name,\n        bizcode,\n        address,\n        addressDetail,\n        coordinates,\n        shopName,\n        division: divisionToggle\n      }\n    });\n    Router.push(`/user/certificate/${email}`);\n  };\n\n  const onChangeDivisionToggle = () => {\n    setDivisionToggle(!divisionToggle);\n  };\n\n  const onChangeBizcode = e => {\n    setBizcode(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsx(Card, {\n      title: /*#__PURE__*/_jsxs(Space, {\n        direction: \"horizental\",\n        align: `baseline`,\n        size: `large`,\n        children: [divisionToggle ? /*#__PURE__*/_jsx(\"h1\", {\n          children: \"\\uAC00\\uB9F9\\uC810\"\n        }) : /*#__PURE__*/_jsx(\"h1\", {\n          children: \"\\uC77C\\uBC18\\uD68C\\uC6D0\"\n        }), /*#__PURE__*/_jsx(Switch, {\n          onClick: onChangeDivisionToggle,\n          checkedChildren: `가맹점`,\n          unCheckedChildren: `일반회원`,\n          size: \"middle\"\n        })]\n      }),\n      children: /*#__PURE__*/_jsx(Form, {\n        onFinish: onFinish,\n        encType: \"multipart/form-data\",\n        children: /*#__PURE__*/_jsxs(Space, {\n          direction: \"vertical\",\n          size: \"large\",\n          style: {\n            width: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsx(Terms, {\n            setTerms: [[personalInformationTerm, togglePersonalInformationTerm, setPersonalInformationTerm], [thirdPartyIngormationTerm, toggleThirdPartyInformationTerm, setThirdPartyInformationTerm]]\n          }), /*#__PURE__*/_jsx(Form.Item, {\n            name: \"password\",\n            rules: [{\n              required: true,\n              message: \"비밀번호를 확인해주세요\"\n            }, {\n              pattern: /^[A-Za-z0-9]{6,12}$/,\n              message: \"비밀번호가 형식에 맞지 않습니다\"\n            }],\n            children: /*#__PURE__*/_jsx(Input.Password, {\n              prefix: `* 비밀번호`,\n              size: `large`,\n              value: password,\n              onChange: onChangePassword,\n              placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n            })\n          }), /*#__PURE__*/_jsx(Form.Item, {\n            name: \"passwordCheck\",\n            dependencies: [\"password\"],\n            rules: [{\n              required: true,\n              message: \"비밀번호를 확인해 주세요\"\n            }, ({\n              getFieldValue\n            }) => ({\n              validator(rule, value) {\n                if (!value || getFieldValue(\"password\") === value) {\n                  return Promise.resolve();\n                }\n\n                return Promise.reject(\"비밀번호가 일치하지 않습니다.\");\n              }\n\n            })],\n            children: /*#__PURE__*/_jsx(Input.Password, {\n              prefix: `* 비밀번호 확인`,\n              size: `large`,\n              value: passwordCheck,\n              onChange: onChangePasswordCheck,\n              placeholder: \"\\uB2E4\\uC2DC \\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n            })\n          }), /*#__PURE__*/_jsx(Form.Item, {\n            name: \"name\",\n            rules: [{\n              required: true,\n              message: \"이름을 입력해주세요\"\n            }],\n            children: /*#__PURE__*/_jsx(Input, {\n              prefix: divisionToggle ? \"* 대표자명\" : \"* 이름\",\n              size: `large`,\n              onChange: onChangeName,\n              value: name\n            })\n          }), divisionToggle && /*#__PURE__*/_jsxs(_Fragment, {\n            children: [/*#__PURE__*/_jsx(Form.Item, {\n              name: \"shopName\",\n              rules: [{\n                required: true,\n                message: \"점포명을 입력해주세요\"\n              }],\n              children: /*#__PURE__*/_jsx(Input, {\n                prefix: \"* 점포명\",\n                size: `large`,\n                onChange: onChangeShopName,\n                value: shopName\n              })\n            }), /*#__PURE__*/_jsx(BizcodeForm, {\n              onChangeBizcode: onChangeBizcode\n            })]\n          }), /*#__PURE__*/_jsx(KakaoAddress, {\n            setAddress: setAddress,\n            setCoordinates: setCoordinates\n          }), /*#__PURE__*/_jsx(AddressDetailForm, {\n            onChangeAddressDetail: onChangeAddressDetail\n          }), /*#__PURE__*/_jsx(Form.Item, {\n            children: /*#__PURE__*/_jsx(Button, {\n              type: \"primary\",\n              htmlType: \"submit\",\n              style: {\n                width: `100%`\n              },\n              children: \"\\uC81C\\uCD9C\"\n            })\n          })]\n        })\n      })\n    })\n  });\n};\n\nexport default Signup;","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/dev/project1/frontend/pages/user/signup.js"],"names":["Button","Form","Input","Card","Space","Switch","useState","useEffect","useDispatch","useInput","useChecked","Terms","axios","SIGN_UP_REQUEST","Router","PAGE_CHANGE_SUCCESS","KakaoAddress","AddressDetailForm","BizcodeForm","defaults","baseURL","process","env","BACKEND_IP","Signup","email","onChangeEmail","password","onChangePassword","passwordCheck","onChangePasswordCheck","name","onChangeName","shopName","onChangeShopName","bizcode","setBizcode","address","setAddress","addressDetail","onChangeAddressDetail","termToggle","setTermToggle","termError","setTermError","divisionToggle","setDivisionToggle","coordinates","setCoordinates","personalInformationTerm","togglePersonalInformationTerm","setPersonalInformationTerm","thirdPartyIngormationTerm","toggleThirdPartyInformationTerm","setThirdPartyInformationTerm","locationTerm","toggleLocationTerm","setLocationTerm","dispatch","type","data","onClickTermToggle","onFinish","username","division","push","onChangeDivisionToggle","onChangeBizcode","e","target","value","width","required","message","pattern","getFieldValue","validator","rule","Promise","resolve","reject"],"mappings":"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","sourcesContent":["import { Button, Form, Input, Card, Space, Switch } from \"antd\";\nimport { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useInput, useChecked } from \"../../components/Generalui/CustomHooks\";\nimport Terms from \"../../components/Generalui/Terms\";\nimport axios from \"axios\";\nimport { SIGN_UP_REQUEST } from \"../../reducers/user\";\nimport Router from \"next/router\";\nimport { PAGE_CHANGE_SUCCESS } from \"../../reducers/admin\";\nimport KakaoAddress from \"../../components/Generalui/KakaoAddress\";\nimport AddressDetailForm from \"../../components/Generalui/AddressDetailForm\";\nimport BizcodeForm from \"../../components/Forms/BizcodeForm\";\n\naxios.defaults.baseURL = `${process.env.BACKEND_IP}`;\nconst Signup = () => {\n  const [email, onChangeEmail] = useInput();\n  const [password, onChangePassword] = useInput();\n  const [passwordCheck, onChangePasswordCheck] = useInput();\n  const [name, onChangeName] = useInput();\n  const [shopName, onChangeShopName] = useInput();\n  const [bizcode, setBizcode] = useState();\n  const [address, setAddress] = useState();\n  const [addressDetail, onChangeAddressDetail] = useInput();\n  const [termToggle, setTermToggle] = useState(false);\n  const [termError, setTermError] = useState(false);\n  const [divisionToggle, setDivisionToggle] = useState(false);\n  const [coordinates, setCoordinates] = useState([]);\n  const [personalInformationTerm, togglePersonalInformationTerm, setPersonalInformationTerm] =\n    useChecked(false);\n  const [thirdPartyIngormationTerm, toggleThirdPartyInformationTerm, setThirdPartyInformationTerm] =\n    useChecked(false);\n\n  const [locationTerm, toggleLocationTerm, setLocationTerm] = useChecked(false);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch({ type: PAGE_CHANGE_SUCCESS, data: \"signup\" });\n  });\n\n  const onClickTermToggle = () => {\n    return setTermToggle(!termToggle);\n  };\n\n  const onFinish = () => {\n    dispatch({\n      type: SIGN_UP_REQUEST,\n      data: {\n        username: email,\n        password,\n        name,\n        bizcode,\n        address,\n        addressDetail,\n        coordinates,\n        shopName,\n        division: divisionToggle,\n      },\n    });\n    Router.push(`/user/certificate/${email}`);\n  };\n\n  const onChangeDivisionToggle = () => {\n    setDivisionToggle(!divisionToggle);\n  };\n\n  const onChangeBizcode = (e) => {\n    setBizcode(e.target.value);\n  };\n\n  return (\n    <>\n      <Card\n        title={\n          <Space direction=\"horizental\" align={`baseline`} size={`large`}>\n            {divisionToggle ? <h1>가맹점</h1> : <h1>일반회원</h1>}\n            <Switch\n              onClick={onChangeDivisionToggle}\n              checkedChildren={`가맹점`}\n              unCheckedChildren={`일반회원`}\n              size={\"middle\"}\n            />\n          </Space>\n        }\n      >\n        <Form onFinish={onFinish} encType={\"multipart/form-data\"}>\n          <Space direction=\"vertical\" size={\"large\"} style={{ width: \"100%\" }}>\n            <Terms\n              setTerms={[\n                [\n                  personalInformationTerm,\n                  togglePersonalInformationTerm,\n                  setPersonalInformationTerm,\n                ],\n                [\n                  thirdPartyIngormationTerm,\n                  toggleThirdPartyInformationTerm,\n                  setThirdPartyInformationTerm,\n                ],\n              ]}\n            />\n            <Form.Item\n              name=\"password\"\n              rules={[\n                {\n                  required: true,\n                  message: \"비밀번호를 확인해주세요\",\n                },\n                {\n                  pattern: /^[A-Za-z0-9]{6,12}$/,\n                  message: \"비밀번호가 형식에 맞지 않습니다\",\n                },\n              ]}\n            >\n              <Input.Password\n                prefix={`* 비밀번호`}\n                size={`large`}\n                value={password}\n                onChange={onChangePassword}\n                placeholder=\"비밀번호를 입력해주세요\"\n              />\n            </Form.Item>\n            <Form.Item\n              name=\"passwordCheck\"\n              dependencies={[\"password\"]}\n              rules={[\n                {\n                  required: true,\n                  message: \"비밀번호를 확인해 주세요\",\n                },\n                ({ getFieldValue }) => ({\n                  validator(rule, value) {\n                    if (!value || getFieldValue(\"password\") === value) {\n                      return Promise.resolve();\n                    }\n                    return Promise.reject(\"비밀번호가 일치하지 않습니다.\");\n                  },\n                }),\n              ]}\n            >\n              <Input.Password\n                prefix={`* 비밀번호 확인`}\n                size={`large`}\n                value={passwordCheck}\n                onChange={onChangePasswordCheck}\n                placeholder=\"다시 비밀번호를 입력해주세요\"\n              />\n            </Form.Item>\n            <Form.Item name=\"name\" rules={[{ required: true, message: \"이름을 입력해주세요\" }]}>\n              <Input\n                prefix={divisionToggle ? \"* 대표자명\" : \"* 이름\"}\n                size={`large`}\n                onChange={onChangeName}\n                value={name}\n              />\n            </Form.Item>\n            {divisionToggle && (\n              <>\n                <Form.Item\n                  name={\"shopName\"}\n                  rules={[{ required: true, message: \"점포명을 입력해주세요\" }]}\n                >\n                  <Input\n                    prefix={\"* 점포명\"}\n                    size={`large`}\n                    onChange={onChangeShopName}\n                    value={shopName}\n                  />\n                </Form.Item>\n                <BizcodeForm onChangeBizcode={onChangeBizcode} />\n              </>\n            )}\n\n            <KakaoAddress setAddress={setAddress} setCoordinates={setCoordinates} />\n            <AddressDetailForm onChangeAddressDetail={onChangeAddressDetail} />\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\" style={{ width: `100%` }}>\n                제출\n              </Button>\n            </Form.Item>\n          </Space>\n        </Form>\n      </Card>\n    </>\n  );\n};\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}