{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { HYDRATE } from 'next-redux-wrapper';\nimport user from './user';\nimport shop from './shop';\nimport menu from './menu';\nimport cart from './cart';\nimport payment from './payment';\n\nvar rootReducers = function rootReducers() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case HYDRATE:\n      return action.payload;\n\n    default:\n      {\n        var combinedReducer = combineReducers({\n          user: user,\n          shop: shop,\n          menu: menu,\n          cart: cart,\n          payment: payment\n        });\n        return combinedReducer(state, action);\n      }\n  }\n};\n\nexport default rootReducers;","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/reducers/index.js"],"names":["combineReducers","HYDRATE","user","shop","menu","cart","payment","rootReducers","state","action","type","payload","combinedReducer"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,OAAL;AACE,aAAOQ,MAAM,CAACE,OAAd;;AAEF;AAAS;AACP,YAAMC,eAAe,GAAGZ,eAAe,CAAC;AAAEE,UAAAA,IAAI,EAAJA,IAAF;AAAQC,UAAAA,IAAI,EAAJA,IAAR;AAAcC,UAAAA,IAAI,EAAJA,IAAd;AAAoBC,UAAAA,IAAI,EAAJA,IAApB;AAA0BC,UAAAA,OAAO,EAAPA;AAA1B,SAAD,CAAvC;AACA,eAAOM,eAAe,CAACJ,KAAD,EAAQC,MAAR,CAAtB;AACD;AAPH;AASD,CAVD;;AAYA,eAAeF,YAAf","sourcesContent":["import { combineReducers } from 'redux';\r\nimport { HYDRATE } from 'next-redux-wrapper';\r\nimport user from './user';\r\nimport shop from './shop';\r\nimport menu from './menu';\r\nimport cart from './cart';\r\nimport payment from './payment';\r\n\r\nconst rootReducers = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case HYDRATE:\r\n      return action.payload;\r\n\r\n    default: {\r\n      const combinedReducer = combineReducers({ user, shop, menu, cart, payment });\r\n      return combinedReducer(state, action);\r\n    }\r\n  }\r\n};\r\n\r\nexport default rootReducers;\r\n"]},"metadata":{},"sourceType":"module"}