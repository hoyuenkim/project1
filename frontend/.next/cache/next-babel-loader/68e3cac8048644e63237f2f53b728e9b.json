{"ast":null,"code":"import { fork, takeEvery, all, put, call, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOAD_PAYMENT_HISTORY_FAILURE, LOAD_PAYMENT_HISTORY_REQUEST, LOAD_PAYMENT_HISTORY_SUCCESS, RATING_FAILURE, RATING_SUCCESS, RATING_REQUEST, SEARCH_HISTORY_SUCCESS, SEARCH_HISTORY_FAILURE, SEARCH_HISTORY_REQUEST } from '../reducers/payment';\n\nfunction paymentHistoryAPI(data) {\n  console.log('api call');\n  return axios.post('/payments/history/load', {\n    id: data.id\n  });\n}\n\nfunction* paymentHistory(data) {\n  try {\n    const result = yield call(paymentHistoryAPI, data);\n    yield put({\n      type: LOAD_PAYMENT_HISTORY_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    yield put({\n      type: LOAD_PAYMENT_HISTORY_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchPaymentHistory() {\n  yield takeLatest(LOAD_PAYMENT_HISTORY_REQUEST, paymentHistory);\n}\n\nfunction ratingAPI({\n  data\n}) {\n  console.log(data);\n  return axios.post('/payments/rating', {\n    PaymentsId: data.PaymentsId,\n    UserId: data.UserId,\n    ProductId: data.ProductId,\n    rate: data.rate\n  });\n}\n\nfunction* rating(data) {\n  console.log(data);\n\n  try {\n    const result = yield call(ratingAPI, data);\n    yield put({\n      type: RATING_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.log(e);\n    yield put({\n      type: RATING_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchRating() {\n  yield takeLatest(RATING_REQUEST, rating);\n}\n\nfunction searchHistoryAPI(data) {\n  return axios.post('/payments/search/history', {\n    data\n  });\n}\n\nfunction* searchHistory(data) {\n  try {\n    const result = yield call(searchHistoryAPI, data);\n    yield put({\n      type: SEARCH_HISTORY_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.log(e);\n    yield put({\n      type: SEARCH_HISTORY_FAILURE\n    });\n  }\n}\n\nfunction* watchSearchHistory() {\n  yield takeLatest(SEARCH_HISTORY_REQUEST, searchHistory);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchPaymentHistory), fork(watchRating), fork(watc)]);\n}","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/sagas/payment.js"],"names":["fork","takeEvery","all","put","call","takeLatest","axios","LOAD_PAYMENT_HISTORY_FAILURE","LOAD_PAYMENT_HISTORY_REQUEST","LOAD_PAYMENT_HISTORY_SUCCESS","RATING_FAILURE","RATING_SUCCESS","RATING_REQUEST","SEARCH_HISTORY_SUCCESS","SEARCH_HISTORY_FAILURE","SEARCH_HISTORY_REQUEST","paymentHistoryAPI","data","console","log","post","id","paymentHistory","result","type","e","error","watchPaymentHistory","ratingAPI","PaymentsId","UserId","ProductId","rate","rating","watchRating","searchHistoryAPI","searchHistory","watchSearchHistory","userSaga","watc"],"mappings":"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","sourcesContent":["import { fork, takeEvery, all, put, call, takeLatest } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\n\r\nimport {\r\n  LOAD_PAYMENT_HISTORY_FAILURE,\r\n  LOAD_PAYMENT_HISTORY_REQUEST,\r\n  LOAD_PAYMENT_HISTORY_SUCCESS,\r\n  RATING_FAILURE,\r\n  RATING_SUCCESS,\r\n  RATING_REQUEST,\r\n  SEARCH_HISTORY_SUCCESS,\r\n  SEARCH_HISTORY_FAILURE,\r\n  SEARCH_HISTORY_REQUEST,\r\n} from '../reducers/payment';\r\n\r\nfunction paymentHistoryAPI(data) {\r\n  console.log('api call');\r\n  return axios.post('/payments/history/load', { id: data.id });\r\n}\r\n\r\nfunction* paymentHistory(data) {\r\n  try {\r\n    const result = yield call(paymentHistoryAPI, data);\r\n    yield put({\r\n      type: LOAD_PAYMENT_HISTORY_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    yield put({ type: LOAD_PAYMENT_HISTORY_FAILURE, error: e });\r\n  }\r\n}\r\n\r\nfunction* watchPaymentHistory() {\r\n  yield takeLatest(LOAD_PAYMENT_HISTORY_REQUEST, paymentHistory);\r\n}\r\n\r\nfunction ratingAPI({ data }) {\r\n  console.log(data);\r\n  return axios.post('/payments/rating', {\r\n    PaymentsId: data.PaymentsId,\r\n    UserId: data.UserId,\r\n    ProductId: data.ProductId,\r\n    rate: data.rate,\r\n  });\r\n}\r\n\r\nfunction* rating(data) {\r\n  console.log(data);\r\n  try {\r\n    const result = yield call(ratingAPI, data);\r\n    yield put({ type: RATING_SUCCESS, data: result.data });\r\n  } catch (e) {\r\n    console.log(e);\r\n\r\n    yield put({ type: RATING_FAILURE, error: e });\r\n  }\r\n}\r\n\r\nfunction* watchRating() {\r\n  yield takeLatest(RATING_REQUEST, rating);\r\n}\r\n\r\nfunction searchHistoryAPI(data) {\r\n  return axios.post('/payments/search/history', { data });\r\n}\r\n\r\nfunction* searchHistory(data) {\r\n  try {\r\n    const result = yield call(searchHistoryAPI, data);\r\n    yield put({ type: SEARCH_HISTORY_SUCCESS, data: result.data });\r\n  } catch (e) {\r\n    console.log(e)\r\n    yield put({type: SEARCH_HISTORY_FAILURE})\r\n  }\r\n}\r\n\r\nfunction* watchSearchHistory() {\r\n  yield takeLatest(SEARCH_HISTORY_REQUEST, searchHistory)\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([fork(watchPaymentHistory), fork(watchRating), fork(watc)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}