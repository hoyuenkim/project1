{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst initialState = {\n  isPaying: false,\n  data: [],\n  payingError: null,\n  history: [],\n  loadingHistory: false,\n  loadingError: null,\n  removingHistory: false,\n  removingHistoryError: null,\n  clientHistoryRemoving: false,\n  clientHistoryRemovingError: null\n};\nexport const PAYMENT_REQUEST = 'PAYMENT_REQUEST';\nexport const PAYMENT_SUCCESS = 'PAYMENT_SUCCESS';\nexport const PAYMENT_FAILURE = 'PAYMENT_FAILURE';\nexport const LOAD_PAYMENT_HISTORY_REQUEST = 'LOAD_PAYMENT_HISTORY_REQUEST';\nexport const LOAD_PAYMENT_HISTORY_SUCCESS = 'LOAD_PAYMENT_HISTORY_SUCCESS';\nexport const LOAD_PAYMENT_HISTORY_FAILURE = 'LOAD_PAYMENT_HISTORY_FAILURE';\nexport const CLIENT_HISTORY_REMOVE_REQUEST = 'CLIENT_HISTORY_REMOVE_REQUEST';\nexport const CLIENT_HISTORY_REMOVE_SUCCESS = 'CLIENT_HISTORY_REMOVE_SUCCESS';\nexport const CLIENT_HISTORY_REMOVE_FAILURE = 'CLIENT_HISTORY_REMOVE_FAILURE';\nexport const PAYMENT_HISTORY_REMOVE_REQUEST = 'PAYMENT_HISTORY_REMOVE_REQUEST';\nexport const PAYMENT_HISTORY_REMOVE_SUCCESS = 'PAYMENT_HISTORY_REMOVE_SUCCESS';\nexport const PAYMENT_HISTORY_REMOVE_FAILURE = 'PAYMENT_HISTORY_REMOVE_FAILURE';\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case PAYMENT_REQUEST:\n      {\n        return _objectSpread(_objectSpread({}, statem), {}, {\n          isPaying: true\n        });\n      }\n\n    case PAYMENT_SUCCESS:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isPaying: false,\n          data: [...action.data]\n        });\n      }\n\n    case PAYMENT_FAILURE:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isPaying: false,\n          payingError: action.error\n        });\n      }\n\n    case LOAD_PAYMENT_HISTORY_REQUEST:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          requestingHistory: true\n        });\n      }\n\n    case LOAD_PAYMENT_HISTORY_SUCCESS:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          history: [...action.data],\n          loadingHistory: false\n        });\n      }\n\n    case LOAD_PAYMENT_HISTORY_FAILURE:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          loadingHistory: false,\n          loadingError: action.error\n        });\n      }\n\n    case CLIENT_HISTORY_REMOVE_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case CLIENT_HISTORY_REMOVE_SUCCESS:\n      {\n        const index = state.history.findIndex(v => v.id === action.id);\n        const payment = state.history[index];\n        payment.status = action.status;\n        const histories = [...state.history, payment];\n        return _objectSpread(_objectSpread({}, state), {}, {\n          history: [...histories]\n        });\n      }\n\n    case CLIENT_HISTORY_REMOVE_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case PAYMENT_HISTORY_REMOVE_REQUEST:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          removingHistory: true\n        });\n      }\n\n    case PAYMENT_HISTORY_REMOVE_SUCCESS:\n      {\n        const filteredHistory = state.history.filter(v => v.id !== action.id);\n        return _objectSpread(_objectSpread({}, state), {}, {\n          removingHistory: false,\n          history: [...filteredHistory]\n        });\n      }\n\n    case PAYMENT_HISTORY_REMOVE_FAILURE:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          removingHistory: false,\n          removingHistoryError: action.error\n        });\n      }\n\n    case _QUANTITY_SUCCESS:\n      {\n        const index = state.products.findIndex(product => product.id === action.data.id);\n        const product = state.products[index];\n        let quantity = product.quantity;\n        quantity > 1 ? quantity -= 1 : 1;\n        const products = [...state.products];\n        products[index] = _objectSpread(_objectSpread({}, product), {}, {\n          quantity\n        });\n        return _objectSpread(_objectSpread({}, state), {}, {\n          products\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/reducers/payment.js"],"names":["initialState","isPaying","data","payingError","history","loadingHistory","loadingError","removingHistory","removingHistoryError","clientHistoryRemoving","clientHistoryRemovingError","PAYMENT_REQUEST","PAYMENT_SUCCESS","PAYMENT_FAILURE","LOAD_PAYMENT_HISTORY_REQUEST","LOAD_PAYMENT_HISTORY_SUCCESS","LOAD_PAYMENT_HISTORY_FAILURE","CLIENT_HISTORY_REMOVE_REQUEST","CLIENT_HISTORY_REMOVE_SUCCESS","CLIENT_HISTORY_REMOVE_FAILURE","PAYMENT_HISTORY_REMOVE_REQUEST","PAYMENT_HISTORY_REMOVE_SUCCESS","PAYMENT_HISTORY_REMOVE_FAILURE","state","action","type","statem","error","requestingHistory","index","findIndex","v","id","payment","status","histories","filteredHistory","filter","_QUANTITY_SUCCESS","products","product","quantity"],"mappings":"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","sourcesContent":["const initialState = {\r\n  isPaying: false,\r\n  data: [],\r\n  payingError: null,\r\n  history: [],\r\n  loadingHistory: false,\r\n  loadingError: null,\r\n  removingHistory: false,\r\n  removingHistoryError: null,\r\n  clientHistoryRemoving: false,\r\n  clientHistoryRemovingError: null,\r\n};\r\n\r\nexport const PAYMENT_REQUEST = 'PAYMENT_REQUEST';\r\nexport const PAYMENT_SUCCESS = 'PAYMENT_SUCCESS';\r\nexport const PAYMENT_FAILURE = 'PAYMENT_FAILURE';\r\n\r\nexport const LOAD_PAYMENT_HISTORY_REQUEST = 'LOAD_PAYMENT_HISTORY_REQUEST';\r\nexport const LOAD_PAYMENT_HISTORY_SUCCESS = 'LOAD_PAYMENT_HISTORY_SUCCESS';\r\nexport const LOAD_PAYMENT_HISTORY_FAILURE = 'LOAD_PAYMENT_HISTORY_FAILURE';\r\n\r\nexport const CLIENT_HISTORY_REMOVE_REQUEST = 'CLIENT_HISTORY_REMOVE_REQUEST';\r\nexport const CLIENT_HISTORY_REMOVE_SUCCESS = 'CLIENT_HISTORY_REMOVE_SUCCESS';\r\nexport const CLIENT_HISTORY_REMOVE_FAILURE = 'CLIENT_HISTORY_REMOVE_FAILURE';\r\n\r\nexport const PAYMENT_HISTORY_REMOVE_REQUEST = 'PAYMENT_HISTORY_REMOVE_REQUEST';\r\nexport const PAYMENT_HISTORY_REMOVE_SUCCESS = 'PAYMENT_HISTORY_REMOVE_SUCCESS';\r\nexport const PAYMENT_HISTORY_REMOVE_FAILURE = 'PAYMENT_HISTORY_REMOVE_FAILURE';\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case PAYMENT_REQUEST: {\r\n      return { ...statem, isPaying: true };\r\n    }\r\n    case PAYMENT_SUCCESS: {\r\n      return { ...state, isPaying: false, data: [...action.data] };\r\n    }\r\n    case PAYMENT_FAILURE: {\r\n      return { ...state, isPaying: false, payingError: action.error };\r\n    }\r\n\r\n    case LOAD_PAYMENT_HISTORY_REQUEST: {\r\n      return {\r\n        ...state,\r\n        requestingHistory: true,\r\n      };\r\n    }\r\n    case LOAD_PAYMENT_HISTORY_SUCCESS: {\r\n      return { ...state, history: [...action.data], loadingHistory: false };\r\n    }\r\n    case LOAD_PAYMENT_HISTORY_FAILURE: {\r\n      return { ...state, loadingHistory: false, loadingError: action.error };\r\n    }\r\n\r\n    case CLIENT_HISTORY_REMOVE_REQUEST: {\r\n      return { ...state };\r\n    }\r\n\r\n    case CLIENT_HISTORY_REMOVE_SUCCESS: {\r\n      const index = state.history.findIndex((v) => v.id === action.id);\r\n      const payment = state.history[index];\r\n      payment.status = action.status;\r\n      const histories = [...state.history, payment];\r\n      return { ...state, history: [...histories] };\r\n    }\r\n\r\n    case CLIENT_HISTORY_REMOVE_FAILURE: {\r\n      return { ...state };\r\n    }\r\n\r\n    case PAYMENT_HISTORY_REMOVE_REQUEST: {\r\n      return { ...state, removingHistory: true };\r\n    }\r\n\r\n    case PAYMENT_HISTORY_REMOVE_SUCCESS: {\r\n      const filteredHistory = state.history.filter((v) => v.id !== action.id);\r\n      return { ...state, removingHistory: false, history: [...filteredHistory] };\r\n    }\r\n\r\n    case PAYMENT_HISTORY_REMOVE_FAILURE: {\r\n      return { ...state, removingHistory: false, removingHistoryError: action.error };\r\n    }\r\n\r\n    case _QUANTITY_SUCCESS: {\r\n      const index = state.products.findIndex((product) => product.id === action.data.id);\r\n      const product = state.products[index];\r\n      let quantity = product.quantity;\r\n      quantity > 1 ? (quantity -= 1) : 1;\r\n      const products = [...state.products];\r\n      products[index] = { ...product, quantity };\r\n      return {\r\n        ...state,\r\n        products,\r\n      };\r\n    }\r\n      \r\n    default: {\r\n      return { ...state };\r\n    }\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}