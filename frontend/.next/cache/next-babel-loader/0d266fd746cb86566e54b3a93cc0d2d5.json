{"ast":null,"code":"import { List, Avatar, Card, Button, Row, Col, Divider, Empty } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RestOutlined } from '@ant-design/icons';\nimport CartAmountToggle from '../../components/Generalui/CartAmoutToggle';\nimport NumberFormat from 'react-number-format';\nimport { REMOVE_ITEM_REQUEST, CLEAR_CART_REQUEST } from '../../reducers/cart';\nimport { useState, useEffect } from 'react';\nimport { useWindowSize } from '@react-hook/window-size';\nimport axios from 'axios';\nimport { useRouter } from 'next/router';\nimport { onClickPayment } from '../../components/Generalui/Payment';\nimport Modal from '../../components/Generalui/Modal';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nconst Cart = () => {\n  const dispatch = useDispatch();\n  const {\n    0: IMP,\n    1: setIMP\n  } = useState(null);\n  const {\n    0: toggleModal,\n    1: setToggleModal\n  } = useState(false);\n  const {\n    cart,\n    ShopId,\n    TableId\n  } = useSelector(state => state.cart);\n  const {\n    isLoggedIn,\n    session\n  } = useSelector(state => state.user);\n  const [windowWidth, windowHeight] = useWindowSize();\n  const router = useRouter();\n\n  const onChangeToggleModal = prev => !prev;\n\n  const product = cart[0];\n\n  const paymentStart = async () => {\n    onClickPayment('cart', product, isLoggedIn, session, dispatch, cart, router, ShopId, TableId);\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [cart.length === 0 ? /*#__PURE__*/_jsx(Card, {\n      style: {\n        height: '100vh'\n      },\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        style: {\n          marginTop: windowHeight * 0.3,\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsx(Empty, {}), /*#__PURE__*/_jsx(\"h1\", {\n          children: \"\\uC7A5\\uBC14\\uAD6C\\uB2C8\\uAC00 \\uBE44\\uC5C8\\uC2B5\\uB2C8\\uB2E4\"\n        })]\n      })\n    }) : /*#__PURE__*/_jsx(List, {\n      itemLayout: \"horizontal\",\n      dataSource: cart,\n      renderItem: item => /*#__PURE__*/_jsx(List.Item, {\n        children: /*#__PURE__*/_jsxs(Card, {\n          title: /*#__PURE__*/_jsx(\"h1\", {\n            children: item.title\n          }),\n          style: {\n            width: '100%'\n          },\n          extra: /*#__PURE__*/_jsx(\"h2\", {\n            children: /*#__PURE__*/_jsx(RestOutlined, {\n              onClick: () => {\n                dispatch({\n                  type: REMOVE_ITEM_REQUEST,\n                  id: item.id\n                });\n              }\n            })\n          }),\n          children: [/*#__PURE__*/_jsx(Card.Meta, {\n            description: /*#__PURE__*/_jsx(List.Item.Meta, {\n              avatar: /*#__PURE__*/_jsx(Avatar, {\n                size: 100,\n                shape: \"square\",\n                src: `${process.env.BACKEND_IP}/uploads/${item.Images[0].url}`\n              }),\n              description: /*#__PURE__*/_jsxs(Row, {\n                gutter: [8, 16],\n                children: [/*#__PURE__*/_jsx(Col, {\n                  span: 24,\n                  children: item.description\n                }), /*#__PURE__*/_jsxs(Col, {\n                  span: 16,\n                  children: [\"\\uAC00\\uACA9:\", ' ', /*#__PURE__*/_jsx(NumberFormat, {\n                    value: item.Discount ? item.price * (100 - item.Discount.rate) * 0.01 : item.price,\n                    displayType: 'text',\n                    thousandSeparator: true\n                  })]\n                }), /*#__PURE__*/_jsx(Col, {\n                  span: 8,\n                  children: /*#__PURE__*/_jsx(CartAmountToggle, {\n                    id: item.id,\n                    quantity: item.quantity\n                  })\n                })]\n              })\n            })\n          }), /*#__PURE__*/_jsx(Divider, {}), /*#__PURE__*/_jsx(Row, {\n            gutter: [8, 16],\n            children: /*#__PURE__*/_jsxs(Col, {\n              style: {\n                textAlign: 'right'\n              },\n              span: 24,\n              children: [\"\\uCD1D\\uC561:\", ' ', /*#__PURE__*/_jsx(NumberFormat, {\n                value: item.Discount ? item.price * (100 - item.Discount.rate) * 0.01 * item.quantity : item.price * item.quantity,\n                displayType: 'text',\n                thousandSeparator: true\n              })]\n            })\n          })]\n        })\n      })\n    }), cart.length > 0 && /*#__PURE__*/_jsx(Button, {\n      onClick: paymentStart,\n      type: 'primary',\n      style: {\n        width: '100%'\n      },\n      children: \"\\uACB0\\uC81C\\uD558\\uAE30\"\n    })]\n  });\n};\n\nexport default Cart;","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/dev/project1/frontend/pages/cart/index.js"],"names":["List","Avatar","Card","Button","Row","Col","Divider","Empty","useDispatch","useSelector","RestOutlined","CartAmountToggle","NumberFormat","REMOVE_ITEM_REQUEST","CLEAR_CART_REQUEST","useState","useEffect","useWindowSize","axios","useRouter","onClickPayment","Modal","Cart","dispatch","IMP","setIMP","toggleModal","setToggleModal","cart","ShopId","TableId","state","isLoggedIn","session","user","windowWidth","windowHeight","router","onChangeToggleModal","prev","product","paymentStart","length","height","marginTop","textAlign","item","title","width","type","id","process","env","BACKEND_IP","Images","url","description","Discount","price","rate","quantity"],"mappings":"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","sourcesContent":["import { List, Avatar, Card, Button, Row, Col, Divider, Empty } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RestOutlined } from '@ant-design/icons';\r\nimport CartAmountToggle from '../../components/Generalui/CartAmoutToggle';\r\nimport NumberFormat from 'react-number-format';\r\nimport { REMOVE_ITEM_REQUEST, CLEAR_CART_REQUEST } from '../../reducers/cart';\r\nimport { useState, useEffect } from 'react';\r\nimport { useWindowSize } from '@react-hook/window-size';\r\nimport axios from 'axios';\r\nimport { useRouter } from 'next/router';\r\nimport { onClickPayment } from '../../components/Generalui/Payment';\r\nimport Modal from '../../components/Generalui/Modal';\r\n\r\nconst Cart = () => {\r\n  const dispatch = useDispatch();\r\n  const [IMP, setIMP] = useState(null);\r\n  const [toggleModal, setToggleModal] = useState(false);\r\n  const { cart, ShopId, TableId } = useSelector((state) => state.cart);\r\n  const { isLoggedIn, session } = useSelector((state) => state.user);\r\n  const [windowWidth, windowHeight] = useWindowSize();\r\n  const router = useRouter();\r\n\r\n  const onChangeToggleModal = (prev) => !prev;\r\n\r\n  const product = cart[0];\r\n\r\n  const paymentStart = async () => {\r\n    onClickPayment(\r\n      'cart',\r\n      product,\r\n      isLoggedIn,\r\n      session,\r\n      dispatch,\r\n      cart,\r\n      router,\r\n      ShopId,\r\n      TableId\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {cart.length === 0 ? (\r\n        <Card style={{ height: '100vh' }}>\r\n          <div style={{ marginTop: windowHeight * 0.3, textAlign: 'center' }}>\r\n            <Empty />\r\n            <h1>장바구니가 비었습니다</h1>\r\n          </div>\r\n        </Card>\r\n      ) : (\r\n        <List\r\n          itemLayout=\"horizontal\"\r\n          dataSource={cart}\r\n          renderItem={(item) => (\r\n            <List.Item>\r\n              <Card\r\n                title={<h1>{item.title}</h1>}\r\n                style={{ width: '100%' }}\r\n                extra={\r\n                  <h2>\r\n                    <RestOutlined\r\n                      onClick={() => {\r\n                        dispatch({ type: REMOVE_ITEM_REQUEST, id: item.id });\r\n                      }}\r\n                    />\r\n                  </h2>\r\n                }\r\n              >\r\n                <Card.Meta\r\n                  description={\r\n                    <List.Item.Meta\r\n                      avatar={\r\n                        <Avatar\r\n                          size={100}\r\n                          shape=\"square\"\r\n                          src={`${process.env.BACKEND_IP}/uploads/${item.Images[0].url}`}\r\n                        />\r\n                      }\r\n                      description={\r\n                        <Row gutter={[8, 16]}>\r\n                          <Col span={24}>{item.description}</Col>\r\n                          <Col span={16}>\r\n                            가격:{' '}\r\n                            <NumberFormat\r\n                              value={\r\n                                item.Discount\r\n                                  ? item.price *\r\n                                    (100 - item.Discount.rate) *\r\n                                    0.01\r\n                                  : item.price\r\n                              }\r\n                              displayType={'text'}\r\n                              thousandSeparator={true}\r\n                            />\r\n                          </Col>\r\n                          <Col span={8}>\r\n                            <CartAmountToggle\r\n                              id={item.id}\r\n                              quantity={item.quantity}\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                      }\r\n                    />\r\n                  }\r\n                />\r\n                <Divider />\r\n                <Row gutter={[8, 16]}>\r\n                  <Col style={{ textAlign: 'right' }} span={24}>\r\n                    총액:{' '}\r\n                    <NumberFormat\r\n                      value={\r\n                        item.Discount\r\n                          ? item.price *\r\n                            (100 - item.Discount.rate) *\r\n                            0.01 *\r\n                            item.quantity\r\n                          : item.price * item.quantity\r\n                      }\r\n                      displayType={'text'}\r\n                      thousandSeparator={true}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </Card>\r\n            </List.Item>\r\n          )}\r\n        />\r\n      )}\r\n      {cart.length > 0 && (\r\n        <Button\r\n          onClick={paymentStart}\r\n          type={'primary'}\r\n          style={{ width: '100%' }}\r\n        >\r\n          결제하기\r\n        </Button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n"]},"metadata":{},"sourceType":"module"}