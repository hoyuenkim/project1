{"ast":null,"code":"import React, { useEffect, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Card, Input, Form } from 'antd';\nimport { useRouter } from 'next/router';\nimport { SELECT_PRODUCT_REQUEST } from '../../../../../reducers/shop';\nimport { useInput } from '../../../../../components/Generalui/CustomHooks';\n\nconst Edit = () => {\n  const dispatch = useDispatch();\n  const {\n    query\n  } = useRouter();\n  const {\n    ProductId\n  } = query;\n  useEffect(() => {\n    dispatch({\n      type: SELECT_PRODUCT_REQUEST,\n      ProductId\n    });\n  }, []);\n  const {\n    product\n  } = useSelector(state => state.shop);\n  console.log(product);\n  return; // const [title, onChangeTitle] = useInput(product.title);\n  // const [price, onChangePrice] = useInput(product.price);\n  // const [description, onChangeDecription] = useInput(product.description);\n  // const [fileList, setFileList] = useState();\n  // const [fileError, setFileError] = useState();\n  // const onImagesChange = ({ fileList: newFileList }) => {\n  //   setFileList(newFileList);\n  //   setFileError(false);\n  // };\n  // const onPreview = async (file) => {\n  //   let src = file.url;\n  //   if (!src) {\n  //     src = await new Promise((resolve) => {\n  //       const reader = new FileReader();\n  //       reader.readAsDataURL(file.originFileObj);\n  //       reader.onload = () => resolve(reader.result);\n  //     });\n  //   }\n  //   const image = new Image();\n  //   image.src = src;\n  //   const imgWindow = window.open(src);\n  //   imgWindow.document.write(image.outerHTML);\n  // };\n  // const onFinish = () => {\n  //   const formData = new FormData();\n  //   // formData.append('title', title);\n  //   // formData.append('price', price);\n  //   // formData.append('description', description);\n  //   // fileList.forEach(({ originFileObj }) => {\n  //   //   formData.append('files', originFileObj);\n  //   // });\n  //   // formData.append('userId', session.id);\n  //   // if (fileList.length > 0) {\n  //   //   dispatch({\n  //   //     type: EDIT_,\n  //   //     formData,\n  //   //   });\n  //   //   return router.push('/admin/product');\n  //   // } else {\n  //   //   return setFileError(true);\n  //   // }\n  // };\n  // return (\n  //   <Form encType={'multipart/form-data'} onFinish={onFinish} style={{ height: '100vh' }}>\n  //     <Card title={<PageHeader className=\"site-page-header\" title=\"상품등록\" />}>\n  //       <Space direction={'vertical'} size={'middle'} style={{ width: '100%' }}>\n  //         <Form.Item name={'title'} rules={[{ required: true, message: '상품명을 입력해주세요' }]}>\n  //           <Input\n  //             name={'title'}\n  //             prefix={<GiftOutlined />}\n  //             size={'large'}\n  //             onChange={onChangeTitle}\n  //           />\n  //         </Form.Item>\n  //         <Form.Item\n  //           name={'price'}\n  //           rules={[\n  //             { required: true, message: '가격을 입력해주세요' },\n  //             { pattern: /^[0-9]/g, message: '숫자를 입력해주세요' },\n  //           ]}\n  //         >\n  //           <Input\n  //             name={'price'}\n  //             prefix={<DollarOutlined />}\n  //             size={'large'}\n  //             value={price}\n  //             onChange={onChangePrice}\n  //           />\n  //         </Form.Item>\n  //         <Form.Item\n  //           name={'description'}\n  //           rules={[{ required: true, message: '상세내역을 입력해주세요' }]}\n  //         >\n  //           <Card title={<ProfileOutlined />}>\n  //             <Input.TextArea\n  //               name={'description'}\n  //               value={description}\n  //               prefix={<ProfileOutlined />}\n  //               size={'large'}\n  //               maxLength={200}\n  //               onChange={onChangeDecription}\n  //             />\n  //           </Card>\n  //         </Form.Item>\n  //         <Card title={`image`}>\n  //           <ImgCrop rotate aspect={4 / 3} name={'image'}>\n  //             <Upload\n  //               action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n  //               listType=\"picture-card\"\n  //               fileList={fileList}\n  //               onChange={onImagesChange}\n  //               onPreview={onPreview}\n  //             >\n  //               {fileList.length < 5 && '+ Upload'}\n  //             </Upload>\n  //           </ImgCrop>\n  //           {fileError && <div style={{ color: 'red' }}>파일을 업로드 해주세요</div>}\n  //         </Card>\n  //         <Button type={'primary'} htmlType={'submit'} style={{ width: '100%' }}>\n  //           제출\n  //         </Button>\n  //       </Space>\n  //     </Card>\n  //   </Form>\n  // );\n};\n\nexport default Edit;","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/pages/shop/admin/product/edit/[ProductId].js"],"names":["React","useEffect","useCallback","useSelector","useDispatch","Card","Input","Form","useRouter","SELECT_PRODUCT_REQUEST","useInput","Edit","dispatch","query","ProductId","type","product","state","shop","console","log"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,WAA3B,QAA8C,OAA9C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,IAAtB,QAAkC,MAAlC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,sBAAT,QAAuC,8BAAvC;AACA,SAASC,QAAT,QAAyB,iDAAzB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAM;AAAES,IAAAA;AAAF,MAAYL,SAAS,EAA3B;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAgBD,KAAtB;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEN,sBAAR;AAAgCK,MAAAA;AAAhC,KAAD,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAM;AAAEE,IAAAA;AAAF,MAAcb,WAAW,CAAEc,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA/B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACA,SAXiB,CAYjzHD;;AA2HA,eAAeL,IAAf","sourcesContent":["import React, { useEffect, useCallback } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Card, Input, Form } from 'antd';\r\nimport { useRouter } from 'next/router';\r\nimport { SELECT_PRODUCT_REQUEST } from '../../../../../reducers/shop';\r\nimport { useInput } from '../../../../../components/Generalui/CustomHooks';\r\n\r\nconst Edit = () => {\r\n  const dispatch = useDispatch();\r\n  const { query } = useRouter();\r\n  const { ProductId } = query;\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: SELECT_PRODUCT_REQUEST, ProductId });\r\n  }, []);\r\n\r\n  const { product } = useSelector((state) => state.shop);\r\n  console.log(product);\r\n  return \r\n  // const [title, onChangeTitle] = useInput(product.title);\r\n  // const [price, onChangePrice] = useInput(product.price);\r\n  // const [description, onChangeDecription] = useInput(product.description);\r\n  // const [fileList, setFileList] = useState();\r\n  // const [fileError, setFileError] = useState();\r\n\r\n  // const onImagesChange = ({ fileList: newFileList }) => {\r\n  //   setFileList(newFileList);\r\n  //   setFileError(false);\r\n  // };\r\n\r\n  // const onPreview = async (file) => {\r\n  //   let src = file.url;\r\n  //   if (!src) {\r\n  //     src = await new Promise((resolve) => {\r\n  //       const reader = new FileReader();\r\n  //       reader.readAsDataURL(file.originFileObj);\r\n  //       reader.onload = () => resolve(reader.result);\r\n  //     });\r\n  //   }\r\n  //   const image = new Image();\r\n  //   image.src = src;\r\n  //   const imgWindow = window.open(src);\r\n  //   imgWindow.document.write(image.outerHTML);\r\n  // };\r\n\r\n  // const onFinish = () => {\r\n  //   const formData = new FormData();\r\n  //   // formData.append('title', title);\r\n  //   // formData.append('price', price);\r\n  //   // formData.append('description', description);\r\n  //   // fileList.forEach(({ originFileObj }) => {\r\n  //   //   formData.append('files', originFileObj);\r\n  //   // });\r\n  //   // formData.append('userId', session.id);\r\n  //   // if (fileList.length > 0) {\r\n  //   //   dispatch({\r\n  //   //     type: EDIT_,\r\n  //   //     formData,\r\n  //   //   });\r\n  //   //   return router.push('/admin/product');\r\n  //   // } else {\r\n  //   //   return setFileError(true);\r\n  //   // }\r\n  // };\r\n\r\n  // return (\r\n  //   <Form encType={'multipart/form-data'} onFinish={onFinish} style={{ height: '100vh' }}>\r\n  //     <Card title={<PageHeader className=\"site-page-header\" title=\"상품등록\" />}>\r\n  //       <Space direction={'vertical'} size={'middle'} style={{ width: '100%' }}>\r\n  //         <Form.Item name={'title'} rules={[{ required: true, message: '상품명을 입력해주세요' }]}>\r\n  //           <Input\r\n  //             name={'title'}\r\n  //             prefix={<GiftOutlined />}\r\n  //             size={'large'}\r\n  //             onChange={onChangeTitle}\r\n  //           />\r\n  //         </Form.Item>\r\n  //         <Form.Item\r\n  //           name={'price'}\r\n  //           rules={[\r\n  //             { required: true, message: '가격을 입력해주세요' },\r\n  //             { pattern: /^[0-9]/g, message: '숫자를 입력해주세요' },\r\n  //           ]}\r\n  //         >\r\n  //           <Input\r\n  //             name={'price'}\r\n  //             prefix={<DollarOutlined />}\r\n  //             size={'large'}\r\n  //             value={price}\r\n  //             onChange={onChangePrice}\r\n  //           />\r\n  //         </Form.Item>\r\n  //         <Form.Item\r\n  //           name={'description'}\r\n  //           rules={[{ required: true, message: '상세내역을 입력해주세요' }]}\r\n  //         >\r\n  //           <Card title={<ProfileOutlined />}>\r\n  //             <Input.TextArea\r\n  //               name={'description'}\r\n  //               value={description}\r\n  //               prefix={<ProfileOutlined />}\r\n  //               size={'large'}\r\n  //               maxLength={200}\r\n  //               onChange={onChangeDecription}\r\n  //             />\r\n  //           </Card>\r\n  //         </Form.Item>\r\n  //         <Card title={`image`}>\r\n  //           <ImgCrop rotate aspect={4 / 3} name={'image'}>\r\n  //             <Upload\r\n  //               action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n  //               listType=\"picture-card\"\r\n  //               fileList={fileList}\r\n  //               onChange={onImagesChange}\r\n  //               onPreview={onPreview}\r\n  //             >\r\n  //               {fileList.length < 5 && '+ Upload'}\r\n  //             </Upload>\r\n  //           </ImgCrop>\r\n  //           {fileError && <div style={{ color: 'red' }}>파일을 업로드 해주세요</div>}\r\n  //         </Card>\r\n  //         <Button type={'primary'} htmlType={'submit'} style={{ width: '100%' }}>\r\n  //           제출\r\n  //         </Button>\r\n  //       </Space>\r\n  //     </Card>\r\n  //   </Form>\r\n  // );\r\n};\r\n\r\nexport default Edit;\r\n"]},"metadata":{},"sourceType":"module"}