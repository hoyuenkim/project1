{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hoyuen\\\\Documents\\\\dev\\\\project1\\\\frontend\\\\components\\\\Generalui\\\\AffixBottom.js\";\nimport { Button, Affix } from 'antd';\nimport { ShoppingCartOutlined } from '@ant-design/icons';\nimport { useRouter } from 'next/router';\nimport { useDispatch } from 'react-redux';\nimport { GET_SHOP_TABLE_ID } from '../../reducers/cart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AffixBottom = ({\n  cart,\n  windowSize,\n  menuNaviSize,\n  naviSize,\n  children\n}) => {\n  const {\n    windowHeight,\n    windowWidth\n  } = windowSize;\n  const {\n    menuNaviHeight,\n    menuNaviWidth\n  } = menuNaviSize;\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const {\n    ShopId,\n    TableId\n  } = router.query;\n  let amount = 0;\n  cart.map(product => amount += product.quantity);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Affix, {\n      style: {\n        position: 'absolute',\n        left: menuNaviWidth * 0.05\n      },\n      offsetTop: windowHeight * 0.9 - menuNaviHeight,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          dispatch({\n            type: GET_SHOP_TABLE_ID,\n            data: {\n              ShopId,\n              TableId\n            }\n          });\n          router.push(`/cart`);\n        },\n        type: \"primary\",\n        size: \"large\",\n        icon: /*#__PURE__*/_jsxDEV(ShoppingCartOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this),\n        children: [amount, \"\\uAC1C\\uC758 \\uC0C1\\uD488\\uC774 \\uB2F4\\uACA8 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\nexport default AffixBottom;","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/dev/project1/frontend/components/Generalui/AffixBottom.js"],"names":["Button","Affix","ShoppingCartOutlined","useRouter","useDispatch","GET_SHOP_TABLE_ID","AffixBottom","cart","windowSize","menuNaviSize","naviSize","children","windowHeight","windowWidth","menuNaviHeight","menuNaviWidth","router","dispatch","ShopId","TableId","query","amount","map","product","quantity","position","left","type","data","push"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,KAAjB,QAA8B,MAA9B;AACA,SAASC,oBAAT,QAAqC,mBAArC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,iBAAT,QAAkC,qBAAlC;;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,UAAR;AAAoBC,EAAAA,YAApB;AAAkCC,EAAAA,QAAlC;AAA4CC,EAAAA;AAA5C,CAAD,KAA4D;AAC9E,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAgCL,UAAtC;AACA,QAAM;AAAEM,IAAAA,cAAF;AAAkBC,IAAAA;AAAlB,MAAoCN,YAA1C;AACA,QAAMO,MAAM,GAAGb,SAAS,EAAxB;AACA,QAAMc,QAAQ,GAAGb,WAAW,EAA5B;AAEA,QAAM;AAAEc,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAsBH,MAAM,CAACI,KAAnC;AAEA,MAAIC,MAAM,GAAG,CAAb;AACAd,EAAAA,IAAI,CAACe,GAAL,CAAUC,OAAD,IAAcF,MAAM,IAAIE,OAAO,CAACC,QAAzC;AAEA,sBACE;AAAA,2BACE,QAAC,KAAD;AACE,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE,UAAZ;AAAwBC,QAAAA,IAAI,EAAEX,aAAa,GAAG;AAA9C,OADT;AAEE,MAAA,SAAS,EAAEH,YAAY,GAAG,GAAf,GAAqBE,cAFlC;AAAA,6BAIE,QAAC,MAAD;AACE,QAAA,OAAO,EAAE,MAAM;AACbG,UAAAA,QAAQ,CAAC;AAAEU,YAAAA,IAAI,EAAEtB,iBAAR;AAA2BuB,YAAAA,IAAI,EAAE;AAAEV,cAAAA,MAAF;AAAUC,cAAAA;AAAV;AAAjC,WAAD,CAAR;AACAH,UAAAA,MAAM,CAACa,IAAP,CAAa,OAAb;AACD,SAJH;AAKE,QAAA,IAAI,EAAC,SALP;AAME,QAAA,IAAI,EAAC,OANP;AAOE,QAAA,IAAI,eAAE,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,gBAPR;AAAA,mBASGR,MATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAoBD,CA/BD;;AAiCA,eAAef,WAAf","sourcesContent":["import { Button, Affix } from 'antd';\nimport { ShoppingCartOutlined } from '@ant-design/icons';\nimport { useRouter } from 'next/router';\nimport { useDispatch } from 'react-redux';\nimport { GET_SHOP_TABLE_ID } from '../../reducers/cart';\n\nconst AffixBottom = ({ cart, windowSize, menuNaviSize, naviSize, children }) => {\n  const { windowHeight, windowWidth } = windowSize;\n  const { menuNaviHeight, menuNaviWidth } = menuNaviSize;\n  const router = useRouter();\n  const dispatch = useDispatch();\n\n  const { ShopId, TableId } = router.query;\n\n  let amount = 0;\n  cart.map((product) => (amount += product.quantity));\n\n  return (\n    <>\n      <Affix\n        style={{ position: 'absolute', left: menuNaviWidth * 0.05 }}\n        offsetTop={windowHeight * 0.9 - menuNaviHeight}\n      >\n        <Button\n          onClick={() => {\n            dispatch({ type: GET_SHOP_TABLE_ID, data: { ShopId, TableId } });\n            router.push(`/cart`);\n          }}\n          type=\"primary\"\n          size=\"large\"\n          icon={<ShoppingCartOutlined />}\n        >\n          {amount}개의 상품이 담겨 있습니다.\n        </Button>\n      </Affix>\n    </>\n  );\n};\n\nexport default AffixBottom;\n"]},"metadata":{},"sourceType":"module"}