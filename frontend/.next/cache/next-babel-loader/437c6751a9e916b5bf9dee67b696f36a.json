{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\hoyuen\\\\Documents\\\\project\\\\project1\\\\frontend\\\\pages\\\\import.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport { Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux'; // import { PAYMENT_REQUEST } from \"../reducers/payment\";\n\nimport axios from 'axios';\n\nvar Import = function Import(_ref) {\n  _s();\n\n  var shopId = _ref.shopId,\n      amount = _ref.amount;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      session = _useSelector.session;\n\n  var _useState = useState(null),\n      IMP = _useState[0],\n      setIMP = _useState[1];\n\n  useEffect(function () {\n    var _window = window,\n        IMP = _window.IMP;\n    setIMP(IMP);\n  }, []);\n\n  var onClickPayment = function onClickPayment() {\n    if (IMP !== null) {\n      IMP.init('imp37098043');\n      IMP.request_pay({\n        pg: 'kakao',\n        // version 1.1.0부터 지원.\n        pay_method: 'card',\n        merchant_uid: shopId + new Date().getTime(),\n        name: shopId + new Date().getTime(),\n        amount: amount,\n        buyer_email: session.email,\n        buyer_name: session.name,\n        buyer_tel: session.phone,\n        buyer_addr: '서울특별시 강남구 삼성동',\n        buyer_postcode: '123-456'\n      }, callback);\n    }\n  };\n\n  var callback = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(response) {\n      var success, merchant_uid, error_msg;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              success = response.success, merchant_uid = response.merchant_uid, error_msg = response.error_msg;\n\n              if (success) {\n                alert('결제 성공');\n                axios // .post(`${hostIp}/payments/complete`, { data: response })\n                .post('http://127.0.0.1:3065/payments/complete', {\n                  data: response\n                }).then(function () {\n                  console.log('complete');\n                  dispatch({\n                    type: PAYMENT_SUCCESS\n                  }, {\n                    data: response\n                  });\n                })[\"catch\"](function (e) {\n                  dispatch({\n                    type: PAYMENT_FAILURE\n                  }, {\n                    error: error_msg\n                  });\n                  console.log(e);\n                });\n              } else {\n                alert(\"\\uACB0\\uC81C \\uC2E4\\uD328: \".concat(error_msg));\n              }\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function callback(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(Button, {\n    onClick: onClickPayment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"\\uACB0\\uC81C\"));\n};\n\n_s(Import, \"GTGNPEbX6F0wHj8eOjmg+rkXDc0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Import;\nexport default Import;\n\nvar _c;\n\n$RefreshReg$(_c, \"Import\");","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/pages/import.js"],"names":["useState","useEffect","Button","useDispatch","useSelector","axios","Import","shopId","amount","dispatch","state","user","session","IMP","setIMP","window","onClickPayment","init","request_pay","pg","pay_method","merchant_uid","Date","getTime","name","buyer_email","email","buyer_name","buyer_tel","phone","buyer_addr","buyer_postcode","callback","response","success","error_msg","alert","post","data","then","console","log","type","PAYMENT_SUCCESS","e","PAYMENT_FAILURE","error"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { Button } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// import { PAYMENT_REQUEST } from \"../reducers/payment\";\r\nimport axios from 'axios';\r\n\r\nconst Import = ({ shopId, amount }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { session } = useSelector((state) => state.user);\r\n\r\n  const [IMP, setIMP] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const { IMP } = window;\r\n    setIMP(IMP);\r\n  }, []);\r\n  const onClickPayment = () => {\r\n    if (IMP !== null) {\r\n      IMP.init('imp37098043');\r\n      IMP.request_pay(\r\n        {\r\n          pg: 'kakao', // version 1.1.0부터 지원.\r\n          pay_method: 'card',\r\n          merchant_uid: shopId + new Date().getTime(),\r\n          name: shopId + new Date().getTime(),\r\n          amount: amount,\r\n          buyer_email: session.email,\r\n          buyer_name: session.name,\r\n          buyer_tel: session.phone,\r\n          buyer_addr: '서울특별시 강남구 삼성동',\r\n          buyer_postcode: '123-456',\r\n        },\r\n        callback,\r\n      );\r\n    }\r\n  };\r\n\r\n  const callback = async (response) => {\r\n    const { success, merchant_uid, error_msg } = response;\r\n    if (success) {\r\n      alert('결제 성공');\r\n      axios\r\n        // .post(`${hostIp}/payments/complete`, { data: response })\r\n        .post('http://127.0.0.1:3065/payments/complete', { data: response })\r\n        .then(() => {\r\n          console.log('complete');\r\n          dispatch({ type: PAYMENT_SUCCESS }, { data: response });\r\n        })\r\n        .catch((e) => {\r\n          dispatch({ type: PAYMENT_FAILURE }, { error: error_msg });\r\n          console.log(e);\r\n        });\r\n    } else {\r\n      alert(`결제 실패: ${error_msg}`);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Button onClick={onClickPayment}>결제</Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Import;\r\n"]},"metadata":{},"sourceType":"module"}