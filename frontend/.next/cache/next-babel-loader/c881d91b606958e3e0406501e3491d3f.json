{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Card, Col, Space, Row, Divider, Badge } from \"antd\";\nimport NumberFormat from \"react-number-format\";\nimport AmountToggle from \"./Generalui/AmountToggle\";\nimport { useDispatch } from \"react-redux\";\nimport { LOAD_CART_REQUEST, ADD_CART_ITEM_REQUEST } from \"../reducers/shop\";\n\nvar ProductCard = function ProductCard(_ref) {\n  _s();\n\n  var product = _ref.product;\n  var dispatch = useDispatch();\n\n  var onClickAddCart = function onClickAddCart() {\n    var _produdct = produdct,\n        id = _produdct.id;\n    dispatch({\n      type: ADD_CART_ITEM_REQUEST,\n      id: id\n    });\n  };\n\n  return __jsx(Card, {\n    key: product.id,\n    title: __jsx(React.Fragment, null, __jsx(\"h1\", {\n      style: {\n        display: \"inline\"\n      }\n    }, product.title)),\n    actions: [__jsx(\"div\", null, \"\\uC989\\uC2DC \\uAD6C\\uB9E4\"), __jsx(\"div\", {\n      onClick: onClickAddCart\n    }, \"\\uC7A5\\uBC14\\uAD6C\\uB2C8\")],\n    cover: __jsx(\"img\", {\n      style: {\n        border: \"1px solid #EFF2F5\"\n      },\n      src: product.Images[0] && \"http://localhost:3065/uploads/\".concat(product.Images[0].url)\n    }),\n    hoverable: true\n  }, __jsx(Card.Meta, {\n    description: __jsx(React.Fragment, null, __jsx(Row, {\n      gutter: [16],\n      align: \"middle\"\n    }, __jsx(Col, {\n      md: 16,\n      xs: 16\n    }, discount ? __jsx(React.Fragment, null, __jsx(\"h1\", {\n      style: {\n        color: \"#FF5733\",\n        fontWeight: \"bold\",\n        display: \"inline-block\"\n      }\n    }, __jsx(NumberFormat, {\n      value: product.price * (1 - discount),\n      displayType: \"text\",\n      thousandSeparator: true\n    }), \"\\uC6D0\"), \"  \", __jsx(\"h3\", {\n      style: {\n        color: \"#AA9C99\",\n        display: \"inline-block\"\n      }\n    }, (1 - discount) * 100, \"%\")) : __jsx(React.Fragment, null, __jsx(\"h1\", null, __jsx(NumberFormat, {\n      value: product.price,\n      displayType: \"text\",\n      thousandSeparator: true\n    }), \"\\uC6D0\")), \" \"), __jsx(Col, {\n      md: 8,\n      xs: 8\n    }, __jsx(AmountToggle, {\n      id: product.id,\n      quantity: product.quantity\n    }))), __jsx(Divider, null), __jsx(\"div\", {\n      style: {\n        textAlign: \"right\"\n      }\n    }, __jsx(\"h1\", null, __jsx(NumberFormat, {\n      value: discount ? product.price * (1 - discount) * product.quantity : product.price * product.quantity,\n      displayType: \"text\",\n      thousandSeparator: true\n    }), \"\\uC6D0\")))\n  }));\n};\n\n_s(ProductCard, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ProductCard;\nexport default ProductCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductCard\");","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/components/ProductCard.js"],"names":["Card","Col","Space","Row","Divider","Badge","NumberFormat","AmountToggle","useDispatch","LOAD_CART_REQUEST","ADD_CART_ITEM_REQUEST","ProductCard","product","dispatch","onClickAddCart","produdct","id","type","display","title","border","Images","url","discount","color","fontWeight","price","quantity","textAlign"],"mappings":"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","sourcesContent":["import { Card, Col, Space, Row, Divider, Badge } from \"antd\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport AmountToggle from \"./Generalui/AmountToggle\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { LOAD_CART_REQUEST, ADD_CART_ITEM_REQUEST } from \"../reducers/shop\";\r\n\r\nconst ProductCard = ({ product }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const onClickAddCart = () => {\r\n    const { id } = produdct;\r\n    dispatch({\r\n      type: ADD_CART_ITEM_REQUEST,\r\n      id,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      key={product.id}\r\n      title={\r\n        <>\r\n          <h1 style={{ display: \"inline\" }}>{product.title}</h1>\r\n        </>\r\n      }\r\n      actions={[<div>즉시 구매</div>, <div onClick={onClickAddCart}>장바구니</div>]}\r\n      cover={\r\n        <img\r\n          style={{ border: `1px solid #EFF2F5` }}\r\n          src={product.Images[0] && `http://localhost:3065/uploads/${product.Images[0].url}`}\r\n        />\r\n      }\r\n      hoverable\r\n    >\r\n      <Card.Meta\r\n        description={\r\n          <>\r\n            <Row gutter={[16]} align=\"middle\">\r\n              <Col md={16} xs={16}>\r\n                {discount ? (\r\n                  <>\r\n                    <h1 style={{ color: \"#FF5733\", fontWeight: \"bold\", display: \"inline-block\" }}>\r\n                      <NumberFormat\r\n                        value={product.price * (1 - discount)}\r\n                        displayType={\"text\"}\r\n                        thousandSeparator={true}\r\n                      />\r\n                      원\r\n                    </h1>\r\n                    {\"  \"}\r\n                    <h3 style={{ color: \"#AA9C99\", display: \"inline-block\" }}>\r\n                      {(1 - discount) * 100}%\r\n                    </h3>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <h1>\r\n                      <NumberFormat\r\n                        value={product.price}\r\n                        displayType={\"text\"}\r\n                        thousandSeparator={true}\r\n                      />\r\n                      원\r\n                    </h1>\r\n                  </>\r\n                )}{\" \"}\r\n              </Col>\r\n              <Col md={8} xs={8}>\r\n                <AmountToggle id={product.id} quantity={product.quantity} />\r\n              </Col>\r\n            </Row>\r\n            <Divider />\r\n            <div style={{ textAlign: \"right\" }}>\r\n              <h1>\r\n                <NumberFormat\r\n                  value={\r\n                    discount\r\n                      ? product.price * (1 - discount) * product.quantity\r\n                      : product.price * product.quantity\r\n                  }\r\n                  displayType={\"text\"}\r\n                  thousandSeparator={true}\r\n                />\r\n                원\r\n              </h1>\r\n            </div>\r\n          </>\r\n        }\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ProductCard;\r\n"]},"metadata":{},"sourceType":"module"}