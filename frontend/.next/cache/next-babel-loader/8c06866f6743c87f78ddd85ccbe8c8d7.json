{"ast":null,"code":"import axios from \"axios\";\nimport { all, put, fork, call, takeLatest } from \"redux-saga/effects\";\nimport { ADD_PRODUCT_REQUEST, ADD_PRODUCT_SUCCESS, ADD_PRODUCT_FAILURE, LOAD_PRODUCTS_REQUEST, LOAD_PRODUCTS_SUCCESS, LOAD_PRODUCTS_FAILURE } from \"../reducers/shop\";\n\nfunction addProductApi(data) {\n  return axios.post(\"/products/add\", data, {\n    withCredentials: true\n  });\n}\n\nfunction* addProduct(action) {\n  try {\n    const result = yield call(addProductApi, action.formData);\n    yield put({\n      type: ADD_PRODUCT_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.log(e);\n    yield put({\n      type: ADD_PRODUCT_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchAddProduct() {\n  yield takeLatest(ADD_PRODUCT_REQUEST, addProduct);\n}\n\nfunction loadProductsApi(data) {\n  console.log(data);\n  return axios.post(\"/products/load\"), {\n    data\n  }, {\n    withCredentials: true\n  };\n}\n\nfunction* loadProducts(action) {\n  try {\n    console.log(action.data);\n    const result = yield call(loadProductsApi, action.data);\n    yield put({\n      type: LOAD_PRODUCTS_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.log(e);\n    yield put({\n      type: LOAD_PRODUCTS_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchLoadProducts() {\n  yield takeLatest(LOAD_PRODUCTS_REQUEST, loadProducts);\n}\n\nexport default function* productsSaga() {\n  yield all([fork(watchAddProduct), fork(watchLoadProducts)]);\n}","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/sagas/shop.js"],"names":["axios","all","put","fork","call","takeLatest","ADD_PRODUCT_REQUEST","ADD_PRODUCT_SUCCESS","ADD_PRODUCT_FAILURE","LOAD_PRODUCTS_REQUEST","LOAD_PRODUCTS_SUCCESS","LOAD_PRODUCTS_FAILURE","addProductApi","data","post","withCredentials","addProduct","action","result","formData","type","e","console","log","error","watchAddProduct","loadProductsApi","loadProducts","watchLoadProducts","productsSaga"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,UAA/B,QAAiD,oBAAjD;AACA,SACEC,mBADF,EAEEC,mBAFF,EAGEC,mBAHF,EAIEC,qBAJF,EAKEC,qBALF,EAMEC,qBANF,QAOO,kBAPP;;AASA,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AAC3B,SAAOb,KAAK,CAACc,IAAN,CAAW,eAAX,EAA4BD,IAA5B,EAAkC;AACvCE,IAAAA,eAAe,EAAE;AADsB,GAAlC,CAAP;AAGD;;AAED,UAAUC,UAAV,CAAqBC,MAArB,EAA6B;AAC3B,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMd,IAAI,CAACQ,aAAD,EAAgBK,MAAM,CAACE,QAAvB,CAAzB;AACA,UAAMjB,GAAG,CAAC;AAAEkB,MAAAA,IAAI,EAAEb,mBAAR;AAA6BM,MAAAA,IAAI,EAAEK,MAAM,CAACL;AAA1C,KAAD,CAAT;AACD,GAHD,CAGE,OAAOQ,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,UAAMnB,GAAG,CAAC;AAAEkB,MAAAA,IAAI,EAAEZ,mBAAR;AAA6BgB,MAAAA,KAAK,EAAEH;AAApC,KAAD,CAAT;AACD;AACF;;AAED,UAAUI,eAAV,GAA4B;AAC1B,QAAMpB,UAAU,CAACC,mBAAD,EAAsBU,UAAtB,CAAhB;AACD;;AAED,SAASU,eAAT,CAAyBb,IAAzB,EAA+B;AAC7BS,EAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACA,SAAOb,KAAK,CAACc,IAAN,CAAW,gBAAX,GAA8B;AAAED,IAAAA;AAAF,GAA9B,EAAwC;AAAEE,IAAAA,eAAe,EAAE;AAAnB,GAA/C;AACD;;AAED,UAAUY,YAAV,CAAuBV,MAAvB,EAA+B;AAC7B,MAAI;AACFK,IAAAA,OAAO,CAACC,GAAR,CAAYN,MAAM,CAACJ,IAAnB;AACA,UAAMK,MAAM,GAAG,MAAMd,IAAI,CAACsB,eAAD,EAAkBT,MAAM,CAACJ,IAAzB,CAAzB;AACA,UAAMX,GAAG,CAAC;AAAEkB,MAAAA,IAAI,EAAEV,qBAAR;AAA+BG,MAAAA,IAAI,EAAEK,MAAM,CAACL;AAA5C,KAAD,CAAT;AACD,GAJD,CAIE,OAAOQ,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,UAAMnB,GAAG,CAAC;AAAEkB,MAAAA,IAAI,EAAET,qBAAR;AAA+Ba,MAAAA,KAAK,EAAEH;AAAtC,KAAD,CAAT;AACD;AACF;;AAED,UAAUO,iBAAV,GAA8B;AAC5B,QAAMvB,UAAU,CAACI,qBAAD,EAAwBkB,YAAxB,CAAhB;AACD;;AAED,eAAe,UAAUE,YAAV,GAAyB;AACtC,QAAM5B,GAAG,CAAC,CAACE,IAAI,CAACsB,eAAD,CAAL,EAAwBtB,IAAI,CAACyB,iBAAD,CAA5B,CAAD,CAAT;AACD","sourcesContent":["import axios from \"axios\";\r\nimport { all, put, fork, call, takeLatest } from \"redux-saga/effects\";\r\nimport {\r\n  ADD_PRODUCT_REQUEST,\r\n  ADD_PRODUCT_SUCCESS,\r\n  ADD_PRODUCT_FAILURE,\r\n  LOAD_PRODUCTS_REQUEST,\r\n  LOAD_PRODUCTS_SUCCESS,\r\n  LOAD_PRODUCTS_FAILURE,\r\n} from \"../reducers/shop\";\r\n\r\nfunction addProductApi(data) {\r\n  return axios.post(\"/products/add\", data, {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* addProduct(action) {\r\n  try {\r\n    const result = yield call(addProductApi, action.formData);\r\n    yield put({ type: ADD_PRODUCT_SUCCESS, data: result.data });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({ type: ADD_PRODUCT_FAILURE, error: e });\r\n  }\r\n}\r\n\r\nfunction* watchAddProduct() {\r\n  yield takeLatest(ADD_PRODUCT_REQUEST, addProduct);\r\n}\r\n\r\nfunction loadProductsApi(data) {\r\n  console.log(data);\r\n  return axios.post(\"/products/load\"), { data }, { withCredentials: true };\r\n}\r\n\r\nfunction* loadProducts(action) {\r\n  try {\r\n    console.log(action.data);\r\n    const result = yield call(loadProductsApi, action.data);\r\n    yield put({ type: LOAD_PRODUCTS_SUCCESS, data: result.data });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({ type: LOAD_PRODUCTS_FAILURE, error: e });\r\n  }\r\n}\r\n\r\nfunction* watchLoadProducts() {\r\n  yield takeLatest(LOAD_PRODUCTS_REQUEST, loadProducts);\r\n}\r\n\r\nexport default function* productsSaga() {\r\n  yield all([fork(watchAddProduct), fork(watchLoadProducts)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}