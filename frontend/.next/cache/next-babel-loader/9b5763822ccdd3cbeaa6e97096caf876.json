{"ast":null,"code":"import { all, put, fork, call, takeLatest } from \"redux-saga/effects\";\nimport { LOAD_PRODUCTS_REQUEST, LOAD_PRODUCTS_SUCCESS, LOAD_PRODUCTS_FAILURE, ADD_PRODUCT_SUCCESS } from \"../reducers/shop\";\n\nfunction loadProductApi() {\n  return axios.get(`/store/${id}/${table}`);\n}\n\nfunction* loadProducts() {\n  try {\n    const result = yield call(loadProductApi);\n    yield put({\n      type: LOAD_PRODUCTS_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.log(e);\n    yield put({\n      type: LOAD_PRODUCTS_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchLoadProducts() {\n  yield takeLatest(LOAD_PRODUCTS_REQUEST, loadProducts);\n}\n\nfunction addProductApi(data) {\n  return axios.post(\"/store/product/add\", data, {\n    withCredentials: true\n  });\n}\n\nfunction* addProduct(action) {\n  try {\n    console.log(action.data);\n    const result = yield call(addProductApi, action.data);\n    yield put({\n      type: ADD_PRODUCT_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.log(e);\n    yield put({\n      type: ADD_PRODUCT_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchAddProduct() {\n  yield takeLatest(ADD_PRODUCT_REQUEST, addProduct);\n}\n\nexport default function* productsSaga() {\n  all([fork(watchLoadProducts), fork(watchAddProduct)]);\n}","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/sagas/shop.js"],"names":["all","put","fork","call","takeLatest","LOAD_PRODUCTS_REQUEST","LOAD_PRODUCTS_SUCCESS","LOAD_PRODUCTS_FAILURE","ADD_PRODUCT_SUCCESS","loadProductApi","axios","get","id","table","loadProducts","result","type","data","e","console","log","error","watchLoadProducts","addProductApi","post","withCredentials","addProduct","action","ADD_PRODUCT_FAILURE","watchAddProduct","ADD_PRODUCT_REQUEST","productsSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,UAA/B,QAAiD,oBAAjD;AACA,SACEC,qBADF,EAEEC,qBAFF,EAGEC,qBAHF,EAIEC,mBAJF,QAKO,kBALP;;AAOA,SAASC,cAAT,GAA0B;AACxB,SAAOC,KAAK,CAACC,GAAN,CAAW,UAASC,EAAG,IAAGC,KAAM,EAAhC,CAAP;AACD;;AAED,UAAUC,YAAV,GAAyB;AACvB,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMZ,IAAI,CAACM,cAAD,CAAzB;AACA,UAAMR,GAAG,CAAC;AACRe,MAAAA,IAAI,EAAEV,qBADE;AAERW,MAAAA,IAAI,EAAEF,MAAM,CAACE;AAFL,KAAD,CAAT;AAID,GAND,CAME,OAAOC,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,UAAMjB,GAAG,CAAC;AACRe,MAAAA,IAAI,EAAET,qBADE;AAERc,MAAAA,KAAK,EAAEH;AAFC,KAAD,CAAT;AAID;AACF;;AAED,UAAUI,iBAAV,GAA8B;AAC5B,QAAMlB,UAAU,CAACC,qBAAD,EAAwBS,YAAxB,CAAhB;AACD;;AAED,SAASS,aAAT,CAAuBN,IAAvB,EAA6B;AAC3B,SAAOP,KAAK,CAACc,IAAN,CAAW,oBAAX,EAAiCP,IAAjC,EAAuC;AAC5CQ,IAAAA,eAAe,EAAE;AAD2B,GAAvC,CAAP;AAGD;;AAED,UAAUC,UAAV,CAAqBC,MAArB,EAA6B;AAC3B,MAAI;AACFR,IAAAA,OAAO,CAACC,GAAR,CAAYO,MAAM,CAACV,IAAnB;AACA,UAAMF,MAAM,GAAG,MAAMZ,IAAI,CAACoB,aAAD,EAAgBI,MAAM,CAACV,IAAvB,CAAzB;AACA,UAAMhB,GAAG,CAAC;AAAEe,MAAAA,IAAI,EAAER,mBAAR;AAA6BS,MAAAA,IAAI,EAAEF,MAAM,CAACE;AAA1C,KAAD,CAAT;AACD,GAJD,CAIE,OAAOC,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,UAAMjB,GAAG,CAAC;AAAEe,MAAAA,IAAI,EAAEY,mBAAR;AAA6BP,MAAAA,KAAK,EAAEH;AAApC,KAAD,CAAT;AACD;AACF;;AAED,UAAUW,eAAV,GAA4B;AAC1B,QAAMzB,UAAU,CAAC0B,mBAAD,EAAsBJ,UAAtB,CAAhB;AACD;;AAED,eAAe,UAAUK,YAAV,GAAyB;AACtC/B,EAAAA,GAAG,CAAC,CAACE,IAAI,CAACoB,iBAAD,CAAL,EAA0BpB,IAAI,CAAC2B,eAAD,CAA9B,CAAD,CAAH;AACD","sourcesContent":["import { all, put, fork, call, takeLatest } from \"redux-saga/effects\";\r\nimport {\r\n  LOAD_PRODUCTS_REQUEST,\r\n  LOAD_PRODUCTS_SUCCESS,\r\n  LOAD_PRODUCTS_FAILURE,\r\n  ADD_PRODUCT_SUCCESS,\r\n} from \"../reducers/shop\";\r\n\r\nfunction loadProductApi() {\r\n  return axios.get(`/store/${id}/${table}`);\r\n}\r\n\r\nfunction* loadProducts() {\r\n  try {\r\n    const result = yield call(loadProductApi);\r\n    yield put({\r\n      type: LOAD_PRODUCTS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({\r\n      type: LOAD_PRODUCTS_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLoadProducts() {\r\n  yield takeLatest(LOAD_PRODUCTS_REQUEST, loadProducts);\r\n}\r\n\r\nfunction addProductApi(data) {\r\n  return axios.post(\"/store/product/add\", data, {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* addProduct(action) {\r\n  try {\r\n    console.log(action.data);\r\n    const result = yield call(addProductApi, action.data);\r\n    yield put({ type: ADD_PRODUCT_SUCCESS, data: result.data });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({ type: ADD_PRODUCT_FAILURE, error: e });\r\n  }\r\n}\r\n\r\nfunction* watchAddProduct() {\r\n  yield takeLatest(ADD_PRODUCT_REQUEST, addProduct);\r\n}\r\n\r\nexport default function* productsSaga() {\r\n  all([fork(watchLoadProducts), fork(watchAddProduct)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}