{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { Upload } from \"antd\";\nimport ImgCrop from \"antd-img-crop\";\n\nvar ImageInput = function ImageInput() {\n  _s();\n\n  var _useState = useState([]),\n      fileList = _useState[0],\n      setFileList = _useState[1];\n\n  var onChange = function onChange(_ref) {\n    var newFileList = _ref.fileList;\n    setFileList(newFileList);\n  };\n\n  var onPreview = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(file) {\n      var src, image, imgWindow;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              src = file.url;\n\n              if (src) {\n                _context.next = 5;\n                break;\n              }\n\n              _context.next = 4;\n              return new Promise(function (resolve) {\n                var reader = new FileReader();\n                reader.readAsDataURL(file.originFileObj);\n\n                reader.onload = function () {\n                  return resolve(reader.result);\n                };\n              });\n\n            case 4:\n              src = _context.sent;\n\n            case 5:\n              image = new Image();\n              image.src = src;\n              imgWindow = window.open(src);\n              imgWindow.document.write(image.outerHTML);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onPreview(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(ImgCrop, {\n    rotate: true\n  }, __jsx(Upload, {\n    action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\n    listType: \"picture-card\",\n    fileList: fileList,\n    onChange: onChange,\n    onPreview: onPreview\n  }, fileList.length < 5 && \"+ Upload\")), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\"\n  }, \"\\uC81C\\uCD9C\"));\n};\n\n_s(ImageInput, \"DPlwTHyoomOmUEJyEefg5NxYD/w=\");\n\n_c = ImageInput;\nexport default ImageInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageInput\");","map":{"version":3,"sources":["C:/Users/hoyuen/Documents/project/project1/frontend/components/Generalui/ImageInput.js"],"names":["React","useState","Upload","ImgCrop","ImageInput","fileList","setFileList","onChange","newFileList","onPreview","file","src","url","Promise","resolve","reader","FileReader","readAsDataURL","originFileObj","onload","result","image","Image","imgWindow","window","open","document","write","outerHTML","length"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,OAAOC,OAAP,MAAoB,eAApB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA;;AAAA,kBACSH,QAAQ,CAAC,EAAD,CADjB;AAAA,MAChBI,QADgB;AAAA,MACNC,WADM;;AAGvB,MAAMC,QAAQ,GAAG,SAAXA,QAAW,OAA+B;AAAA,QAAlBC,WAAkB,QAA5BH,QAA4B;AAC9CC,IAAAA,WAAW,CAACE,WAAD,CAAX;AACD,GAFD;;AAIA,MAAMC,SAAS;AAAA,yEAAG,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACZC,cAAAA,GADY,GACND,IAAI,CAACE,GADC;;AAAA,kBAEXD,GAFW;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAGF,IAAIE,OAAJ,CAAY,UAACC,OAAD,EAAa;AACnC,oBAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,gBAAAA,MAAM,CAACE,aAAP,CAAqBP,IAAI,CAACQ,aAA1B;;AACAH,gBAAAA,MAAM,CAACI,MAAP,GAAgB;AAAA,yBAAML,OAAO,CAACC,MAAM,CAACK,MAAR,CAAb;AAAA,iBAAhB;AACD,eAJW,CAHE;;AAAA;AAGdT,cAAAA,GAHc;;AAAA;AASVU,cAAAA,KATU,GASF,IAAIC,KAAJ,EATE;AAUhBD,cAAAA,KAAK,CAACV,GAAN,GAAYA,GAAZ;AACMY,cAAAA,SAXU,GAWEC,MAAM,CAACC,IAAP,CAAYd,GAAZ,CAXF;AAYhBY,cAAAA,SAAS,CAACG,QAAV,CAAmBC,KAAnB,CAAyBN,KAAK,CAACO,SAA/B;;AAZgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAATnB,SAAS;AAAA;AAAA;AAAA,KAAf;;AAeA,SACE,4BACE,MAAC,OAAD;AAAS,IAAA,MAAM;AAAf,KACE,MAAC,MAAD;AACE,IAAA,MAAM,EAAC,kDADT;AAEE,IAAA,QAAQ,EAAC,cAFX;AAGE,IAAA,QAAQ,EAAEJ,QAHZ;AAIE,IAAA,QAAQ,EAAEE,QAJZ;AAKE,IAAA,SAAS,EAAEE;AALb,KAOGJ,QAAQ,CAACwB,MAAT,GAAkB,CAAlB,IAAuB,UAP1B,CADF,CADF,EAYE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,EAAC;AAAhC,oBAZF,CADF;AAkBD,CAxCD;;GAAMzB,U;;KAAAA,U;AA0CN,eAAeA,UAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Upload } from \"antd\";\r\nimport ImgCrop from \"antd-img-crop\";\r\n\r\nconst ImageInput = () => {\r\n  const [fileList, setFileList] = useState([]);\r\n\r\n  const onChange = ({ fileList: newFileList }) => {\r\n    setFileList(newFileList);\r\n  };\r\n\r\n  const onPreview = async (file) => {\r\n    let src = file.url;\r\n    if (!src) {\r\n      src = await new Promise((resolve) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file.originFileObj);\r\n        reader.onload = () => resolve(reader.result);\r\n      });\r\n    }\r\n    const image = new Image();\r\n    image.src = src;\r\n    const imgWindow = window.open(src);\r\n    imgWindow.document.write(image.outerHTML);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ImgCrop rotate>\r\n        <Upload\r\n          action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n          listType=\"picture-card\"\r\n          fileList={fileList}\r\n          onChange={onChange}\r\n          onPreview={onPreview}\r\n        >\r\n          {fileList.length < 5 && \"+ Upload\"}\r\n        </Upload>\r\n      </ImgCrop>\r\n      <Button type=\"primary\" htmlType=\"submit\">\r\n        제출\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImageInput;\r\n"]},"metadata":{},"sourceType":"module"}